function JR = Jacobian_finder_Euler_noA_v42(n_v_near,n_p_near, ...
                                n_spines_near, ...
                                n_spines_far, ...
                                n_lambda2_uk_near,n_sigma2_uk_near, ...
                                n_v_sep,n_v_far,n_p_far, ...
                                theta_c,del_h, ...
                                spine_lengths,n_spines, ...
                                spine_feet_locator,spine_feet_nodes, ...
                                n_spines_incr,n_v, ...
                                spine_tip_nodes,alpha_s,R_spines, ...
                                l,Nodes_rz,S,el_s_loc_nodes, ...
                                n_Gaussian_Q,T,xi_G,eta_G, ...
                                phi_G,psi_G,W_G, ...
                                gr,gz, ...
                                Re,St,Ca, ...
                                delta_t, ...
                                w_bar,u_bar, ...
                                Nodes_rz_minus1,u_minus1,w_minus1, ...
                                lp,p,psi_star_G, ...
                                n_el_near,c1,contact_line, ...
                                sigma1,us1,ws1,rhos1, ...
                                l_1,l1_1,S_1,el1_s_loc_nodes, ...
                                alpha_1, ...
                                Tg,Lg,Dg,Eg,Bg, ...
                                n_lGaussian_Q, ...
                                phi1_lG,phi1_xi_lG, ...
                                W_lG, ...
                                pg,rhos1_minus1, ...
                                n1_el_near,c2, ...
                                Ts,Be,Ls,Ds,Es, ...
                                us2,ws2,rhos2, ...
                                l_2,l2_2,S_2,el2_s_loc_nodes, ...
                                phi2_lG,phi2_eta_lG,alpha_2, ...
                                u_s,w_s,lambda2,rhos2_minus1, ...
                                n2_el_near, ...
                                n4_el,l_4,l4_4,S_4, ...
                                el4_s_loc_nodes, ...
                                phi4_lG,phi4_xi_lG,alpha_4, ...
                                n_v_pre_start_far,n_el, ...
                                u_far,w_far,n_p_pre_start_far, ...
                                theta_a,n1_el, ...
                                n_spines_pre_start_far, ...
                                n2_el,n3_el,l_3, ...
                                S_3,el3_s_loc_nodes, ...
                                phi3_xi_lG,phi3_lG,alpha_3, ...
                                alpha_5, ...
                                n_Mr_near,n_Mz_near,n_C_near, ...
                                n_S2_near,n_I_near,n_E2_near, ...
                                n_D2_near,n_T2_near, ...
                                n_S1_near,n_K_near,n_E1_near, ...
                                n_D1_near,n_T1_near, ...
                                n_Mr_far,n_Mz_far,n_C_far, ...
                                n_S2_far,n_I_far,n_E2_far, ...
                                n_D2_far,n_T2_far, ...
                                n_S1_far,n_K_far,n_E1_far, ...
                                n_D1_far,n_T1_far, ...
                                Mr_nodes_near,Mz_nodes_near, ...
                                C_nodes_near, ...
                                I_nodes_near, ...
                                S2_nodes_near,S1_nodes_near, ...
                                Mr_nodes_far,Mz_nodes_far, ...
                                C_nodes_far, ...
                                S2_nodes_far, ...
                                S1_nodes_far, ...
                                K_nodes_near, ...
                                K_nodes_far, ...
                                E2_nodes_near, ...
                                E1_nodes_near, ...
                                E1_nodes_far, ...
                                n_p_sep, ...
                                n_u_uk_near,n_w_uk_near, ...
                                n_p_uk_near, ...
                                n_us2_uk_near,n_ws2_uk_near, ...
                                n_rhos2_uk_near, ...
                                n_us1_uk_near,n_ws1_uk_near, ...
                                n_rhos1_uk_near, ...
                                n_u_uk_far,n_w_uk_far,n_p_uk_far, ...
                                n_us2_uk_far,n_ws2_uk_far, ...
                                n_rhos2_uk_far, ...
                                n_us1_uk_far,n_ws1_uk_far, ...
                                n_rhos1_uk_far,n_sigma1_uk_far, ...
                                unodes_nums_uk_near, ...
                                wnodes_nums_uk_near, ...
                                pnodes_nums_uk_near, ...
                                lambda2nodes_nums_uk_near, ...
                                us2nodes_nums_uk_near, ...
                                ws2nodes_nums_uk_near, ...
                                sigma2nodes_nums_uk_near, ...
                                sigma2nodes_nums_uk_far, ...
                                n_sigma1_uk_near, ...
                                n_lambda2_uk_far, ...
                                n_sigma2_uk_far, ...
                                unodes_nums_uk_far, ...
                                wnodes_nums_uk_far, ...
                                Cs,Cg, ...
                                pnodes_nums_uk_far, ...
                                lambda2nodes_nums_uk_far, ...
                                us2nodes_nums_uk_far, ...
                                ws2nodes_nums_uk_far, ...
                                us1nodes_nums_uk_far, ...
                                ws1nodes_nums_uk_far, ...
                                sigma1nodes_nums_uk_near, ...
                                sigma1nodes_nums_uk_far, ...
                                rhos1nodes_nums_uk_near, ...
                                rhos1nodes_nums_uk_far, ...
                                rhos2nodes_nums_uk_near, ...
                                rhos2nodes_nums_uk_far, ...
                                Tmat1,Tmat2,Tmat3, ...
                                Tmat4,Tmat5, ...
                                LE_to_TE_1,LE_to_TE_2, ...
                                LE_to_TE_3,LE_to_TE_4, ...
                                LE_to_TE_5, ...
                                n5_el,l_5,phi5_lG, ...
                                phi5_eta_lG,S_5, ...
                                el5_s_loc_nodes, ...
                                us1nodes_nums_uk_near, ...
                                ws1nodes_nums_uk_near, ...
                                I_nodes_far, ...
                                E2_nodes_far, ...
                                D2_nodes_near, ...
                                D1_nodes_near,D2_nodes_far, ...
                                D1_nodes_far, ...
                                a1,o2,n_nodes_const_per_spine, ...
                                n_el_sing)
                        
%creating variables to store data for eigen-solution and singular element
psi_star_G(2,1:n_Gaussian_Q) = zeros(1,n_Gaussian_Q);
% u_check = zeros(1,n_Gaussian_Q);
% w_check = zeros(1,n_Gaussian_Q);
% dr_u_check = zeros(1,n_Gaussian_Q);
% dz_u_check = zeros(1,n_Gaussian_Q);
% dr_w_check = zeros(1,n_Gaussian_Q);
% dz_w_check = zeros(1,n_Gaussian_Q);
% dlambda_eig_u_check = zeros(1,n_Gaussian_Q);
% dlambda_eig_w_check = zeros(1,n_Gaussian_Q);
% drr_u_check = zeros(1,n_Gaussian_Q);
% drz_u_check = zeros(1,n_Gaussian_Q);
% dzz_u_check = zeros(1,n_Gaussian_Q);
% drlambda_eig_u_check = zeros(1,n_Gaussian_Q);
% dzlambda_eig_u_check = zeros(1,n_Gaussian_Q);
% drr_w_check = zeros(1,n_Gaussian_Q);
% drz_w_check = zeros(1,n_Gaussian_Q);
% dzz_w_check = zeros(1,n_Gaussian_Q);
% drlambda_eig_w_check = zeros(1,n_Gaussian_Q);
% dzlambda_eig_w_check = zeros(1,n_Gaussian_Q);
% dphi_u_check = zeros(1,n_Gaussian_Q);
% dphi_w_check = zeros(1,n_Gaussian_Q);
% drphi_u_check = zeros(1,n_Gaussian_Q);
% dzphi_u_check = zeros(1,n_Gaussian_Q);
% drphi_w_check = zeros(1,n_Gaussian_Q);
% dzphi_w_check = zeros(1,n_Gaussian_Q);

%Zeroing variables used in triangle integration
det_Je = zeros(1,n_Gaussian_Q);

%Zeroing variables used in line integration
r_prime_lGaussian = zeros(1,n_lGaussian_Q);
z_prime_lGaussian = zeros(1,n_lGaussian_Q);
det_Jle = zeros(1,n_lGaussian_Q);
                                
%Creating blocks of the Jacobian
%1st row of blocks
diff_u_bar_Mr_near = zeros(n_v_near,n_v_near);
diff_w_bar_Mr_near = zeros(n_v_near,n_v_near);
diff_p_near_Mr_near = zeros(n_v_near,n_p_near);
diff_h_Mr_near = zeros(n_v_near,n_spines_near);
diff_sigma1_Mr_near = zeros(n_v_near,n_spines_near);
diff_lambda2_near_Mr_near = zeros(n_v_near,n_lambda2_uk_near);
diff_us2_near_Mr_near = zeros(n_v_near,n_spines_near);
diff_ws2_near_Mr_near = zeros(n_v_near,n_spines_near);
% diff_A_Mr_near = zeros(n_v_near,1);
%2nd Row of blocks
diff_u_bar_Mz_near = zeros(n_v_near,n_v_near);
diff_w_bar_Mz_near = zeros(n_v_near,n_v_near);
diff_p_near_Mz_near = zeros(n_v_near,n_p_near);
diff_h_Mz_near = zeros(n_v_near,n_spines_near);
diff_sigma1_Mz_near = zeros(n_v_near,n_spines_near);
diff_lambda2_near_Mz_near = zeros(n_v_near,n_spines_near);
diff_us2_near_Mz_near = zeros(n_v_near,n_spines_near);
diff_ws2_near_Mz_near = zeros(n_v_near,n_spines_near);
% diff_A_Mz_near = zeros(n_v_near,1);
%3rd row of blocks
diff_u_bar_C_near = zeros(n_p_near,n_v_near);
diff_w_bar_C_near = zeros(n_p_near,n_v_near);
diff_h_C_near = zeros(n_p_near,n_spines_near);
%4th row of blocks
diff_u_bar_S2_near = zeros(n_spines_near,n_v_near);
diff_w_bar_S2_near = zeros(n_spines_near,n_v_near);
diff_us2_S2_near = zeros(n_spines_near,n_spines_near);
diff_ws2_S2_near = zeros(n_spines_near,n_spines_near);
diff_sigma2_S2_near = zeros(n_spines_near,n_spines_near);
diff_h_S2_near = zeros(n_spines_near,n_spines_near);
% diff_A_S2_near = zeros(n_spines_near,1);
%5th row of blocks
diff_us2_I_near = zeros(n_spines_near,n_spines_near);
diff_ws2_I_near = zeros(n_spines_near,n_spines_near);
diff_h_I_near = zeros(n_spines_near,n_spines_near);
%6th row of blocks 
diff_u_bar_E2_near = zeros(n_spines_near,n_v_near);
diff_w_bar_E2_near = zeros(n_spines_near,n_v_near);
diff_us2_E2_near = zeros(n_spines_near,n_spines_near);
diff_ws2_E2_near = zeros(n_spines_near,n_spines_near);
diff_rhos2_E2_near = zeros(n_spines_near,n_spines_near);
diff_h_E2_near = zeros(n_spines_near,n_spines_near);
% diff_A_E2_near = zeros(n_spines_near,1);
%7th row of the Jacobian
diff_rhos2_D2_near = zeros(n_spines_near,n_spines_near);
diff_us2_D2_near = zeros(n_spines_near,n_spines_near);
diff_ws2_D2_near = zeros(n_spines_near,n_spines_near);
diff_h_D2_near = zeros(n_spines_near,n_spines_near);
%8th row of the Jacobian is fixed
%9th row of the Jacobian
diff_u_bar_S1_near = zeros(n_spines_near,n_v_near);
diff_w_bar_S1_near = zeros(n_spines_near,n_v_near);
diff_us1_S1_near = zeros(n_spines_near,n_spines_near);
diff_ws1_S1_near = zeros(n_spines_near,n_spines_near);
diff_sigma1_S1_near = zeros(n_spines_near,n_spines_near);
diff_h_S1_near = zeros(n_spines_near,n_spines_near);
% diff_A_S1_near = zeros(n_spines_near,1);
%10th row of the Jacobian
diff_us1_K_near = zeros(n_spines_near,n_spines_near);
diff_ws1_K_near = zeros(n_spines_near,n_spines_near);
diff_h_K_near = zeros(n_spines_near,n_spines_near);
%11th row of the Jacobian
diff_u_bar_E1_near = zeros(n_spines_near,n_v_near);
diff_w_bar_E1_near = zeros(n_spines_near,n_v_near);
diff_us1_E1_near = zeros(n_spines_near,n_spines_near);
diff_ws1_E1_near = zeros(n_spines_near,n_spines_near);
diff_rhos1_E1_near = zeros(n_spines_near,n_spines_near);
diff_h_E1_near = zeros(n_spines_near,n_spines_near);
% diff_A_E1_near = zeros(n_spines_near,1);
%12th row of the Jacobian
diff_us1_D1_near = zeros(n_spines_near,n_spines_near);
diff_ws1_D1_near = zeros(n_spines_near,n_spines_near);
diff_rhos1_D1_near = zeros(n_spines_near,n_spines_near);
diff_h_D1_near = zeros(n_spines_near,n_spines_near);
%13th row of the Jacobian is fixed
%14th row of the Jacobian
diff_u_bar_Cu = zeros(n_v_sep,n_v_near);
diff_h_Cu = zeros(n_v_sep,n_spines_near);
diff_u_far_Cu = zeros(n_v_sep,n_v_far);
% diff_A_Cu = zeros(n_v_sep,1);
%15th row of blocks
diff_w_bar_Cw = zeros(n_v_sep,n_v_near);
diff_h_Cw = zeros(n_v_sep,n_spines_near);
diff_w_far_Cw = zeros(n_v_sep,n_v_far);
% diff_A_Cw = zeros(n_v_sep,1);
%16th row of blocks
diff_u_far_Mr_far = zeros(n_v_far,n_v_far);
diff_w_far_Mr_far = zeros(n_v_far,n_v_far);
diff_p_far_Mr_far = zeros(n_v_far,n_p_far);
diff_lambda2_far_Mr_far = zeros(n_v_far,n_spines_far);
diff_us2_far_Mr_far = zeros(n_v_far,n_spines_far);
diff_ws2_far_Mr_far = zeros(n_v_far,n_spines_far);
diff_h_Mr_far = zeros(n_v_far,n_spines_far+1);
diff_sigma1_Mr_far = zeros(n_v_far,n_spines_far);
%17th Row of blocks
diff_u_far_Mz_far = zeros(n_v_far,n_v_far);
diff_w_far_Mz_far = zeros(n_v_far,n_v_far);
diff_p_far_Mz_far = zeros(n_v_far,n_p_far);
diff_us2_far_Mz_far = zeros(n_v_far,n_spines_far);
diff_ws2_far_Mz_far = zeros(n_v_far,n_spines_far);
diff_lambda2_far_Mz_far = zeros(n_v_far,n_spines_far);
diff_h_Mz_far = zeros(n_v_far,n_spines_far+1);
diff_sigma1_Mz_far = zeros(n_v_far,n_spines_far);
%18th row of blocks
diff_u_far_C_far = zeros(n_p_far,n_v_far);
diff_w_far_C_far = zeros(n_p_far,n_v_far);
diff_h_C_far = zeros(n_p_far,n_spines_far+1);
%19th row of blocks
diff_u_far_S2_far = zeros(n_spines_far,n_v_far);
diff_w_far_S2_far = zeros(n_spines_far,n_v_far);
diff_us2_S2_far = zeros(n_spines_far,n_spines_far);
diff_ws2_S2_far = zeros(n_spines_far,n_spines_far);
diff_sigma2_S2_far = zeros(n_spines_far,n_spines_far);
diff_h_S2_far = zeros(n_spines_far,n_spines_far+1);
%20th row of blocks
diff_us2_I_far = zeros(n_spines_far,n_spines_far);
diff_ws2_I_far = zeros(n_spines_far,n_spines_far);
diff_h_I_far = zeros(n_spines_far,n_spines_far+1);
%21th row of blocks
diff_u_far_E2_far = zeros(n_spines_far,n_v_far);
diff_w_far_E2_far = zeros(n_spines_far,n_v_far);
diff_us2_E2_far = zeros(n_spines_far,n_spines_far);
diff_ws2_E2_far = zeros(n_spines_far,n_spines_far);
diff_rhos2_E2_far = zeros(n_spines_far,n_spines_far);
diff_h_E2_far = zeros(n_spines_far,n_spines_far+1);
%22th row of blocks
diff_us2_D2_far = zeros(n_spines_far,n_spines_far);
diff_ws2_D2_far = zeros(n_spines_far,n_spines_far);
diff_rhos2_D2_far = zeros(n_spines_far,n_spines_far);
diff_h_D2_far = zeros(n_spines_far,n_spines_far+1);
%23rd row is constant (strong form of state equation)
%24th row of blocks 
diff_u_far_S1_far = zeros(n_spines_far,n_v_far);
diff_w_far_S1_far = zeros(n_spines_far,n_v_far);
diff_us1_S1_far = zeros(n_spines_far,n_spines_far);
diff_ws1_S1_far = zeros(n_spines_far,n_spines_far);
diff_sigma1_S1_far = zeros(n_spines_far,n_spines_far);
diff_h_S1_far = zeros(n_spines_far,n_spines_far+1);
%25th row of blocks
diff_us1_K_far = zeros(n_spines_far,n_spines_far);
diff_ws1_K_far = zeros(n_spines_far,n_spines_far);
diff_h_K_far = zeros(n_spines_far,n_spines_far+1);
%26th row of blocks
diff_u_far_E1_far = zeros(n_spines_far,n_v_far);
diff_w_far_E1_far = zeros(n_spines_far,n_v_far);
diff_us1_E1_far = zeros(n_spines_far,n_spines_far);
diff_ws1_E1_far = zeros(n_spines_far,n_spines_far);
diff_rhos1_E1_far = zeros(n_spines_far,n_spines_far);
diff_h_E1_far = zeros(n_spines_far,n_spines_far+1);
%27th row of blocks
diff_us1_D1_far = zeros(n_spines_far,n_spines_far);
diff_ws1_D1_far = zeros(n_spines_far,n_spines_far);
diff_rhos1_D1_far = zeros(n_spines_far,n_spines_far);
diff_h_D1_far = zeros(n_spines_far,n_spines_far+1);
%28th row of blocks is constant (strong form of state equation)
%29th row needs no zeroing (Young's)
%30st row needs no zeroing (pressure limit)

m1_r = -cos(theta_c);
m1_z =  sin(theta_c);
m2_r = -1;
m2_z =  0;
diff_theta_c_m1_r = sin(theta_c);
diff_theta_c_m1_z = cos(theta_c);

%Obs.: notice we have an extra column for the block that 
%corresponds to the Jacobian of the far field variables with 
%respect to the domain size, this will later be removed and place 
%with in the column that corresponds to the first spine in the 
%global Jacobian

%finding \partial_{h_1}r and \partial_{h_1}z numerically
[f_plus_nodes,~] ...
    = nodes_relocator_split_v02([(1+del_h)*spine_lengths(1); ...
                                 spine_lengths(2:end)], ...
                                spine_feet_locator,n_spines, ...
                                n_spines_incr,n_v,alpha_s, ...
                                n_nodes_const_per_spine, ...
                                n_el_sing);
[f_minus_nodes,~] ...
    = nodes_relocator_split_v02([(1-del_h)*spine_lengths(1); ...
                                 spine_lengths(2:end)], ...
                                 spine_feet_locator,n_spines, ...
                                 n_spines_incr,n_v,alpha_s, ...
                                 n_nodes_const_per_spine, ...
                                 n_el_sing);
diff_h0_rz = (f_plus_nodes-f_minus_nodes) ...
             /(2*del_h*spine_lengths(1));

%         figure
%         quiver(Nodes_rz(:,1),Nodes_rz(:,2), ...
%                diff_h0_rz(:,1),diff_h0_rz(:,2),'color',[0 0 0])
%         set(gca,'FontSize',24)
%         axis equal

%Finding \partial_h{r} and \partial_h{z} exactly
diff_h_rz = zeros(n_v,2);
for ss = 2:n_spines-1
    for rr = spine_feet_nodes(ss):spine_tip_nodes(ss)
        diff_h_rz(rr,1) = alpha_s(rr)...
                          *sin(alpha_s(rr) ...
                          *spine_lengths(ss) ...
                          /R_spines(ss));
        diff_h_rz(rr,2) = alpha_s(rr) ...
                          *cos(alpha_s(rr) ...
                          *spine_lengths(ss) ...
                          /R_spines(ss));
    end
end
for rr = spine_feet_nodes(end):spine_tip_nodes(end)
    diff_h_rz(rr,1) = 0;
    diff_h_rz(rr,2) = alpha_s(rr);
end

%         figure
%         quiver(Nodes_rz(:,1),Nodes_rz(:,2), ...
%                diff_h_rz(:,1),diff_h_rz(:,2),'color',[0 0 0])
%         set(gca,'FontSize',24)
%         axis equal

%Finding the Jacobian

% %Measured contact angle
% r_le = Nodes_rz(l_1(1,:),1);
% z_le = Nodes_rz(l_1(1,:),2);
% min_r_le = min(r_le);
% min_z_le = min(z_le);
% r_prime_contact_line = (phi1_xi(:,2)')*(r_le-min_r_le);
% z_prime_contact_line = (phi1_xi(:,2)')*(z_le-min_z_le);
% % aux = max(abs(r_prime_contact_line),abs(z_prime_contact_line));
% % t1_r = r_prime_contact_line/aux;
% % t1_z = z_prime_contact_line/aux;
% % norm_tan1_cl = sqrt(t1_r^2+t1_z^2)*aux;
% % theta_m = atan2(z_prime_contact_line,-r_prime_contact_line);
% % %Finding the lambda constant of the eigen-solution
% % lambda_eig = pi/theta_m;
% %Finding total number of spines whose size affect this line 
% %element
% n_s_e = length(S_1(1,:));
% %Finding derivatives of the nodal positions with respect to the
% %spine legnths
% diff_h_r_le = zeros(3,n_s_e);
% diff_h_z_le = zeros(3,n_s_e);
% diff_h_r_le(:,1) = diff_h0_rz(l_1(1,:),1);
% diff_h_z_le(:,1) = diff_h0_rz(l_1(1,:),2);
% for qq = 2:n_s_e
%     for rr = el1_s_loc_nodes(1,qq)
%         diff_h_r_le(rr,qq) = diff_h_rz(l_1(1,rr),1);
%         diff_h_z_le(rr,qq) = diff_h_rz(l_1(1,rr),2);
%     end
% end
% diff_h_r_prime_contact_line = zeros(1,n_s_e);
% diff_h_z_prime_contact_line = zeros(1,n_s_e);
% for qq = 1:n_s_e
%     %Finding the derivatives of r' = \partial_\eta r and 
%     %z' = \partial_\eta z with respect to the spine 
%     %lengths at each Gaussian quadrature point
%     diff_h_r_prime_contact_line(qq) ...
%         = (phi1_xi(:,2)')*diff_h_r_le(:,qq);
%     diff_h_z_prime_contact_line(qq) ...
%         = (phi1_xi(:,2)')*diff_h_z_le(:,qq);
% end
% diff_h_theta_m = (  cos(theta_m)*diff_h_z_prime_contact_line ...
%                   + sin(theta_m)*diff_h_r_prime_contact_line ...
%                  )/norm_tan1_cl;

%Adding the contributions of triangular elements to the Jacobian of
%the momentum and continuity equations
%Singular element
for ee = 1:n_el_sing %go through every element
    %Findinding the r and z coordinates of the element's nodes
    r_e = Nodes_rz(l(ee,1:6),1);
    z_e = Nodes_rz(l(ee,1:6),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %Finding total number of spines whose size affects this element 
    %(the first spine for all plus the ones passing through the 
    %element)
    n_s_e = length(S(ee,:));
    %Finding the numbers of the spines whose lengths affect the 
    %shape of the element
    spines_e = S(ee,:);
    %Find the derivative of each of the nodal positions with 
    % respect to each of the spines that affect this particular 
    %element
    diff_h_r_e = zeros(6,n_s_e);
    diff_h_z_e = zeros(6,n_s_e);
    diff_h_r_e(:,1) = diff_h0_rz(l(ee,:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(ee,:),2);
    for qq = 2:n_s_e
        for rr = el_s_loc_nodes{ee,qq}
            diff_h_r_e(rr,qq) = diff_h_rz(l(ee,rr),1);
            diff_h_z_e(rr,qq) = diff_h_rz(l(ee,rr),2);
        end
    end
    %Zeroing the derivatives of the coordinates r_e and z_e with
    %respect to the spine lengths at each Gaussian quadrature point
    diff_h_r_e_Gaussian = zeros(n_Gaussian_Q,n_s_e);
    diff_h_z_e_Gaussian = zeros(n_Gaussian_Q,n_s_e);
    for pp = 1:n_Gaussian_Q
        for qq = 1:n_s_e
            %Finding the derivatives of the coordinates r_e and z_e
            %with respect to the spine lengths at each Gaussian
            %quadrature point
            diff_h_r_e_Gaussian(pp,qq) ...
                = (diff_h_r_e(:,qq)')*phi_G(:,pp);
            diff_h_z_e_Gaussian(pp,qq) ...
                = (diff_h_z_e(:,qq)')*phi_G(:,pp);
        end
    end
    %Zeroing matrix of derivatives with respect to the spine
    %lengths (evaluated at Gaussian-integration points)
    diff_h_det_Je = zeros(n_Gaussian_Q,n_s_e);
    %Zeroing matrix of derivatives with respect to spine lengths
    %(evaluated at eah Gaussian integration point)
    diff_h_psi_star_2_G = zeros(n_Gaussian_Q,n_s_e);
    for pp = 1:n_Gaussian_Q
        % Finding the determinant of the Jacobian of the 
        % isoparametric map at each Gaussian quadrature point
        det_Je(pp) = (r_e'-min_r_e)*T{pp}*(z_e-min_z_e);
        %Finding the singular hat functions at each
        %Gaussian-integration point
        r_pp = (r_e'-Nodes_rz(1,1))*phi_G(:,pp);
        z_pp = (z_e'-Nodes_rz(1,2))*phi_G(:,pp);
        divider = max(abs(r_pp),abs(z_pp));
        r_pp_div = r_pp/divider;
        z_pp_div = z_pp/divider;
        rho_l = sqrt(r_pp_div^2+z_pp_div^2);
        rho_l = rho_l*divider;
        lnR_pp = log(rho_l);
        psi_star_G(2,pp) = -(xi_G(pp)+eta_G(pp))*lnR_pp/2;
        for qq = 1:n_s_e
            %Finding the derivatives of the singular hat functions 
            %with respect to each spine length at each
            %Gaussian-integration point
            diff_h_psi_star_2_G(pp,qq) ...
                = psi_G(2,pp) ...
                  *(  r_pp ...
                      *(  (diff_h_r_e(:,qq)') ...
                          *phi_G(:,pp) ...
                        - diff_h_r_e(2,qq) ...
                       ) ...
                    + z_pp ...
                      *(  (diff_h_z_e(:,qq)') ...
                          *phi_G(:,pp) ...
                        - diff_h_z_e(2,qq) ...
                       ) ...
                   ) ...
                  /(r_pp^2+z_pp^2);
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *T{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *T{pp} ...
                                     *diff_h_z_e(:,qq);
        end
%         %Data for eigensolution
%         theta_pol = atan2(z_pp,r_pp);
%         phi_pp = pi - theta_m - theta_pol;
%         theta_pp = lambda_eig*phi_pp;
%         c_theta_pp = cos(theta_pp);
%         s_theta_pp = sin(theta_pp);
%         rho_l_minus2_pp = rho_l^(lambda_eig-2);
%         rho_l_minus4_pp = rho_l^(lambda_eig-4);
%         rho_l_minus6_pp = rho_l^(lambda_eig-6);
%         ln_rho2_pp = 2*log(rho_l);
%         % Find the values of u_check at the Gaussian sampling 
%         %points
%         u_check(pp) = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of w_check at the Gaussian sampling 
%         %points
%         w_check(pp) = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of dr_u_check at the Gaussian sampling 
%         %points
%         dr_u_check(pp) = dr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_u_check at the Gaussian sampling 
%         %points
%         dz_u_check(pp) = dz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_u_check(pp) ...
%             = dlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of dr_w_check at the Gaussian sampling 
%         %points
%         dr_w_check(pp) = dr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_w_check at the Gaussian sampling 
%         %points
%         dz_w_check(pp) = dz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_w_check(pp) ...
%             = dlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of drr_u_check at the Gaussian sampling 
%         %points
%         drr_u_check(pp) = drr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_u_check at the Gaussian sampling 
%         %points
%         drz_u_check(pp) = drz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_u_check at the Gaussian sampling 
%         %points
%         dzz_u_check(pp) = dzz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_u_check at the Gaussian 
%         %sampling points
%         drlambda_eig_u_check(pp) ...
%             = drlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dzlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_u_check(pp) ...
%             = dzlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp); 
%         % Find the values of drr_w_check at the Gaussian sampling 
%         %points
%         drr_w_check(pp) = drr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_w_check at the Gaussian sampling 
%         %points
%         drz_w_check(pp) = drz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_w_check at the Gaussian sampling 
%         %points
%         dzz_w_check(pp) = dzz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_w_check at the Gaussian 
%         %sampling points
%         drlambda_eig_w_check(pp) ...
%             = drlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);  
%         %Find the values of dzlambda_eig_w_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_w_check(pp) ...
%             = dzlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp); 
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_u_check(pp) ...
%             = dphi_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_w_check(pp) ...
%             = dphi_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_u_check(pp) ...
%             = drphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_u_check(pp) ...
%             = dzphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_w_check(pp) ...
%             = drphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_w_check(pp) ...
%             = dzphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
    end
    for ii = 1:6 %select each basis function that has support on 
        %the chosen element
        %
%         %Zeroing variables we need to calculate the derivatives of 
%         %Mr_i with respet to A
%         a_ichu = 0;
%         a_ichudrchu = 0;
%         a_ichwdzchu = 0;
%         ar_idrchu = 0;
%         az_idzchu = 0;
%         %Zeroing variables we need to calculate the derivatives of
%         %Mz_i with respet to A
%         a_ichw = 0;
%         a_ichudrchw = 0;
%         a_ichwdzchw = 0;
%         ar_idrchw = 0;
%         az_idzchw = 0;
%         %Variables needed to calculate the derivative of Mr_i with
%         %respect to theta_m
%         diff_theta_m_a_ichu = 0;
%         diff_theta_m_a_ichudrchu = 0;
%         diff_theta_m_a_ichwdzchu = 0;
%         diff_theta_m_ar_idrchu = 0;
%         diff_theta_m_az_idzchu = 0;
%         %Variables needed to calculate the derivative of Mz_i with
%         %respect to theta_m
%         diff_theta_m_a_ichw = 0;
%         diff_theta_m_a_ichudrchw = 0;
%         diff_theta_m_a_ichwdzchw = 0;
%         diff_theta_m_ar_idrchw = 0;
%         diff_theta_m_az_idzchw = 0;
        %Variables we need to calculate the derivatives of Mr_i
        %with respet to h_q
        diff_h_a_igr = zeros(1,n_s_e);
%         diff_h_a_ichu = zeros(1,n_s_e);
%         diff_h_a_ichudrchu = zeros(1,n_s_e);
%         diff_h_a_ichwdzchu = zeros(1,n_s_e);
%         diff_h_ar_idrchu = zeros(1,n_s_e);
%         diff_h_az_idzchu = zeros(1,n_s_e);
        %Variables we need to calculate the derivatives of Mz_i
        %with respet to h_q
        diff_h_a_igz = zeros(1,n_s_e);
%         diff_h_a_ichw = zeros(1,n_s_e);
%         diff_h_a_ichudrchw = zeros(1,n_s_e);
%         diff_h_a_ichwdzchw = zeros(1,n_s_e);
%         diff_h_ar_idrchw = zeros(1,n_s_e);
%         diff_h_az_idzchw = zeros(1,n_s_e);
        for pp = 1:n_Gaussian_Q
%             %Variables we need to calculate the derivatives of 
%             %Mr_i with respet to A
%             a_ichu = a_ichu ...
%                      + W_G(pp) ...
%                        *phi_G(ii,pp) ...
%                        *u_check(pp) ...
%                        *det_Je(pp);
%             a_ichudrchu = a_ichudrchu ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *u_check(pp) ...
%                             *dr_u_check(pp) ...
%                             *det_Je(pp);
%             a_ichwdzchu = a_ichwdzchu ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *w_check(pp) ...
%                             *dz_u_check(pp) ...
%                             *det_Je(pp);
%             ar_idrchu = ar_idrchu ...
%                         + W_G(pp) ...
%                           *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                           *dr_u_check(pp);
%             az_idzchu = az_idzchu ...
%                         - W_G(pp) ...
%                           *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                           *dz_u_check(pp);
%             %Variables we need to calculate the derivatives of 
%             %Mz_i with respet to A
%             a_ichw = a_ichw ...
%                      + W_G(pp) ...
%                        *phi_G(ii,pp) ...
%                        *w_check(pp) ...
%                        *det_Je(pp);
%             a_ichudrchw = a_ichudrchw ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *u_check(pp) ...
%                             *dr_w_check(pp) ...
%                             *det_Je(pp);
%             a_ichwdzchw = a_ichwdzchw ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *w_check(pp) ...
%                             *dz_w_check(pp) ...
%                             *det_Je(pp);
%             ar_idrchw = ar_idrchw ...
%                         + W_G(pp) ...
%                           *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                           *dr_w_check(pp);
%             az_idzchw = az_idzchw ...
%                         - W_G(pp) ...
%                           *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                           *dz_w_check(pp);
%             %Variables needed to calculate the derivative of Mr_i
%             %with respect to theta_m
%             diff_theta_m_a_ichu ...
%                 = diff_theta_m_a_ichu ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_a_ichudrchu ...
%                 = diff_theta_m_a_ichudrchu ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     *dr_u_check(pp) ...
%                     *det_Je(pp) ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *u_check(pp) ...
%                     *(  drlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_u_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_a_ichwdzchu ...
%                 = diff_theta_m_a_ichwdzchu ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     *dz_u_check(pp) ...
%                     *det_Je(pp) ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *w_check(pp) ...
%                     *(  dzlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_u_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_ar_idrchu ...
%                 = diff_theta_m_ar_idrchu ...
%                   + W_G(pp) ...
%                     *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                     *(  drlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_u_check(pp) ...
%                      );
%             diff_theta_m_az_idzchu ...
%                 = diff_theta_m_az_idzchu ...
%                   - W_G(pp) ...
%                     *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                     *(  dzlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_u_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of Mz_i
%             %with respect to theta_m
%             diff_theta_m_a_ichw ...
%                 = diff_theta_m_a_ichw ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_a_ichudrchw ...
%                 = diff_theta_m_a_ichudrchw ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     *dr_w_check(pp) ...
%                     *det_Je(pp) ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *u_check(pp) ...
%                     *(  drlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_w_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_a_ichwdzchw ...
%                 = diff_theta_m_a_ichwdzchw ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     *dz_w_check(pp) ...
%                     *det_Je(pp) ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *w_check(pp) ...
%                     *(  dzlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_w_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_ar_idrchw ...
%                 = diff_theta_m_ar_idrchw ...
%                   + W_G(pp) ...
%                     *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                     *(  drlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_w_check(pp) ...
%                      );
%             diff_theta_m_az_idzchw ...
%                 = diff_theta_m_az_idzchw ...
%                   - W_G(pp) ...
%                     *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                     *(  dzlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_w_check(pp) ...
%                      );
            for qq = 1:n_s_e
                %Variables we need to calculate the derivatives of 
                %Mr_i with respet to h_q
                diff_h_a_igr(qq) ...
                    = diff_h_a_igr(qq) ...
                      + W_G(pp) ...
                        *phi_G(ii,pp) ...
                        *gr ...
                        *diff_h_det_Je(pp,qq);
%                 diff_h_a_ichu(qq) ...
%                     = diff_h_a_ichu(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Je(pp) ...  
%                 diff_h_a_ichudrchu(qq) ...
%                     = diff_h_a_ichudrchu(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *dr_u_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *dr_u_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *drr_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *dr_u_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *dr_u_check(pp) ...
% %                                 *det_Je(pp) ...
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *u_check(pp) ...
% %                                 *drlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Je(pp) ...
%                 diff_h_a_ichwdzchu(qq) ...
%                     = diff_h_a_ichwdzchu(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *dz_u_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *dz_u_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *dzz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *dz_u_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *dz_u_check(pp) ...
% %                                 *det_Je(pp) ...
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *w_check(pp) ...
% %                                 *dzlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig...
% %                                 *det_Je(pp) ...
%                 diff_h_ar_idrchu(qq) ...
%                     = diff_h_ar_idrchu(qq) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*diff_h_z_e(:,qq)) ...
%                         *dr_u_check(pp) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                         *drr_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                 diff_h_az_idzchu(qq) ...
%                     = diff_h_az_idzchu(qq) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*diff_h_r_e(:,qq)) ...
%                         *dz_u_check(pp) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                         *dzz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
                %Variables we need to calculate the derivatives of 
                %Mz_i with respet to h_q
                diff_h_a_igz(qq) ...
                    = diff_h_a_igz(qq) ...
                      + W_G(pp) ...
                        *phi_G(ii,pp) ...
                        *gz...
                        *diff_h_det_Je(pp,qq);
%                 diff_h_a_ichw(qq) ...
%                     = diff_h_a_ichw(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Je(pp) ...
%                 diff_h_a_ichudrchw(qq) ...
%                     = diff_h_a_ichudrchw(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *dr_w_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *dr_w_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *drr_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *dr_w_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig...
% %                                 *dr_w_check(pp) ...
% %                                 *det_Je(pp) ...
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *u_check(pp) ...
% %                                 *drlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Je(pp) ...
%                 diff_h_a_ichwdzchw(qq) ...
%                     = diff_h_a_ichwdzchw(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *dz_w_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *dz_w_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *dzz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *dz_w_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *dz_w_check(pp) ...
% %                                 *det_Je(pp) ...
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *w_check(pp) ...
% %                                 *dzlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Je(pp) ...
%                 diff_h_ar_idrchw(qq) ...
%                     = diff_h_ar_idrchw(qq) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*diff_h_z_e(:,qq)) ...
%                         *dr_w_check(pp) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                         *drr_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                 diff_h_az_idzchw(qq) ...
%                     = diff_h_az_idzchw(qq) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*diff_h_r_e(:,qq)) ...
%                         *dz_w_check(pp) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                         *dzz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
            end  
        end
%         %Contributions of the derivatives with respect to h that come 
%         %from derivatives with respect to theta_m
%         diff_h_Mr_near(l(ee,ii),S_1(1,:)) ...
%             = diff_h_Mr_near(l(ee,ii),S_1(1,:)) ...
%               + A ...
%                 *(  2 ...
%                     *Re ...
%                     *diff_theta_m_a_ichu ...
%                     *diff_h_theta_m ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *(  diff_theta_m_ar_idrchu ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_az_idzchu ...
%                         *diff_h_theta_m ...
%                      ) ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *Re ...
%                     *A ...
%                     *(  diff_theta_m_a_ichudrchu ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_a_ichwdzchu ...
%                         *diff_h_theta_m ...
%                      ) ...
%                     /3 ...
%                  );
%         diff_h_Mz_near(l(ee,ii),S_1(1,:)) ...
%             = diff_h_Mz_near(l(ee,ii),S_1(1,:)) ...
%               + A ...
%                 *(  2 ...
%                     *Re ...
%                     *diff_theta_m_a_ichw ...
%                     *diff_h_theta_m ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *(  diff_theta_m_ar_idrchw ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_az_idzchw ...
%                         *diff_h_theta_m ...
%                      ) ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *Re ...
%                     *A ...
%                     *(  diff_theta_m_a_ichudrchw ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_a_ichwdzchw ...
%                         *diff_h_theta_m ...
%                      ) ...
%                     /3 ...
%                  );
%         %Contributions of the derivatives with respect to A
%         diff_A_Mr_near(l(ee,ii)) ...
%             = diff_A_Mr_near(l(ee,ii)) ...
%               + (  2 ...
%                    *Re ...
%                    *a_ichu ...
%                    /3 ...
%                  + 2 ...
%                    *delta_t ...
%                    *(  ar_idrchu ...
%                      + az_idzchu ...
%                     ) ...
%                    /3 ...
%                  + 4 ...
%                    *delta_t ...
%                    *Re ...
%                    *A ...
%                    *(  a_ichudrchu ...
%                      + a_ichwdzchu ...
%                     ) ...
%                    /3 ...
%                 );
%         diff_A_Mz_near(l(ee,ii)) ...
%             = diff_A_Mz_near(l(ee,ii)) ...
%               + (  2 ...
%                    *Re ...
%                    *a_ichw ...
%                    /3 ...
%                  + 2 ...
%                    *delta_t ...
%                    *(  ar_idrchw ...
%                      + az_idzchw ...
%                     ) ...
%                    /3 ...
%                  + 4 ...
%                    *delta_t ...
%                    *Re ...
%                    *A ...
%                    *(  a_ichudrchw ...
%                      + a_ichwdzchw ...
%                     ) ...
%                    /3 ...
%                 );
        for qq = 1:n_s_e 
            diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                = diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                  + 2 ...
                    *delta_t ...
                    *(- St ...
                        *diff_h_a_igr(qq) ...
                     ) ...
                    /3;
%                 ...
%                   + 2 ...
%                     *Re ...
%                     *A ...
%                     *diff_h_a_ichu(qq) ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *(  A ...
%                         *(  diff_h_ar_idrchu(qq) ...
%                           + diff_h_az_idzchu(qq) ...
%                          ) ...
%                       + Re ...
%                         *A^2 ...
%                         *(  diff_h_a_ichudrchu(qq) ...
%                           + diff_h_a_ichwdzchu(qq) ...
%                          ) ...
%                      ) ...
%                     /3 ...
            diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                = diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                  + 2 ...
                    *delta_t ...
                    *(- St ...
                        *diff_h_a_igz(qq) ...
                     ) ...
                    /3;
%                 ...
%                   + 2 ...
%                     *Re ...
%                     *A ...
%                     *diff_h_a_ichw(qq) ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *(  A ...
%                         *(  diff_h_ar_idrchw(qq) ...
%                           + diff_h_az_idzchw(qq) ... 
%                          ) ...
%                       + Re ...
%                         *A^2 ...
%                         *(  diff_h_a_ichudrchw(qq) ...
%                           + diff_h_a_ichwdzchw(qq) ...
%                          ) ...
%                      ) ...
%                     /3;
        end
        for jj = 1:6 %compute product of basis function ii by the 
            %part of the solution that is supported on the element 
            %(for linear terms this is just the six hat functions 
            %on each node times its node value);
            %
            %Zeroing variables we need to include to calculate the
            %derivative of Mr_i with respect to u_j
            arr_ij = 0;
            azz_ij = 0;
            a_ij = 0;
%             ar_ijchu = 0;
%             az_ijchw = 0;
%             a_ijdrchu = 0;
            %Zeroing variables we need to include to calculate the
            %derivative of Mr_i with respecto to w_j
            azr_ij = 0;
%             a_ijdzchu = 0;
            %Zeroing variables we need to add to calculate the 
            %derivatives of Mz_i with respect to u_j
            arz_ij = 0;
%             a_ijdrchw = 0;
            %Zeroing variables we need to include to calculate the
            %derivative of Mz_i with respecto to w_j
%             a_ijdzchw = 0;
%             %Zeroing variables needed to include to calculate the 
%             %derivatives of Mr_i with respect to theta_m
%             diff_theta_m_ar_ijchu = 0;
%             diff_theta_m_az_ijchw = 0;
%             diff_theta_m_a_ijdrchu = 0;
%             diff_theta_m_a_ijdzchu = 0;
%             %Zeroing variables needed to include to calculate the 
%             %derivatives of Mz_i with respect to theta_m
%             diff_theta_m_a_ijdrchw = 0;
%             diff_theta_m_a_ijdzchw = 0;
            %Zeroing variables needed to include to calculate the 
            %derivatives of Mr_i with respect to h_q
            diff_h_arr_ij = zeros(1,n_s_e);
            diff_h_azz_ij = zeros(1,n_s_e);
            diff_h_a_ij = zeros(1,n_s_e);
%             diff_h_ar_ijchu = zeros(1,n_s_e);
%             diff_h_az_ijchw = zeros(1,n_s_e);
%             diff_h_a_ijdrchu = zeros(1,n_s_e);
            diff_h_azr_ij = zeros(1,n_s_e);
%             diff_h_a_ijdzchu = zeros(1,n_s_e);
            %Zeroing variables needed to include to calculate the 
            %derivatives of Mz_i with respect to h_q
            diff_h_arz_ij = zeros(1,n_s_e);
%             diff_h_a_ijdrchw = zeros(1,n_s_e);
%             diff_h_a_ijdzchw = zeros(1,n_s_e);
            for pp = 1:n_Gaussian_Q
                %Variables we need to include to calculate the
                %derivative of Mr_i with respect to u_j
                arr_ij = arr_ij ...
                         + W_G(pp) ...
                           *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                           *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                           /det_Je(pp);
                azz_ij = azz_ij ...
                         + W_G(pp) ...
                           *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                           *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                           /det_Je(pp);
                a_ij = a_ij ...
                       + W_G(pp) ...
                         *phi_G(ii,pp) ...
                         *phi_G(jj,pp) ...
                         *det_Je(pp);
%                 ar_ijchu = ar_ijchu ...
%                            + W_G(pp) ...
%                              *phi_G(ii,pp) ...
%                              *(T{pp}(jj,:)*(z_e-min_z_e)) ...
%                              *u_check(pp);
%                 az_ijchw = az_ijchw ...
%                            - W_G(pp) ...
%                              *phi_G(ii,pp) ...
%                              *(T{pp}(jj,:)*(r_e-min_r_e)) ...
%                              *w_check(pp);
%                 a_ijdrchu = a_ijdrchu ...
%                             + W_G(pp) ...
%                               *phi_G(ii,pp) ...
%                               *phi_G(jj,pp) ...
%                               *dr_u_check(pp) ...
%                               *det_Je(pp);
                %Variables we need to include to calculate 
                %the derivative of Mr_i with respecto to w_j
                azr_ij = azr_ij ...
                         - W_G(pp) ...
                           *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                           *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                           /det_Je(pp);
%                 a_ijdzchu = a_ijdzchu ...
%                             + W_G(pp) ...
%                               *phi_G(ii,pp) ...
%                               *phi_G(jj,pp) ...
%                               *dz_u_check(pp) ...
%                               *det_Je(pp);
                %Variables we need to add to calculate the 
                %derivatives of Mz_i with respect to u_j
                arz_ij = arz_ij ...
                         - W_G(pp) ...
                           *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                           *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                           /det_Je(pp);
%                 a_ijdrchw = a_ijdrchw ...
%                             + W_G(pp) ...
%                               *phi_G(ii,pp) ...
%                               *phi_G(jj,pp) ...
%                               *dr_w_check(pp) ...
%                               *det_Je(pp);
                %Variables we need to add to calculate the 
                %derivatives of Mz_i with respect to w_j
%                 a_ijdzchw = a_ijdzchw ...
%                             + W_G(pp) ...
%                               *phi_G(ii,pp) ...
%                               *phi_G(jj,pp) ...
%                               *dz_w_check(pp) ...
%                               *det_Je(pp); 
                %Variables needed to include to calculate the 
                %derivatives of Mr_i with respect to theta_m
%                 diff_theta_m_ar_ijchu ...
%                     = diff_theta_m_ar_ijchu ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *(T{pp}(jj,:)*(z_e-min_z_e)) ...
%                         *(  dlambda_eig_u_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - dphi_u_check(pp) ...
%                          );
%                 diff_theta_m_az_ijchw ...
%                     = diff_theta_m_az_ijchw ...
%                       - W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *(T{pp}(jj,:)*(r_e-min_r_e)) ...
%                         *(  dlambda_eig_w_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - dphi_w_check(pp) ...
%                          );
%                 diff_theta_m_a_ijdrchu ...
%                     = diff_theta_m_a_ijdrchu ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *phi_G(jj,pp) ...
%                         *(  drlambda_eig_u_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - drphi_u_check(pp) ...
%                          ) ...
%                         *det_Je(pp);
%                 diff_theta_m_a_ijdzchu ...
%                     = diff_theta_m_a_ijdzchu ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *phi_G(jj,pp) ...
%                         *(  dzlambda_eig_u_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - dzphi_u_check(pp) ...
%                          )...
%                         *det_Je(pp);
                %Variables needed to include to calculate the 
                %derivatives of Mz_i with respect to theta_m
%                 diff_theta_m_a_ijdrchw ...
%                     = diff_theta_m_a_ijdrchw ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *phi_G(jj,pp) ...
%                         *(  drlambda_eig_w_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - drphi_w_check(pp) ...
%                          ) ...
%                         *det_Je(pp);
%                 diff_theta_m_a_ijdzchw ...
%                     = diff_theta_m_a_ijdzchw ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *phi_G(jj,pp) ...
%                         *(  dzlambda_eig_w_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - dzphi_w_check(pp) ...
%                          ) ...
%                         *det_Je(pp);
                for qq = 1:n_s_e
                    %Variables we need to include to 
                    %calculate the derivatives of Mr_i with 
                    %respect to h_q
                    diff_h_azr_ij(qq) ...
                        = diff_h_azr_ij(qq) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_r_e(:,qq)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*diff_h_z_e(:,qq)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
%                     diff_h_a_ijdzchu(qq) ...
%                         = diff_h_a_ijdzchu(qq) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drz_u_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dzz_u_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dz_u_check(pp) ...     
%                             *diff_h_det_Je(pp,qq);
% %                                   + W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *phi_G(jj,pp) ...
% %                                     *dzlambda_eig_u_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
% %                                     *det_Je(pp) ...
                    diff_h_arr_ij(qq) ...
                        = diff_h_arr_ij(qq) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_z_e(:,qq)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*diff_h_z_e(:,qq)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_azz_ij(qq) ...
                        = diff_h_azz_ij(qq) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_r_e(:,qq)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*diff_h_r_e(:,qq)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
%                     diff_h_ar_ijchu(qq) ...
%                         = diff_h_ar_ijchu(qq) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*diff_h_z_e(:,qq)) ...
%                             *u_check(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*(z_e-min_z_e)) ...
%                             *dr_u_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*(z_e-min_z_e)) ...
%                             *dz_u_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              );
% %                                   + W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *(T{pp}(jj,:)*(z_e-min_z_e)) ...
% %                                     *dlambda_eig_u_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
%                     diff_h_az_ijchw(qq) ...
%                         = diff_h_az_ijchw(qq) ...
%                           - W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*diff_h_r_e(:,qq)) ...
%                             *w_check(pp) ...
%                           - W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*(r_e-min_r_e)) ...
%                             *dr_w_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                           - W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*(r_e-min_r_e)) ...
%                             *dz_w_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              );
% %                                   - W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *(T{pp}(jj,:)*(r_e-min_r_e)) ...
% %                                     *dlambda_eig_w_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
%                     diff_h_a_ijdrchu(qq) ...
%                         = diff_h_a_ijdrchu(qq) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drr_u_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drz_u_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dr_u_check(pp) ...
%                             *diff_h_det_Je(pp,qq);
% %                                   + W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *phi_G(jj,pp) ...
% %                                     *drlambda_eig_u_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
% %                                     *det_Je(pp) ...
                    diff_h_a_ij(qq)  ...
                        = diff_h_a_ij(qq) ...
                          + W_G(pp) ...
                            *phi_G(ii,pp) ...
                            *phi_G(jj,pp) ...
                            *diff_h_det_Je(pp,qq);
                    %Variables we need to include to calculate the
                    %derivatives of Mz_i with respect to h_q
                    diff_h_arz_ij(qq) ...
                        = diff_h_arz_ij(qq) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_z_e(:,qq)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*diff_h_r_e(:,qq)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
%                     diff_h_a_ijdrchw(qq) ...
%                         = diff_h_a_ijdrchw(qq) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drr_w_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drz_w_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dr_w_check(pp) ...
%                             *diff_h_det_Je(pp,qq);
% %                                   + W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *phi_G(jj,pp) ...
% %                                     *drlambda_eig_w_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
% %                                     *det_Je(pp) ...                                
%                     diff_h_a_ijdzchw(qq) ...
%                         = diff_h_a_ijdzchw(qq) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drz_w_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dzz_w_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dz_w_check(pp) ...     
%                             *diff_h_det_Je(pp,qq);
% %                                   + W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *phi_G(jj,pp) ...
% %                                     *dzlambda_eig_w_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
% %                                     *det_Je(pp) ...
                end
            end
%             %Contributions to the derivatives with respect to
%             %theta_m
%             diff_h_Mr_near(l(ee,ii),S_1(1,:)) ...
%                 = diff_h_Mr_near(l(ee,ii),S_1(1,:)) ...
%                   + Re ...
%                     *A ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  w_bar(l(ee,jj)) ...
%                             *diff_theta_m_a_ijdzchu ...
%                             *diff_h_theta_m ...
%                           + u_bar(l(ee,jj)) ...
%                             *(  diff_theta_m_a_ijdrchu ...
%                                 *diff_h_theta_m ...
%                               + diff_theta_m_ar_ijchu ...
%                                 *diff_h_theta_m ...
%                               + diff_theta_m_az_ijchw ...
%                                 *diff_h_theta_m ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                       - diff_theta_m_a_ijdrchu ...
%                         *diff_h_theta_m ...
%                         *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                          ) ...
%                       - diff_theta_m_a_ijdzchu ...
%                         *diff_h_theta_m ...
%                         *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                          ) ...
%                      );
%             diff_h_Mz_near(l(ee,ii),S_1(1,:)) ...
%                 = diff_h_Mz_near(l(ee,ii),S_1(1,:)) ...
%                   + Re ...
%                     *A ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  u_bar(l(ee,jj)) ...
%                             *diff_theta_m_a_ijdrchw ...
%                             *diff_h_theta_m ...
%                           + w_bar(l(ee,jj)) ...
%                             *(  diff_theta_m_a_ijdzchw ...
%                                 *diff_h_theta_m ...
%                               + diff_theta_m_ar_ijchu ...
%                                 *diff_h_theta_m ...
%                               + diff_theta_m_az_ijchw ...
%                                 *diff_h_theta_m ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                       - diff_theta_m_a_ijdrchw ...
%                         *diff_h_theta_m ...
%                         *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                          ) ...
%                       - diff_theta_m_a_ijdzchw ...
%                         *diff_h_theta_m ...
%                         *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                          ) ...
%                      );
%             %Contributions to derivatives with respect to A
%             diff_A_Mr_near(l(ee,ii)) ...
%                 = diff_A_Mr_near(l(ee,ii)) ...
%                   + Re ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  w_bar(l(ee,jj)) ...
%                             *a_ijdzchu ...
%                           + u_bar(l(ee,jj)) ...
%                             *(  ar_ijchu ...
%                               + az_ijchw ...
%                               + a_ijdrchu ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                       - a_ijdrchu ...
%                         *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                          ) ...
%                       - a_ijdzchu ...
%                         *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                          ) ...
%                      );
%             diff_A_Mz_near(l(ee,ii)) ...
%                 = diff_A_Mz_near(l(ee,ii)) ...
%                   + Re ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  u_bar(l(ee,jj)) ...
%                             *a_ijdrchw ...
%                           + w_bar(l(ee,jj)) ...
%                             *(  ar_ijchu ...
%                               + az_ijchw ...
%                               + a_ijdzchw ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                       - a_ijdrchw ...
%                         *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                          ) ...
%                       - a_ijdzchw ...
%                         *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                          ) ...
%                      );
            %Zeroing variables needed for inner sum in kk
            Abar_ij = 0;
            B_ij = 0;
            C_ij = 0;
            diff_h_Abar_ij = zeros(1,n_s_e);
            diff_h_B_ij = zeros(1,n_s_e);
            diff_h_C_ij = zeros(1,n_s_e);
            for kk = 1:6 %This second loop is needed because of the
                %non-linearity of the convective term 
                ar_ikj = 0;
                diff_h_ar_ikj = zeros(1,n_s_e);
                az_ikj = 0;
                diff_h_az_ikj = zeros(1,n_s_e);
                for pp = 1:n_Gaussian_Q
                    ar_ikj = ar_ikj ...
                             + W_G(pp) ...
                               *phi_G(ii,pp) ...
                               *phi_G(kk,pp) ...
                               *(T{pp}(jj,:)*(z_e-min_z_e));
                    az_ikj = az_ikj ...
                             - W_G(pp) ...
                               *phi_G(ii,pp) ...
                               *phi_G(kk,pp) ...
                               *(T{pp}(jj,:)*(r_e-min_r_e));
                    for qq = 1:n_s_e
                        diff_h_ar_ikj(qq) ...
                            = diff_h_ar_ikj(qq) ...
                              + W_G(pp) ...
                                *phi_G(ii,pp) ...
                                *phi_G(kk,pp) ...
                                *(T{pp}(jj,:)*diff_h_z_e(:,qq));
                        diff_h_az_ikj(qq) ...
                            = diff_h_az_ikj(qq) ...
                              - W_G(pp) ...
                                *phi_G(ii,pp) ...
                                *phi_G(kk,pp) ...
                                *(T{pp}(jj,:)*diff_h_r_e(:,qq));
                    end
                end
                Abar_ij = Abar_ij ...
                          + ar_ikj ...
                            *u_bar(l(ee,kk)) ...
                          + az_ikj ...
                            *w_bar(l(ee,kk));
                B_ij = B_ij ...
                       + ar_ikj ...
                         *( 2*Nodes_rz(l(ee,kk),1)/3 ...
                           -2*Nodes_rz_minus1(l(ee,kk),1)/3 ... 
                          );
                C_ij = C_ij ...
                       + az_ikj ...
                         *( 2*Nodes_rz(l(ee,kk),2)/3 ...
                           -2*Nodes_rz_minus1(l(ee,kk),2)/3 ... 
                          );
                for qq = 1:n_s_e
                    diff_h_Abar_ij(qq) ...
                        = diff_h_Abar_ij(qq) ...
                          + diff_h_ar_ikj(qq) ...
                            *u_bar(l(ee,kk)) ...
                          + diff_h_az_ikj(qq) ...
                            *w_bar(l(ee,kk));
                    diff_h_B_ij(qq) ...
                        = diff_h_B_ij(qq) ...
                          + diff_h_ar_ikj(qq) ...
                            *( 2*Nodes_rz(l(ee,kk),1)/3 ...
                              -2*Nodes_rz_minus1(l(ee,kk),1)/3 ... 
                             ) ...
                          + 2 ...
                            *ar_ikj ...
                            *diff_h_r_e(kk,qq) ...
                            /3;
                    diff_h_C_ij(qq) ...
                        = diff_h_C_ij(qq) ...
                          + diff_h_az_ikj(qq) ...
                            *( 2*Nodes_rz(l(ee,kk),2)/3 ...
                              -2*Nodes_rz_minus1(l(ee,kk),2)/3 ...
                             ) ...
                          + 2 ...
                            *az_ikj ...
                            *diff_h_z_e(kk,qq) ...
                            /3;
                end
                %Jacobian contributions
                diff_u_bar_Mr_near(l(ee,ii),l(ee,kk)) ...
                    = diff_u_bar_Mr_near(l(ee,ii),l(ee,kk))...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *u_bar(l(ee,jj)) ...
                        *ar_ikj ...
                        /3;
                diff_w_bar_Mr_near(l(ee,ii),l(ee,kk)) ...
                    = diff_w_bar_Mr_near(l(ee,ii),l(ee,kk))...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *u_bar(l(ee,jj)) ...
                        *az_ikj ...
                        /3;
                diff_u_bar_Mz_near(l(ee,ii),l(ee,kk)) ...
                    = diff_u_bar_Mz_near(l(ee,ii),l(ee,kk))...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *w_bar(l(ee,jj)) ...
                        *ar_ikj ...
                        /3;
                diff_w_bar_Mz_near(l(ee,ii),l(ee,kk)) ...
                    = diff_w_bar_Mz_near(l(ee,ii),l(ee,kk))...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *w_bar(l(ee,jj)) ...
                        *az_ikj ...
                        /3;
            end
            %Jacobian contributions
            diff_u_bar_Mr_near(l(ee,ii),l(ee,jj)) ...
                = diff_u_bar_Mr_near(l(ee,ii),l(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *(  arr_ij ... %(*2)
                      + azz_ij ...
                     ) ...
                    /3 ...
                  + 2 ...
                    *Re ...
                    *a_ij ...
                    /3 ...
                  + Re ...
                    *(  2 ...
                        *delta_t ...
                        *(  Abar_ij ...
                         ) ...
                         /3 ...
                     - B_ij ...
                     - C_ij ...
                    );
%                 ...
%                   + Re ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  A ...
%                             *(  ar_ijchu ...
%                               + az_ijchw ...
%                               + a_ijdrchu ...
%                              ) ...
%                          ) ...
%                          /3 ...
%                     );
%             diff_w_bar_Mr_near(l(ee,ii),l(ee,jj)) ...
%                 = diff_w_bar_Mr_near(l(ee,ii),l(ee,jj)) ... 
%                   + 2 ...
%                     *delta_t ...
%                     *(  Re ...
%                         *A ...
%                         *a_ijdzchu ... % +azr_ij ...
%                      ) ...
%                     /3;
%             diff_u_bar_Mz_near(l(ee,ii),l(ee,jj)) ...
%                 = diff_u_bar_Mz_near(l(ee,ii),l(ee,jj)) ...
%                   + 2 ...
%                     *delta_t ...
%                     *(  Re ...
%                         *A ...
%                         *a_ijdrchw ... % + arz_ij ...
%                      ) ...
%                     /3;
            diff_w_bar_Mz_near(l(ee,ii),l(ee,jj)) ...
                = diff_w_bar_Mz_near(l(ee,ii),l(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *(  azz_ij ... % (*2)
                      + arr_ij ...
                     ) ...
                    /3 ...
                  + 2 ...
                    *Re ...
                    *a_ij ...
                    /3 ...
                  + Re ...
                    *(  2 ...
                        *delta_t ...
                        *( Abar_ij ...
                         ) ...
                        /3 ...
                      - B_ij ...
                      - C_ij ...
                     );
%                  ...
%                   + Re ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  A ...
%                             *(  ar_ijchu ...
%                               + az_ijchw ...
%                               + a_ijdzchw ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                      );       
            for qq = 1:n_s_e
                diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                    = diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *u_bar(l(ee,jj)) ...
                        *(  diff_h_arr_ij(qq) ... % (*2)
                          + diff_h_azz_ij(qq) ...
                         ) ...
                        /3 ...
                      + Re ...
                        *(  diff_h_a_ij(qq) ...
                            *(  2*u_bar(l(ee,jj))/3 ...
                              - 2*u_minus1(l(ee,jj))/3 ...
                             ) ...
                         ) ...
                       + Re ...
                         *u_bar(l(ee,jj)) ...
                         *(  2 ...
                             *delta_t ...
                             *diff_h_Abar_ij(qq) ...
                             /3 ...
                           - diff_h_B_ij(qq) ...
                           - diff_h_C_ij(qq) ...
                          );
%                       ...                          
%                       + 2 ...
%                         *delta_t ...
%                         *w_bar(l(ee,jj)) ...
%                         *(  Re ...
%                             *A ...
%                             *diff_h_a_ijdzchu(qq) ... % + diff_h_azr_ij(qq) ...
%                          ) ...
%                         /3 ...
%                       + 2 ...
%                         *delta_t ...
%                         *u_bar(l(ee,jj)) ...
%                         *(  Re ...
%                             *A ...
%                             *(  diff_h_ar_ijchu(qq) ...
%                               + diff_h_az_ijchw(qq) ...
%                               + diff_h_a_ijdrchu(qq) ...
%                              ) ... 
%                          ) ...
%                         /3 ...
%                       + Re ...
%                         *(- A ...
%                             *(  2 ...
%                                 *a_ijdrchu ...
%                                 *diff_h_r_e(jj,qq) ...
%                                 /3 ...
%                               + diff_h_a_ijdrchu(qq) ...
%                                 *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                                   - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                                  ) ...
%                               + 2 ...
%                                 *a_ijdzchu ...
%                                 *diff_h_z_e(jj,qq) ...
%                                 /3 ...
%                               + diff_h_a_ijdzchu(qq) ...
%                                 *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                                   - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                                  ) ...
%                              ) ...
%                          ) ...;
                diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                    = diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *w_bar(l(ee,jj)) ...
                        *(    diff_h_arr_ij(qq) ...
                          +   diff_h_azz_ij(qq) ... % (*2)
                         ) ...
                        /3 ...
                      + Re ...
                        *(  diff_h_a_ij(qq) ...
                            *(  2*w_bar(l(ee,jj))/3 ...
                              - 2*w_minus1(l(ee,jj))/3 ...
                             ) ...
                         ) ...
                       + Re ...
                         *w_bar(l(ee,jj)) ...
                         *(  2 ...
                             *delta_t ...
                             *diff_h_Abar_ij(qq) ...
                             /3 ...
                           - diff_h_B_ij(qq) ...
                           - diff_h_C_ij(qq) ...
                          );
%                       ...
%                       + 2 ...
%                         *delta_t ...
%                         *u_bar(l(ee,jj)) ...
%                         *(  Re ...
%                             *A ...
%                             *diff_h_a_ijdrchw(qq) ... % + diff_h_arz_ij(qq) ...
%                          ) ...
%                         /3 ...
%                       + 2 ...
%                         *delta_t ...
%                         *w_bar(l(ee,jj)) ...
%                         *(  Re ...
%                             *A ...
%                             *(  diff_h_ar_ijchu(qq) ...
%                               + diff_h_az_ijchw(qq) ...
%                               + diff_h_a_ijdzchw(qq) ...
%                              ) ... 
%                          ) ...
%                         /3 ...
%                       + Re ...
%                         *(- A ...
%                             *(  2 ...
%                                 *a_ijdrchw ...
%                                 *diff_h_r_e(jj,qq) ...
%                                 /3 ...
%                               + diff_h_a_ijdrchw(qq) ...
%                                 *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                                   - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                                  ) ...
%                               + 2 ...
%                                 *a_ijdzchw ...
%                                 *diff_h_z_e(jj,qq) ...
%                                 /3 ...
%                               + diff_h_a_ijdzchw(qq) ...
%                                 *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                                   - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                                  ) ...
%                              ) ...
%                          ) ...;
            end
        end
        for jj = 1:3
            br_ji = 0;
            diff_h_br_ji = zeros(1,n_s_e);
            bz_ji = 0;
            diff_h_bz_ji = zeros(1,n_s_e);
            for pp = 1:n_Gaussian_Q
                br_ji = br_ji ...
                        + W_G(pp) ...
                          *psi_star_G(jj,pp) ...
                          *(T{pp}(ii,:)*(z_e-min_z_e));
                bz_ji = bz_ji ...
                        - W_G(pp) ...
                          *psi_star_G(jj,pp) ...
                          *(T{pp}(ii,:)*(r_e-min_r_e));
                for qq = 1:n_s_e
                    diff_h_br_ji(qq) ...
                        = diff_h_br_ji(qq) ...
                          + W_G(pp) ...
                            *psi_star_G(jj,pp) ...
                            *(T{pp}(ii,:)*diff_h_z_e(:,qq));
                    diff_h_bz_ji(qq) ...
                        = diff_h_bz_ji(qq) ...
                          - W_G(pp) ...
                            *psi_star_G(jj,pp) ...
                            *(T{pp}(ii,:)*diff_h_r_e(:,qq));
                end
            end
            if jj == 2
                for qq = 1:n_s_e
                    for pp = 1:n_Gaussian_Q
                        diff_h_br_ji(qq) ...
                            = diff_h_br_ji(qq) ...
                              + W_G(pp) ...
                                *diff_h_psi_star_2_G(pp,qq) ...
                                *(T{pp}(ii,:)*(z_e-min_z_e));
                        diff_h_bz_ji(qq) ...
                            = diff_h_bz_ji(qq) ...
                              - W_G(pp) ...
                                *diff_h_psi_star_2_G(pp,qq) ...
                                *(T{pp}(ii,:)*(r_e-min_r_e));
                    end
                end
            end
            %Jacobian contributions
            diff_p_near_Mr_near(l(ee,ii),lp(ee,jj)) ...
                = diff_p_near_Mr_near(l(ee,ii),lp(ee,jj)) ...
                  - 2 ...
                    *delta_t ...
                    *br_ji ...
                    /3;
            diff_p_near_Mz_near(l(ee,ii),lp(ee,jj)) ...
                = diff_p_near_Mz_near(l(ee,ii),lp(ee,jj)) ...
                  - 2 ...
                    *delta_t ...
                    *bz_ji ...
                    /3;
            diff_u_bar_C_near(lp(ee,jj),l(ee,ii)) ...
                = diff_u_bar_C_near(lp(ee,jj),l(ee,ii)) ...
                  - br_ji;
            diff_w_bar_C_near(lp(ee,jj),l(ee,ii)) ...
                = diff_w_bar_C_near(lp(ee,jj),l(ee,ii)) ...
                  - bz_ji;
            for qq = 1:n_s_e
                diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                    = diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *p(lp(ee,jj)) ...
                        *diff_h_br_ji(qq) ...
                        /3;
                diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                    = diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *p(lp(ee,jj)) ...
                        *diff_h_bz_ji(qq) ...
                        /3;
                diff_h_C_near(lp(ee,jj),spines_e(qq)) ...
                    = diff_h_C_near(lp(ee,jj),spines_e(qq)) ...
                      - u_bar(l(ee,ii)) ...
                        *diff_h_br_ji(qq) ...
                      - w_bar(l(ee,ii)) ...
                        *diff_h_bz_ji(qq);
            end
        end
    end
end 
%Non-singular near-field elements
for ee = n_el_sing+1:n_el_near %go through every element
    %Findinding the r and z coordinates of the element's nodes
    r_e = Nodes_rz(l(ee,1:6),1);
    z_e = Nodes_rz(l(ee,1:6),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %Finding total number of spines whose size affects this element 
    %(the first spine for all plus the ones passing through the 
    %element)
    n_s_e = length(S(ee,:))+1;
    %Finding the numbers of the spines whose lengths affect the 
    %shape of the element
    spines_e = [1,S(ee,:)];
    %Find the derivative of each of the nodal positions with 
    % respect to each of the spines that affect this particular 
    %element
    diff_h_r_e = zeros(6,n_s_e);
    diff_h_z_e = zeros(6,n_s_e);
    diff_h_r_e(:,1) = diff_h0_rz(l(ee,:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(ee,:),2);
    for qq = 1:n_s_e-1
        for rr = el_s_loc_nodes{ee,qq}
            diff_h_r_e(rr,qq+1) = diff_h_rz(l(ee,rr),1);
            diff_h_z_e(rr,qq+1) = diff_h_rz(l(ee,rr),2);
        end
    end
    diff_h_r_e_Gaussian = zeros(n_Gaussian_Q,n_s_e);
    diff_h_z_e_Gaussian = zeros(n_Gaussian_Q,n_s_e);
    for pp = 1:n_Gaussian_Q
        for qq = 1:n_s_e
            diff_h_r_e_Gaussian(pp,qq) ...
                = (diff_h_r_e(:,qq)')*phi_G(:,pp);
            diff_h_z_e_Gaussian(pp,qq) ...
                = (diff_h_z_e(:,qq)')*phi_G(:,pp);
        end
    end
    %Zeroing matrix of derivatives with respect to the spine
    %lengths (evaluated at Gaussian-integration points)
    diff_h_det_Je = zeros(n_Gaussian_Q,n_s_e);
    for pp = 1:n_Gaussian_Q
        % Finding the determinant of the Jacobian of the 
        % isoparametric map at each Gaussian quadrature point
        det_Je(pp) = (r_e'-min_r_e)*T{pp}*(z_e-min_z_e);
%         %Finding the coordinates with respect to the contact line
%         %and the tangent plane to the solid to introduce in the
%         %expression of the eigensolution
%         r_pp = (r_e'-Nodes_rz(1,1))*phi_G(:,pp);
%         z_pp = (z_e'-Nodes_rz(1,2))*phi_G(:,pp);
%         %Data for eigensolution
%         theta_pol = atan2(z_pp,r_pp);
%         phi_pp = pi - theta_m - theta_pol;
%         theta_pp = lambda_eig*phi_pp;
%         c_theta_pp = cos(theta_pp);
%         s_theta_pp = sin(theta_pp);
%         divider = max(abs(r_pp),abs(z_pp));
%         r_pp_div = r_pp/divider;
%         z_pp_div = z_pp/divider;
%         rho_l = sqrt(r_pp_div^2+z_pp_div^2);
%         rho_l = rho_l*divider;
%         rho_l_minus2_pp = rho_l^(lambda_eig-2);
%         rho_l_minus4_pp = rho_l^(lambda_eig-4);
%         rho_l_minus6_pp = rho_l^(lambda_eig-6);
%         ln_rho2_pp = 2*log(rho_l);
%         % Find the values of u_check at the Gaussian sampling 
%         %points
%         u_check(pp) = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of w_check at the Gaussian sampling 
%         %points
%         w_check(pp) = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of dr_u_check at the Gaussian sampling 
%         %points
%         dr_u_check(pp) = dr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_u_check at the Gaussian sampling 
%         %points
%         dz_u_check(pp) = dz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_u_check(pp) ...
%             = dlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of dr_w_check at the Gaussian sampling 
%         %points
%         dr_w_check(pp) = dr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_w_check at the Gaussian sampling 
%         %points
%         dz_w_check(pp) = dz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_w_check(pp) ...
%             = dlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of drr_u_check at the Gaussian sampling 
%         %points
%         drr_u_check(pp) = drr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_u_check at the Gaussian sampling 
%         %points
%         drz_u_check(pp) = drz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_u_check at the Gaussian sampling 
%         %points
%         dzz_u_check(pp) = dzz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_u_check at the Gaussian 
%         %sampling points
%         drlambda_eig_u_check(pp) ...
%             = drlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dzlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_u_check(pp) ...
%             = dzlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp); 
%         % Find the values of drr_w_check at the Gaussian sampling 
%         %points
%         drr_w_check(pp) = drr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_w_check at the Gaussian sampling 
%         %points
%         drz_w_check(pp) = drz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_w_check at the Gaussian sampling 
%         %points
%         dzz_w_check(pp) = dzz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_w_check at the Gaussian 
%         %sampling points
%         drlambda_eig_w_check(pp) ...
%             = drlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);  
%         %Find the values of dzlambda_eig_w_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_w_check(pp) ...
%             = dzlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_u_check(pp) ...
%             = dphi_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_w_check(pp) ...
%             = dphi_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_u_check(pp) ...
%             = drphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_u_check(pp) ...
%             = dzphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_w_check(pp) ...
%             = drphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_w_check(pp) ...
%             = dzphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
        for qq = 1:n_s_e
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *T{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *T{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    for ii = 1:6 %select each basis function that has support on 
        %the chosen element
        %
%         %Zeroing variables we need to calculate the derivatives of 
%         %Mr_i with respet to A
%         a_ichu = 0;
%         a_ichudrchu = 0;
%         a_ichwdzchu = 0;
%         ar_idrchu = 0;
%         az_idzchu = 0;
%         %Zeroing variables we need to calculate the derivatives of
%         %Mz_i with respet to A
%         a_ichw = 0;
%         a_ichudrchw = 0;
%         a_ichwdzchw = 0;
%         ar_idrchw = 0;
%         az_idzchw = 0;
%         %Variables needed to calculate the derivative of Mr_i with
%         %respect to theta_m
%         diff_theta_m_a_ichu = 0;
%         diff_theta_m_a_ichudrchu = 0;
%         diff_theta_m_a_ichwdzchu = 0;
%         diff_theta_m_ar_idrchu = 0;
%         diff_theta_m_az_idzchu = 0;        
%         %Variables needed to calculate the derivative of Mz_i with
%         %respect to theta_m
%         diff_theta_m_a_ichw = 0;
%         diff_theta_m_a_ichudrchw = 0;
%         diff_theta_m_a_ichwdzchw = 0;
%         diff_theta_m_ar_idrchw = 0;
%         diff_theta_m_az_idzchw = 0;  
        %Variables we need to calculate the derivatives of Mr_i
        %with respet to h_q
        diff_h_a_igr = zeros(1,n_s_e);
%         diff_h_a_ichu = zeros(1,n_s_e);
%         diff_h_a_ichudrchu = zeros(1,n_s_e);
%         diff_h_a_ichwdzchu = zeros(1,n_s_e);
%         diff_h_ar_idrchu = zeros(1,n_s_e);
%         diff_h_az_idzchu = zeros(1,n_s_e);
        %Variables we need to calculate the derivatives of Mz_i
        %with respet to h_q
        diff_h_a_igz = zeros(1,n_s_e);
%         diff_h_a_ichw = zeros(1,n_s_e);
%         diff_h_a_ichudrchw = zeros(1,n_s_e);
%         diff_h_a_ichwdzchw = zeros(1,n_s_e);
%         diff_h_ar_idrchw = zeros(1,n_s_e);
%         diff_h_az_idzchw = zeros(1,n_s_e);
        for pp = 1:n_Gaussian_Q
            %Variables we need to calculate the derivatives of 
%             %Mr_i with respect to A
%             a_ichu = a_ichu ...
%                      + W_G(pp) ...
%                        *phi_G(ii,pp) ...
%                        *u_check(pp) ...
%                        *det_Je(pp);
%             a_ichudrchu = a_ichudrchu ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *u_check(pp) ...
%                             *dr_u_check(pp) ...
%                             *det_Je(pp);
%             a_ichwdzchu = a_ichwdzchu ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *w_check(pp) ...
%                             *dz_u_check(pp) ...
%                             *det_Je(pp);
%             ar_idrchu = ar_idrchu ...
%                         + W_G(pp) ...
%                           *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                           *dr_u_check(pp);
%             az_idzchu = az_idzchu ...
%                         - W_G(pp) ...
%                           *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                           *dz_u_check(pp);
%             %Variables we need to calculate the derivatives of 
%             %Mz_i with respet to A
%             a_ichw = a_ichw ...
%                      + W_G(pp) ...
%                        *phi_G(ii,pp) ...
%                        *w_check(pp) ...
%                        *det_Je(pp);
%             a_ichudrchw = a_ichudrchw ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *u_check(pp) ...
%                             *dr_w_check(pp) ...
%                             *det_Je(pp);
%             a_ichwdzchw = a_ichwdzchw ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *w_check(pp) ...
%                             *dz_w_check(pp) ...
%                             *det_Je(pp);
%             ar_idrchw = ar_idrchw ...
%                         + W_G(pp) ...
%                           *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                           *dr_w_check(pp);
%             az_idzchw = az_idzchw ...
%                         - W_G(pp) ...
%                           *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                           *dz_w_check(pp);
%             %Variables needed to calculate the derivative of Mr_i
%             %with respect to theta_m
%             diff_theta_m_a_ichu ...
%                 = diff_theta_m_a_ichu ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_a_ichudrchu ...
%                 = diff_theta_m_a_ichudrchu ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     *dr_u_check(pp) ...
%                     *det_Je(pp) ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *u_check(pp) ...
%                     *(  drlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_u_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_a_ichwdzchu ...
%                 = diff_theta_m_a_ichwdzchu ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     *dz_u_check(pp) ...
%                     *det_Je(pp) ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *w_check(pp) ...
%                     *(  dzlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_u_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_ar_idrchu ...
%                 = diff_theta_m_ar_idrchu ...
%                   + W_G(pp) ...
%                     *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                     *(  drlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_u_check(pp) ...
%                      );
%             diff_theta_m_az_idzchu ...
%                 = diff_theta_m_az_idzchu ...
%                   - W_G(pp) ...
%                     *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                     *(  dzlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_u_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of Mz_i
%             %with respect to theta_m
%             diff_theta_m_a_ichw ...
%                 = diff_theta_m_a_ichw ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_a_ichudrchw ...
%                 = diff_theta_m_a_ichudrchw ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     *dr_w_check(pp) ...
%                     *det_Je(pp) ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *u_check(pp) ...
%                     *(  drlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_w_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_a_ichwdzchw ...
%                 = diff_theta_m_a_ichwdzchw ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     *dz_w_check(pp) ...
%                     *det_Je(pp) ...
%                   + W_G(pp) ...
%                     *phi_G(ii,pp) ...
%                     *w_check(pp) ...
%                     *(  dzlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_w_check(pp) ...
%                      ) ...
%                     *det_Je(pp);
%             diff_theta_m_ar_idrchw ...
%                 = diff_theta_m_ar_idrchw ...
%                   + W_G(pp) ...
%                     *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                     *(  drlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_w_check(pp) ...
%                      );
%             diff_theta_m_az_idzchw ...
%                 = diff_theta_m_az_idzchw ...
%                   - W_G(pp) ...
%                     *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                     *(  dzlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_w_check(pp) ...
%                      );
            for qq = 1:n_s_e
                %Variables we need to calculate the derivatives of 
                %Mr_i with respet to h_q
                diff_h_a_igr(qq) ...
                    = diff_h_a_igr(qq) ...
                      + W_G(pp) ...
                        *phi_G(ii,pp) ...
                        *gr ...
                        *diff_h_det_Je(pp,qq);
%                 diff_h_a_ichu(qq) ...
%                     = diff_h_a_ichu(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Je(pp) ...  
%                 diff_h_a_ichudrchu(qq) ...
%                     = diff_h_a_ichudrchu(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *dr_u_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *dr_u_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *drr_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *dr_u_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *dr_u_check(pp) ...
% %                                 *det_Je(pp) ...
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *u_check(pp) ...
% %                                 *drlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Je(pp) ...
%                 diff_h_a_ichwdzchu(qq) ...
%                     = diff_h_a_ichwdzchu(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *dz_u_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *dz_u_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *dzz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *dz_u_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *dz_u_check(pp) ...
% %                                 *det_Je(pp) ...
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *w_check(pp) ...
% %                                 *dzlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig...
% %                                 *det_Je(pp) ...
%                 diff_h_ar_idrchu(qq) ...
%                     = diff_h_ar_idrchu(qq) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*diff_h_z_e(:,qq)) ...
%                         *dr_u_check(pp) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                         *drr_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                 diff_h_az_idzchu(qq) ...
%                     = diff_h_az_idzchu(qq) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*diff_h_r_e(:,qq)) ...
%                         *dz_u_check(pp) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                         *dzz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
                %Variables we need to calculate the derivatives of 
                %Mz_i with respet to h_q
                diff_h_a_igz(qq) ...
                    = diff_h_a_igz(qq) ...
                      + W_G(pp) ...
                        *phi_G(ii,pp) ...
                        *gz...
                        *diff_h_det_Je(pp,qq);
%                 diff_h_a_ichw(qq) ...
%                     = diff_h_a_ichw(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Je(pp) ...
%                 diff_h_a_ichudrchw(qq) ...
%                     = diff_h_a_ichudrchw(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *dr_w_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *dr_w_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *drr_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *u_check(pp) ...
%                         *dr_w_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig...
% %                                 *dr_w_check(pp) ...
% %                                 *det_Je(pp) ...
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *u_check(pp) ...
% %                                 *drlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Je(pp) ...
%                 diff_h_a_ichwdzchw(qq) ...
%                     = diff_h_a_ichwdzchw(qq) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *dz_w_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *dz_w_check(pp) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *dzz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Je(pp) ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *w_check(pp) ...
%                         *dz_w_check(pp) ...
%                         *diff_h_det_Je(pp,qq);
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *dz_w_check(pp) ...
% %                                 *det_Je(pp) ...
% %                               + W_G(pp) ...
% %                                 *phi_G(ii,pp) ...
% %                                 *w_check(pp) ...
% %                                 *dzlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Je(pp) ...
%                 diff_h_ar_idrchw(qq) ...
%                     = diff_h_ar_idrchw(qq) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*diff_h_z_e(:,qq)) ...
%                         *dr_w_check(pp) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                         *drr_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_G(pp) ...
%                         *(T{pp}(ii,:)*(z_e-min_z_e)) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                 diff_h_az_idzchw(qq) ...
%                     = diff_h_az_idzchw(qq) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*diff_h_r_e(:,qq)) ...
%                         *dz_w_check(pp) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_r_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - W_G(pp) ...
%                         *(T{pp}(ii,:)*(r_e-min_r_e)) ...
%                         *dzz_w_check(pp) ...
%                         *(  diff_h_z_e_Gaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
            end  
        end
%         %Contributions of the derivatives with respect to h that come
%         %from derivatives with respect to theta_m
%         diff_h_Mr_near(l(ee,ii),S_1(1,:)) ...
%             = diff_h_Mr_near(l(ee,ii),S_1(1,:)) ...
%               + A ...
%                 *(  2 ...
%                     *Re ...
%                     *diff_theta_m_a_ichu ...
%                     *diff_h_theta_m ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *(  diff_theta_m_ar_idrchu ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_az_idzchu ...
%                         *diff_h_theta_m ...
%                      ) ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *Re ...
%                     *A ...
%                     *(  diff_theta_m_a_ichudrchu ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_a_ichwdzchu ...
%                         *diff_h_theta_m ...
%                      ) ...
%                     /3 ...
%                  );
%         diff_h_Mz_near(l(ee,ii),S_1(1,:)) ...
%             = diff_h_Mz_near(l(ee,ii),S_1(1,:)) ...
%               + A ...
%                 *(  2 ...
%                     *Re ...
%                     *diff_theta_m_a_ichw ...
%                     *diff_h_theta_m ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *(  diff_theta_m_ar_idrchw ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_az_idzchw ...
%                         *diff_h_theta_m ...
%                      ) ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *Re ...
%                     *A ...
%                     *(  diff_theta_m_a_ichudrchw ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_a_ichwdzchw ...
%                         *diff_h_theta_m ...
%                      ) ...
%                     /3 ...
%                  );
%         %Contributions of the derivatives with respect to A
%         diff_A_Mr_near(l(ee,ii)) ...
%             = diff_A_Mr_near(l(ee,ii)) ...
%               + (  2 ... 
%                    *Re ...
%                    *a_ichu ...
%                    /3 ...
%                  + 2 ...
%                    *delta_t ...
%                    *(  ar_idrchu ...
%                      + az_idzchu ...
%                     ) ...
%                    /3 ...
%                  + 4 ...
%                    *delta_t ...
%                    *Re ...
%                    *A ...
%                    *(  a_ichudrchu ...
%                      + a_ichwdzchu ...
%                     ) ...
%                    /3 ...
%                 );
%         diff_A_Mz_near(l(ee,ii)) ...
%             = diff_A_Mz_near(l(ee,ii)) ...
%               + (  2 ...
%                    *Re ...
%                    *a_ichw ...
%                    /3 ...
%                  + 2 ...
%                    *delta_t ...
%                    *(  ar_idrchw ...
%                      + az_idzchw ...
%                     ) ...
%                    /3 ...
%                  + 4 ...
%                    *delta_t ...
%                    *Re ...
%                    *A ...
%                    *(  a_ichudrchw ...
%                      + a_ichwdzchw ...
%                     ) ...
%                    /3 ...
%                 );
        for qq = 1:n_s_e 
            diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                = diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                  + 2 ...
                    *delta_t ...
                    *(- St ...
                        *diff_h_a_igr(qq) ...
                     ) ...
                    /3;
%                 ...
%                   + 2 ...
%                     *Re ...
%                     *A ...
%                     *diff_h_a_ichu(qq) ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *(  A ...
%                         *(  diff_h_ar_idrchu(qq) ...
%                           + diff_h_az_idzchu(qq) ...
%                          ) ...
%                       + Re ...
%                         *A^2 ...
%                         *(  diff_h_a_ichudrchu(qq) ...
%                           + diff_h_a_ichwdzchu(qq) ...
%                          ) ...
%                      ) ...
%                     /3 ...; 
            diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                = diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                  + 2 ...
                    *delta_t ...
                    *(- St ...
                        *diff_h_a_igz(qq) ...
                     ) ...
                    /3;
%                 ...
%                   + 2 ...
%                     *Re ...
%                     *A ...
%                     *diff_h_a_ichw(qq) ...
%                     /3 ...
%                   + 2 ...
%                     *delta_t ...
%                     *(  A ...
%                         *(  diff_h_ar_idrchw(qq) ...
%                           + diff_h_az_idzchw(qq) ...
%                          ) ...
%                       + Re ...
%                         *A^2 ...
%                         *(  diff_h_a_ichudrchw(qq) ...
%                           + diff_h_a_ichwdzchw(qq) ...
%                          ) ...
%                      ) ...
%                     /3 ...; 
        end
        for jj = 1:6 %compute product of basis function ii by the 
            %part of the solution that is supported on the element 
            %(for linear terms this is just the six hat functions 
            %on each node times its node value);
            %
            %Zeroing variables we need to include to calculate the
            %derivative of Mr_i with respect to u_j
            arr_ij = 0;
            azz_ij = 0;
            a_ij = 0;
%             ar_ijchu = 0;
%             az_ijchw = 0;
%             a_ijdrchu = 0;
            %Zeroing variables we need to include to calculate the
            %derivative of Mr_i with respecto to w_j
            azr_ij = 0;
%             a_ijdzchu = 0;
            %Zeroing variables we need to add to calculate the 
            %derivatives of Mz_i with respect to u_j
            arz_ij = 0;
%             a_ijdrchw = 0;
            %Zeroing variables we need to include to calculate the
            %derivative of Mz_i with respecto to w_j
%             a_ijdzchw = 0;
            %Zeroing variables needed to include to calculate the 
            %derivatives of Mr_i with respect to theta_m
%             diff_theta_m_ar_ijchu = 0;
%             diff_theta_m_az_ijchw = 0;
%             diff_theta_m_a_ijdrchu = 0;
%             diff_theta_m_a_ijdzchu = 0;
            %Zeroing variables needed to include to calculate the 
            %derivatives of Mz_i with respect to theta_m
%             diff_theta_m_a_ijdrchw = 0;
%             diff_theta_m_a_ijdzchw = 0;
            %Zeroing variables needed to include to calculate the 
            %derivatives of Mr_i with respect to h_q
            diff_h_arr_ij = zeros(1,n_s_e);
            diff_h_azz_ij = zeros(1,n_s_e);
            diff_h_a_ij = zeros(1,n_s_e);
%             diff_h_ar_ijchu = zeros(1,n_s_e);
%             diff_h_az_ijchw = zeros(1,n_s_e);
%             diff_h_a_ijdrchu = zeros(1,n_s_e);
            diff_h_azr_ij = zeros(1,n_s_e);
%             diff_h_a_ijdzchu = zeros(1,n_s_e);
            %Zeroing variables needed to include to calculate the 
            %derivatives of Mz_i with respect to h_q
            diff_h_arz_ij = zeros(1,n_s_e);
%             diff_h_a_ijdrchw = zeros(1,n_s_e);
%             diff_h_a_ijdzchw = zeros(1,n_s_e);
            for pp = 1:n_Gaussian_Q
                %Variables we need to include to calculate the
                %derivative of Mr_i with respect to u_j
                arr_ij = arr_ij ...
                         + W_G(pp) ...
                           *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                           *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                           /det_Je(pp);
                azz_ij = azz_ij ...
                         + W_G(pp) ...
                           *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                           *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                           /det_Je(pp);
                a_ij = a_ij ...
                       + W_G(pp) ...
                         *phi_G(ii,pp) ...
                         *phi_G(jj,pp) ...
                         *det_Je(pp);
%                 ar_ijchu = ar_ijchu ...
%                            + W_G(pp) ...
%                              *phi_G(ii,pp) ...
%                              *(T{pp}(jj,:)*(z_e-min_z_e)) ...
%                              *u_check(pp);
%                 az_ijchw = az_ijchw ...
%                            - W_G(pp) ...
%                              *phi_G(ii,pp) ...
%                              *(T{pp}(jj,:)*(r_e-min_r_e)) ...
%                              *w_check(pp);
%                 a_ijdrchu = a_ijdrchu ...
%                             + W_G(pp) ...
%                               *phi_G(ii,pp) ...
%                               *phi_G(jj,pp) ...
%                               *dr_u_check(pp) ...
%                               *det_Je(pp);
                %Variables we need to include to calculate 
                %the derivative of Mr_i with respecto to w_j
                azr_ij = azr_ij ...
                         - W_G(pp) ...
                           *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                           *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                           /det_Je(pp);
%                 a_ijdzchu = a_ijdzchu ...
%                             + W_G(pp) ...
%                               *phi_G(ii,pp) ...
%                               *phi_G(jj,pp) ...
%                               *dz_u_check(pp) ...
%                               *det_Je(pp);
                %Variables we need to add to calculate the 
                %derivatives of Mz_i with respect to u_j
                arz_ij = arz_ij ...
                         - W_G(pp) ...
                           *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                           *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                           /det_Je(pp);
%                 a_ijdrchw = a_ijdrchw ...
%                             + W_G(pp) ...
%                               *phi_G(ii,pp) ...
%                               *phi_G(jj,pp) ...
%                               *dr_w_check(pp) ...
%                               *det_Je(pp);
                %Variables we need to add to calculate the 
                %derivatives of Mz_i with respect to w_j
%                 a_ijdzchw = a_ijdzchw ...
%                             + W_G(pp) ...
%                               *phi_G(ii,pp) ...
%                               *phi_G(jj,pp) ...
%                               *dz_w_check(pp) ...
%                               *det_Je(pp);  
                %Variables needed to include to calculate the 
                %derivatives of Mr_i with respect to theta_m
%                 diff_theta_m_ar_ijchu ...
%                     = diff_theta_m_ar_ijchu ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *(T{pp}(jj,:)*(z_e-min_z_e)) ...
%                         *(  dlambda_eig_u_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - dphi_u_check(pp) ...
%                          );
%                 diff_theta_m_az_ijchw ...
%                     = diff_theta_m_az_ijchw ...
%                       - W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *(T{pp}(jj,:)*(r_e-min_r_e)) ...
%                         *(  dlambda_eig_w_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - dphi_w_check(pp) ...
%                          );
%                 diff_theta_m_a_ijdrchu ...
%                     = diff_theta_m_a_ijdrchu ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *phi_G(jj,pp) ...
%                         *(  drlambda_eig_u_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - drphi_u_check(pp) ...
%                          ) ...
%                         *det_Je(pp);
%                 diff_theta_m_a_ijdzchu ...
%                     = diff_theta_m_a_ijdzchu ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *phi_G(jj,pp) ...
%                         *(  dzlambda_eig_u_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - dzphi_u_check(pp) ...
%                          )...
%                         *det_Je(pp);
                %Variables needed to include to calculate the 
                %derivatives of Mz_i with respect to theta_m
%                 diff_theta_m_a_ijdrchw ...
%                     = diff_theta_m_a_ijdrchw ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *phi_G(jj,pp) ...
%                         *(  drlambda_eig_w_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - drphi_w_check(pp) ...
%                          ) ...
%                         *det_Je(pp);
%                 diff_theta_m_a_ijdzchw ...
%                     = diff_theta_m_a_ijdzchw ...
%                       + W_G(pp) ...
%                         *phi_G(ii,pp) ...
%                         *phi_G(jj,pp) ...
%                         *(  dzlambda_eig_w_check(pp) ...
%                             *(-pi/(theta_m^2)) ...
%                           - dzphi_w_check(pp) ...
%                          ) ...
%                         *det_Je(pp);
                for qq = 1:n_s_e
                    %Variables we need to include to 
                    %calculate the derivatives of Mr_i with 
                    %respect to h_q
                    diff_h_azr_ij(qq) ...
                        = diff_h_azr_ij(qq) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_r_e(:,qq)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*diff_h_z_e(:,qq)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
%                     diff_h_a_ijdzchu(qq) ...
%                         = diff_h_a_ijdzchu(qq) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drz_u_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dzz_u_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dz_u_check(pp) ...     
%                             *diff_h_det_Je(pp,qq);
% %                                   + W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *phi_G(jj,pp) ...
% %                                     *dzlambda_eig_u_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
% %                                     *det_Je(pp) ...
                    diff_h_arr_ij(qq) ...
                        = diff_h_arr_ij(qq) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_z_e(:,qq)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*diff_h_z_e(:,qq)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_azz_ij(qq) ...
                        = diff_h_azz_ij(qq) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_r_e(:,qq)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*diff_h_r_e(:,qq)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
%                     diff_h_ar_ijchu(qq) ...
%                         = diff_h_ar_ijchu(qq) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*diff_h_z_e(:,qq)) ...
%                             *u_check(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*(z_e-min_z_e)) ...
%                             *dr_u_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*(z_e-min_z_e)) ...
%                             *dz_u_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              );
% %                                   + W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *(T{pp}(jj,:)*(z_e-min_z_e)) ...
% %                                     *dlambda_eig_u_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
%                     diff_h_az_ijchw(qq) ...
%                         = diff_h_az_ijchw(qq) ...
%                           - W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*diff_h_r_e(:,qq)) ...
%                             *w_check(pp) ...
%                           - W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*(r_e-min_r_e)) ...
%                             *dr_w_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                           - W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *(T{pp}(jj,:)*(r_e-min_r_e)) ...
%                             *dz_w_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              );
% %                                   - W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *(T{pp}(jj,:)*(r_e-min_r_e)) ...
% %                                     *dlambda_eig_w_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
%                     diff_h_a_ijdrchu(qq) ...
%                         = diff_h_a_ijdrchu(qq) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drr_u_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drz_u_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dr_u_check(pp) ...
%                             *diff_h_det_Je(pp,qq);
% %                                   + W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *phi_G(jj,pp) ...
% %                                     *drlambda_eig_u_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
% %                                     *det_Je(pp) ...
                    diff_h_a_ij(qq)  ...
                        = diff_h_a_ij(qq) ...
                          + W_G(pp) ...
                            *phi_G(ii,pp) ...
                            *phi_G(jj,pp) ...
                            *diff_h_det_Je(pp,qq);
                    %Variables we need to include to calculate the
                    %derivatives of Mz_i with respect to h_q
                    diff_h_arz_ij(qq) ...
                        = diff_h_arz_ij(qq) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_z_e(:,qq)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*diff_h_r_e(:,qq)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
%                     diff_h_a_ijdrchw(qq) ...
%                         = diff_h_a_ijdrchw(qq) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drr_w_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drz_w_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dr_w_check(pp) ...
%                             *diff_h_det_Je(pp,qq);
% %                                   + W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *phi_G(jj,pp) ...
% %                                     *drlambda_eig_w_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
% %                                     *det_Je(pp) ...
%                     diff_h_a_ijdzchw(qq) ...
%                         = diff_h_a_ijdzchw(qq) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *drz_w_check(pp) ...
%                             *(  diff_h_r_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,1) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dzz_w_check(pp) ...
%                             *(  diff_h_z_e_Gaussian(pp,qq) ...
%                               - (qq==1)*diff_h0_rz(1,2) ...
%                              ) ...
%                             *det_Je(pp) ...
%                           + W_G(pp) ...
%                             *phi_G(ii,pp) ...
%                             *phi_G(jj,pp) ...
%                             *dz_w_check(pp) ...     
%                             *diff_h_det_Je(pp,qq);
% %                                   + W_G(pp) ...
% %                                     *phi_G(ii,pp) ...
% %                                     *phi_G(jj,pp) ...
% %                                     *dzlambda_eig_w_check(pp) ...
% %                                     *(qq == 1)*diff_h0_lambda_eig ...
% %                                     *det_Je(pp) ...
                end
            end
%             %Contributions to the derivatives with respect to h
%             %that come from derivatives with respect to theta_m
%             diff_h_Mr_near(l(ee,ii),S_1(1,:)) ...
%                 = diff_h_Mr_near(l(ee,ii),S_1(1,:)) ...
%                   + Re ...
%                     *A ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  w_bar(l(ee,jj)) ...
%                             *diff_theta_m_a_ijdzchu ...
%                             *diff_h_theta_m ...
%                           + u_bar(l(ee,jj)) ...
%                             *(  diff_theta_m_a_ijdrchu ...
%                                 *diff_h_theta_m ...
%                               + diff_theta_m_ar_ijchu ...
%                                 *diff_h_theta_m ...
%                               + diff_theta_m_az_ijchw ...
%                                 *diff_h_theta_m ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                       - diff_theta_m_a_ijdrchu ...
%                         *diff_h_theta_m ...
%                         *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                          ) ...
%                       - diff_theta_m_a_ijdzchu ...
%                         *diff_h_theta_m ...
%                         *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                          ) ...
%                      );
%             diff_h_Mz_near(l(ee,ii),S_1(1,:)) ...
%                 = diff_h_Mz_near(l(ee,ii),S_1(1,:)) ...
%                   + Re ...
%                     *A ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  u_bar(l(ee,jj)) ...
%                             *diff_theta_m_a_ijdrchw ...
%                             *diff_h_theta_m ...
%                           + w_bar(l(ee,jj)) ...
%                             *(  diff_theta_m_a_ijdzchw ...
%                                 *diff_h_theta_m ...
%                               + diff_theta_m_ar_ijchu ...
%                                 *diff_h_theta_m ...
%                               + diff_theta_m_az_ijchw ...
%                                 *diff_h_theta_m ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                       - diff_theta_m_a_ijdrchw ...
%                         *diff_h_theta_m ...
%                         *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                          ) ...
%                       - diff_theta_m_a_ijdzchw ...
%                         *diff_h_theta_m ...
%                         *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                          ) ...
%                      );
%             %Contributions to derivatives with respect to A
%             diff_A_Mr_near(l(ee,ii)) ...
%                 = diff_A_Mr_near(l(ee,ii)) ...
%                   + Re ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  w_bar(l(ee,jj)) ...
%                             *a_ijdzchu ...
%                           + u_bar(l(ee,jj)) ...
%                             *(  ar_ijchu ...
%                               + az_ijchw ...
%                               + a_ijdrchu ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                       - a_ijdrchu ...
%                         *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                          ) ...
%                       - a_ijdzchu ...
%                         *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                          ) ...
%                      );
%             diff_A_Mz_near(l(ee,ii)) ...
%                 = diff_A_Mz_near(l(ee,ii)) ...
%                   + Re ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  u_bar(l(ee,jj)) ...
%                             *a_ijdrchw ...
%                           + w_bar(l(ee,jj)) ...
%                             *(  ar_ijchu ...
%                               + az_ijchw ...
%                               + a_ijdzchw ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                       - a_ijdrchw ...
%                         *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                          ) ...
%                       - a_ijdzchw ...
%                         *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                           - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                          ) ...
%                      );
            %Zeroing variables needed for inner sum in kk
            Abar_ij = 0;
            B_ij = 0;
            C_ij = 0;
            diff_h_Abar_ij = zeros(1,n_s_e);
            diff_h_B_ij = zeros(1,n_s_e);
            diff_h_C_ij = zeros(1,n_s_e);
            for kk = 1:6 %This second loop is needed because of the
                %non-linearity of the convective term 
                ar_ikj = 0;
                diff_h_ar_ikj = zeros(1,n_s_e);
                az_ikj = 0;
                diff_h_az_ikj = zeros(1,n_s_e);
                for pp = 1:n_Gaussian_Q
                    ar_ikj = ar_ikj ...
                             + W_G(pp) ...
                               *phi_G(ii,pp) ...
                               *phi_G(kk,pp) ...
                               *(T{pp}(jj,:)*(z_e-min_z_e));
                    az_ikj = az_ikj ...
                             - W_G(pp) ...
                               *phi_G(ii,pp) ...
                               *phi_G(kk,pp) ...
                               *(T{pp}(jj,:)*(r_e-min_r_e));
                    for qq = 1:n_s_e
                        diff_h_ar_ikj(qq) ...
                            = diff_h_ar_ikj(qq) ...
                              + W_G(pp) ...
                                *phi_G(ii,pp) ...
                                *phi_G(kk,pp) ...
                                *(T{pp}(jj,:)*diff_h_z_e(:,qq));
                        diff_h_az_ikj(qq) ...
                            = diff_h_az_ikj(qq) ...
                              - W_G(pp) ...
                                *phi_G(ii,pp) ...
                                *phi_G(kk,pp) ...
                                *(T{pp}(jj,:)*diff_h_r_e(:,qq));
                    end
                end
                Abar_ij = Abar_ij ...
                          + ar_ikj ...
                            *u_bar(l(ee,kk)) ...
                          + az_ikj ...
                            *w_bar(l(ee,kk));
                B_ij = B_ij ...
                       + ar_ikj ...
                         *( 2*Nodes_rz(l(ee,kk),1)/3 ...
                           -2*Nodes_rz_minus1(l(ee,kk),1)/3 ...
                          );
                C_ij = C_ij ...
                       + az_ikj ...
                         *( 2*Nodes_rz(l(ee,kk),2)/3 ...
                           -2*Nodes_rz_minus1(l(ee,kk),2)/3 ...
                          );
                for qq = 1:n_s_e
                    diff_h_Abar_ij(qq) ...
                        = diff_h_Abar_ij(qq) ...
                          + diff_h_ar_ikj(qq) ...
                            *u_bar(l(ee,kk)) ...
                          + diff_h_az_ikj(qq) ...
                            *w_bar(l(ee,kk));
                    diff_h_B_ij(qq) ...
                        = diff_h_B_ij(qq) ...
                          + diff_h_ar_ikj(qq) ...
                            *( 2*Nodes_rz(l(ee,kk),1)/3 ...
                              -2*Nodes_rz_minus1(l(ee,kk),1)/3 ...
                             ) ...
                          + 2 ...
                            *ar_ikj ...
                            *diff_h_r_e(kk,qq) ...
                            /3;
                    diff_h_C_ij(qq) ...
                        = diff_h_C_ij(qq) ...
                          + diff_h_az_ikj(qq) ...
                            *( 2*Nodes_rz(l(ee,kk),2)/3 ...
                              -2*Nodes_rz_minus1(l(ee,kk),2)/3 ... 
                             ) ...
                          + 2 ...
                            *az_ikj ...
                            *diff_h_z_e(kk,qq) ...
                            /3;
                end
                %Jacobian contributions
                diff_u_bar_Mr_near(l(ee,ii),l(ee,kk)) ...
                    = diff_u_bar_Mr_near(l(ee,ii),l(ee,kk))...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *u_bar(l(ee,jj)) ...
                        *ar_ikj ...
                        /3;
                diff_w_bar_Mr_near(l(ee,ii),l(ee,kk)) ...
                    = diff_w_bar_Mr_near(l(ee,ii),l(ee,kk))...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *u_bar(l(ee,jj)) ...
                        *az_ikj ...
                        /3;
                diff_u_bar_Mz_near(l(ee,ii),l(ee,kk)) ...
                    = diff_u_bar_Mz_near(l(ee,ii),l(ee,kk))...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *w_bar(l(ee,jj)) ...
                        *ar_ikj ...
                        /3;
                diff_w_bar_Mz_near(l(ee,ii),l(ee,kk)) ...
                    = diff_w_bar_Mz_near(l(ee,ii),l(ee,kk))...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *w_bar(l(ee,jj)) ...
                        *az_ikj ...
                        /3;
            end
            %Jacobian contributions
            diff_u_bar_Mr_near(l(ee,ii),l(ee,jj)) ...
                = diff_u_bar_Mr_near(l(ee,ii),l(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *(  arr_ij ... % (*2)
                      + azz_ij ...
                     ) ...
                    /3 ...
                  + 2 ...
                    *Re ...
                    *a_ij ...
                    /3 ...
                  + Re ...
                    *(  2 ...
                        *delta_t ...
                        *( Abar_ij ...
                         ) ...
                        /3 ...
                      - B_ij ...
                      - C_ij ...
                     ); 
%                  ...
%                   + Re ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  A ...
%                             *(  ar_ijchu ...
%                               + az_ijchw ...
%                               + a_ijdrchu ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                      );
%             diff_w_bar_Mr_near(l(ee,ii),l(ee,jj)) ...
%                 = diff_w_bar_Mr_near(l(ee,ii),l(ee,jj)) ... 
%                   + 2 ...
%                     *delta_t ...
%                     *(  Re ...
%                         *A ...
%                         *a_ijdzchu ... % + azr_ij ...
%                      ) ...
%                     /3;
%             diff_u_bar_Mz_near(l(ee,ii),l(ee,jj)) ...
%                 = diff_u_bar_Mz_near(l(ee,ii),l(ee,jj)) ...
%                   + 2 ...
%                     *delta_t ...
%                     *(  Re ...
%                         *A ...
%                         *a_ijdrchw ... % + arz_ij ...
%                      ) ...
%                     /3;
            diff_w_bar_Mz_near(l(ee,ii),l(ee,jj)) ...
                = diff_w_bar_Mz_near(l(ee,ii),l(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *(  azz_ij ... %(*2)
                      + arr_ij ...
                     ) ...
                    /3 ...
                  + 2 ...
                    *Re ...
                    *a_ij ...
                    /3 ...
                  + Re ...
                    *(  2 ...
                        *delta_t ...
                        *( Abar_ij ...
                         ) ...
                        /3 ...
                      - B_ij ...
                      - C_ij ...
                     ); 
%                  ...
%                   + Re ...
%                     *(  2 ...
%                         *delta_t ...
%                         *(  A ...
%                             *(  ar_ijchu ...
%                               + az_ijchw ...
%                               + a_ijdzchw ...
%                              ) ...
%                          ) ...
%                         /3 ...
%                      );       
            for qq = 1:n_s_e
                diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                    = diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *u_bar(l(ee,jj)) ...
                        *(  diff_h_arr_ij(qq) ... % (*2)
                          + diff_h_azz_ij(qq) ...
                         ) ...
                        /3 ...
                      + Re ...
                        *(  diff_h_a_ij(qq) ...
                            *(  2*u_bar(l(ee,jj))/3 ...
                              - 2*u_minus1(l(ee,jj))/3 ...
                             ) ...
                         ) ...
                       + Re ...
                         *u_bar(l(ee,jj)) ...
                         *(  2 ...
                             *delta_t ...
                             *diff_h_Abar_ij(qq) ...
                             /3 ...
                           - diff_h_B_ij(qq) ...
                           - diff_h_C_ij(qq) ...
                          ); 
%                       ...
%                       + 2 ...
%                         *delta_t ...
%                         *w_bar(l(ee,jj)) ...
%                         *(  Re ...
%                             *A ...
%                             *diff_h_a_ijdzchu(qq) ... % + diff_h_azr_ij(qq) ...
%                          ) ...
%                         /3 ...
%                       + 2 ...
%                         *delta_t ...
%                         *u_bar(l(ee,jj)) ...
%                         *(  Re ...
%                             *A ...
%                             *(  diff_h_ar_ijchu(qq) ...
%                               + diff_h_az_ijchw(qq) ...
%                               + diff_h_a_ijdrchu(qq) ...
%                              ) ... 
%                          ) ...
%                         /3 ...
%                       + Re ...
%                         *(- A ...
%                             *(  2 ...
%                                 *a_ijdrchu ...
%                                 *diff_h_r_e(jj,qq) ...
%                                 /3 ...
%                               + diff_h_a_ijdrchu(qq) ...
%                                 *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                                   - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                                  ) ...
%                               + 2 ...
%                                 *a_ijdzchu ...
%                                 *diff_h_z_e(jj,qq) ...
%                                 /3 ...
%                               + diff_h_a_ijdzchu(qq) ...
%                                 *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                                   - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                                  ) ...
%                              ) ...
%                          ) ...;
                diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                    = diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *w_bar(l(ee,jj)) ...
                        *(  diff_h_arr_ij(qq) ...
                          + diff_h_azz_ij(qq) ... % (*2)
                         ) ...
                        /3 ...
                      + Re ...
                        *(  diff_h_a_ij(qq) ...
                            *(  2*w_bar(l(ee,jj))/3 ...
                              - 2*w_minus1(l(ee,jj))/3 ...
                             ) ...
                         ) ...
                       + Re ...
                         *w_bar(l(ee,jj)) ...
                         *(  2 ...
                             *delta_t ...
                             *diff_h_Abar_ij(qq) ...
                             /3 ...
                           - diff_h_B_ij(qq) ...
                           - diff_h_C_ij(qq) ...
                          );
%                       ...
%                       + 2 ...
%                         *delta_t ...
%                         *u_bar(l(ee,jj)) ...
%                         *(  Re ...
%                             *A ...
%                             *diff_h_a_ijdrchw(qq) ... % + diff_h_arz_ij(qq) ...
%                          ) ...
%                         /3 ...
%                       + 2 ...
%                         *delta_t ...
%                         *w_bar(l(ee,jj)) ...
%                         *(  Re ...
%                             *A ...
%                             *(  diff_h_ar_ijchu(qq) ...
%                               + diff_h_az_ijchw(qq) ...
%                               + diff_h_a_ijdzchw(qq) ...
%                              ) ... 
%                          ) ...
%                         /3 ...
%                       + Re ...
%                         *(- A ...
%                             *(  2 ...
%                                 *a_ijdrchw ...
%                                 *diff_h_r_e(jj,qq) ...
%                                 /3 ...
%                               + diff_h_a_ijdrchw(qq) ...
%                                 *(  2*Nodes_rz(l(ee,jj),1)/3 ...
%                                   - 2*Nodes_rz_minus1(l(ee,jj),1)/3 ...
%                                  ) ...
%                               + 2 ...
%                                 *a_ijdzchw ...
%                                 *diff_h_z_e(jj,qq) ...
%                                 /3 ...
%                               + diff_h_a_ijdzchw(qq) ...
%                                 *(  2*Nodes_rz(l(ee,jj),2)/3 ...
%                                   - 2*Nodes_rz_minus1(l(ee,jj),2)/3 ...
%                                  ) ...
%                              ) ...
%                          ) ...;
            end
        end
        for jj = 1:3
            br_ji = 0;
            diff_h_br_ji = zeros(1,n_s_e);
            bz_ji = 0;
            diff_h_bz_ji = zeros(1,n_s_e);
            for pp = 1:n_Gaussian_Q
                br_ji = br_ji ...
                        + W_G(pp) ...
                          *psi_G(jj,pp) ...
                          *(T{pp}(ii,:)*(z_e-min_z_e));
                bz_ji = bz_ji ...
                        - W_G(pp) ...
                          *psi_G(jj,pp) ...
                          *(T{pp}(ii,:)*(r_e-min_r_e));
                for qq = 1:n_s_e
                    diff_h_br_ji(qq) ...
                        = diff_h_br_ji(qq) ...
                          + W_G(pp) ...
                            *psi_G(jj,pp) ...
                            *(T{pp}(ii,:)*diff_h_z_e(:,qq));
                    diff_h_bz_ji(qq) ...
                        = diff_h_bz_ji(qq) ...
                          - W_G(pp) ...
                            *psi_G(jj,pp) ...
                            *(T{pp}(ii,:)*diff_h_r_e(:,qq));
                end
            end
            %Jacobian contributions
            diff_p_near_Mr_near(l(ee,ii),lp(ee,jj)) ...
                = diff_p_near_Mr_near(l(ee,ii),lp(ee,jj)) ...
                  - 2 ...
                    *delta_t ...
                    *br_ji ...
                    /3;
            diff_p_near_Mz_near(l(ee,ii),lp(ee,jj)) ...
                = diff_p_near_Mz_near(l(ee,ii),lp(ee,jj)) ...
                  - 2 ...
                    *delta_t ...
                    *bz_ji ...
                    /3;
            diff_u_bar_C_near(lp(ee,jj),l(ee,ii)) ...
                = diff_u_bar_C_near(lp(ee,jj),l(ee,ii)) ...
                  - br_ji;
            diff_w_bar_C_near(lp(ee,jj),l(ee,ii)) ...
                = diff_w_bar_C_near(lp(ee,jj),l(ee,ii)) ...
                  - bz_ji;
            for qq = 1:n_s_e
                diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                    = diff_h_Mr_near(l(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *p(lp(ee,jj)) ...
                        *diff_h_br_ji(qq) ...
                        /3;
                diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                    = diff_h_Mz_near(l(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *p(lp(ee,jj)) ...
                        *diff_h_bz_ji(qq) ...
                        /3;
                diff_h_C_near(lp(ee,jj),spines_e(qq)) ...
                    = diff_h_C_near(lp(ee,jj),spines_e(qq)) ...
                      - u_bar(l(ee,ii)) ...
                        *diff_h_br_ji(qq) ...
                      - w_bar(l(ee,ii)) ...
                        *diff_h_bz_ji(qq);
            end
        end
    end
end 

%Contact line contributions to momentum residuals
diff_sigma1_Mr_near(c1,c1) ...
    = diff_sigma1_Mr_near(c1,c1) ...
      + 2 ...
        *delta_t ...
        *m1_r ...
        /(3*Ca);
diff_sigma1_Mz_near(c1,c1) ...
    = diff_sigma1_Mz_near(c1,c1) ...
      + 2 ...
        *delta_t ...
        *m1_z ...
        /(3*Ca);
diff_theta_c_Mr_near =  2 ...
                        *delta_t ...
                        *sigma1(c1) ...
                        *diff_theta_c_m1_r ...
                        /(3*Ca);
diff_theta_c_Mz_near = 2 ...
                       *delta_t ...
                       *sigma1(c1) ...
                       *diff_theta_c_m1_z ...
                       /(3*Ca);
%         This bit here is not needed but I kept it commented because
%         something very similar will be used when we deal with wetting of
%         a curved surface
%         diff_h_Mr_near(contact_line,1) ...
%             = diff_h_Mr_near(contact_line,1) ... 
%               + 2 ...
%                 *delta_t ...
%                 *sigma1(contact_line) ...
%                 *(sin(theta_c)) ...
%                 *diff_h0_theta_c(theta_c,theta_c_ini,theta_c_min) ...
%                 /(3*Ca);
%         diff_h_Mz_near(contact_line,1) ...
%             = diff_h_Mz_near(contact_line,1) ...
%               + 2 ...
%                 *delta_t ...
%                 *sigma1(contact_line) ...
%                 *(cos(theta_c)) ...
%                 *diff_h0_theta_c(theta_c,theta_c_ini,theta_c_min) ...
%                 /(3*Ca);

%Contact line contributions to the mass exchange equation
diff_rhos2_E1_near = Lg ...
                     *(  2 ...
                         *delta_t ...
                         *(  us2(c2) ...
                             *m2_r ...
                           + ws2(c2) ...
                             *m2_z ...
                          ) ...
                         /3 ...
                       - m2_r ...
                         *(  2*Nodes_rz(contact_line,1)/3 ...
                           - 2*Nodes_rz_minus1(contact_line,1)/3 ...
                          ) ...
                       - m2_z ...
                         *(  2*Nodes_rz(contact_line,2)/3 ...
                           - 2*Nodes_rz_minus1(contact_line,2)/3 ...
                          ) ...
                      );
diff_us2_E1_near = 2 ...
                   *delta_t ...
                   *Lg ...
                   *rhos2(c2) ...
                   *m2_r ...
                   /3;
diff_ws2_E1_near = 2 ...
                   *delta_t ...
                   *Lg ...
                   *rhos2(c2) ...
                   *m2_z ...
                   /3;
diff_h_E1_near(c1,1) = diff_h_E1_near(c1,1) ...
                       - 2 ...
                         *Lg ...
                         *rhos2(c2) ...
                         *(  m2_r ...
                             *diff_h0_rz(contact_line,1) ...
                           + m2_z ...
                             *diff_h0_rz(contact_line,2) ...
                          ) ...
                         /3;
%Contact line contributions to the density transport equation
diff_rhos2_D1_near = Tg ...
                     *(  2 ...
                         *delta_t ...
                         *(  us2(c2) ...
                             *m2_r ...
                           + ws2(c2) ...
                             *m2_z ...
                          ) ...
                         /3 ...
                       - m2_r ...
                         *(  2*Nodes_rz(contact_line,1)/3 ...
                           - 2*Nodes_rz_minus1(contact_line,1)/3 ...
                          ) ...
                       - m2_z ...
                         *(  2*Nodes_rz(contact_line,2)/3 ...
                           - 2*Nodes_rz_minus1(contact_line,2)/3 ...
                          ) ...
                      );
diff_us2_D1_near = 2 ...
                   *delta_t ...
                   *Tg ...
                   *rhos2(c2) ...
                   *m2_r ...
                   /3;
diff_ws2_D1_near = 2 ...
                   *delta_t ...
                   *Tg ...
                   *rhos2(c2) ...
                   *m2_z ...
                   /3;
diff_h_D1_near(c1,1) = diff_h_D1_near(c1,1) ...
                       - 2 ...
                         *Tg ...
                         *rhos2(c2) ...
                         *(  m2_r ...
                             *diff_h0_rz(contact_line,1) ...
                           + m2_z ...
                             *diff_h0_rz(contact_line,2) ...
                          ) ...
                         /3;
                     
%Adding the free-surface boundary contributions to the Jacobian of
%equations for the near field
%First line-element (has one less spine it depends on)
for ee = 1
    %Finding nodal positions for this line element
    r_le = Nodes_rz(l_1(ee,:),1);
    z_le = Nodes_rz(l_1(ee,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    r_e = Nodes_rz(l(LE_to_TE_1(ee),:),1);
    z_e = Nodes_rz(l(LE_to_TE_1(ee),:),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %Finding total number of spines whose size affects this line 
    %element
    n_s_e = length(S_1(ee,:));
    %Finding the numbers of the spines whose lengths affect the 
    %shape of the element
    spines_e = S_1(ee,:);
    %Finding derivatives of the nodal positions with respect to the
    %spine legnths
    diff_h_r_le = zeros(3,n_s_e);
    diff_h_z_le = zeros(3,n_s_e);
    diff_h_r_le(:,1) = diff_h0_rz(l_1(ee,:),1);
    diff_h_z_le(:,1) = diff_h0_rz(l_1(ee,:),2);
    for qq = 2:n_s_e
        for rr = el1_s_loc_nodes(ee,qq)
            diff_h_r_le(rr,qq) = diff_h_rz(l_1(ee,rr),1);
            diff_h_z_le(rr,qq) = diff_h_rz(l_1(ee,rr),2);
        end
    end
    diff_h_r_le_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_le_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            diff_h_r_le_lGaussian(pp,qq) ...
                = (diff_h_r_le(:,qq)')*phi1_lG(:,pp);
            diff_h_z_le_lGaussian(pp,qq) ...
                = (diff_h_z_le(:,qq)')*phi1_lG(:,pp);
        end
    end
    %Finding derivatives of the nodal position of the associated triangular
    %element
    diff_h_r_e = zeros(6,n_s_e);
    diff_h_z_e = zeros(6,n_s_e);
    diff_h_r_e(:,1) = diff_h0_rz(l(LE_to_TE_1(ee),:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(LE_to_TE_1(ee),:),2);
    for qq = 2:n_s_e
        for rr = el_s_loc_nodes{LE_to_TE_1(ee),qq}
            diff_h_r_e(rr,qq) = diff_h_rz(l(LE_to_TE_1(ee),rr),1);
            diff_h_z_e(rr,qq) = diff_h_rz(l(LE_to_TE_1(ee),rr),2);
        end
    end
    %Finding the derivatives of the determinant of the associated
    %triangular element
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *Tmat1{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *Tmat1{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    %Zeroing vector of r' = \partial_\eta and 
    %Zeroing the derivatives of r' = \partial_\eta r and 
    %z' = \partial_\eta z with respect to the spine 
    %lengths at each Gaussian quadrature point
    diff_h_r_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    %Zeroing the derivative of the determinant of the Jacobian of 
    %the isoparametric map with respect to each spine length at 
    %each Gaussian quadrature point
    diff_h_det_Jle = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        %Finding r' = \partial_\eta and z' = \partial_\eta z at 
        %each Gaussian quadrature point
        r_prime_lGaussian(pp) = (phi1_xi_lG(:,pp)')*(r_le-min_r_le);
        z_prime_lGaussian(pp) = (phi1_xi_lG(:,pp)')*(z_le-min_z_le);
        normaliser = max(abs(r_prime_lGaussian(pp)), ...
                         abs(z_prime_lGaussian(pp)));
        r_prime_lGaussian_aux = r_prime_lGaussian(pp)/normaliser;
        z_prime_lGaussian_aux = z_prime_lGaussian(pp)/normaliser;
        %Finding the determinant of the Jacobian of the 
        %isoparametric map at each Gaussian quadrature point
        det_Jle(pp) = sqrt(  r_prime_lGaussian_aux^2 ...
                           + z_prime_lGaussian_aux^2 ...
                          ) ...
                      *normaliser;
        det_Je(pp) = (r_e'-min_r_e)*Tmat1{pp}*(z_e-min_z_e);
        %Finding the coordinates with respect to the contact line
        %and the tangent plane to the solid to introduce in the
        %expression of the eigensolution
%         r_pp = (r_le'-Nodes_rz(1,1))*phi1_lG(:,pp);
%         z_pp = (z_le'-Nodes_rz(1,2))*phi1_lG(:,pp);
%         %Data for eigensolution
%         theta_pol = atan2(z_pp,r_pp);
%         phi_pp = pi - theta_m - theta_pol;
%         theta_pp = lambda_eig*phi_pp;
%         c_theta_pp = cos(theta_pp);
%         s_theta_pp = sin(theta_pp);
%         divider = max(abs(r_pp),abs(z_pp));
%         r_pp_div = r_pp/divider;
%         z_pp_div = z_pp/divider;
%         rho_l = sqrt(r_pp_div^2+z_pp_div^2);
%         rho_l = rho_l*divider;
%         rho_l_minus2_pp = rho_l^(lambda_eig-2);
%         rho_l_minus4_pp = rho_l^(lambda_eig-4);
%         rho_l_minus6_pp = rho_l^(lambda_eig-6);
%         ln_rho2_pp = 2*log(rho_l);
%         % Find the values of u_check at the Gaussian sampling 
%         %points
%         u_check(pp) = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of w_check at the Gaussian sampling 
%         %points
%         w_check(pp) = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of dr_u_check at the Gaussian sampling 
%         %points
%         dr_u_check(pp) = dr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_u_check at the Gaussian sampling 
%         %points
%         dz_u_check(pp) = dz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_u_check(pp) ...
%             = dlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of dr_w_check at the Gaussian sampling 
%         %points
%         dr_w_check(pp) = dr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_w_check at the Gaussian sampling 
%         %points
%         dz_w_check(pp) = dz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_w_check(pp) ...
%             = dlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of drr_u_check at the Gaussian sampling 
%         %points
%         drr_u_check(pp) = drr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_u_check at the Gaussian sampling 
%         %points
%         drz_u_check(pp) = drz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_u_check at the Gaussian sampling 
%         %points
%         dzz_u_check(pp) = dzz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_u_check at the Gaussian 
%         %sampling points
%         drlambda_eig_u_check(pp) ...
%             = drlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dzlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_u_check(pp) ...
%             = dzlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp); 
%         % Find the values of drr_w_check at the Gaussian sampling 
%         %points
%         drr_w_check(pp) = drr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_w_check at the Gaussian sampling 
%         %points
%         drz_w_check(pp) = drz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_w_check at the Gaussian sampling 
%         %points
%         dzz_w_check(pp) = dzz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_w_check at the Gaussian 
%         %sampling points
%         drlambda_eig_w_check(pp) ...
%             = drlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);  
%         %Find the values of dzlambda_eig_w_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_w_check(pp) ...
%             = dzlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_u_check(pp) ...
%             = dphi_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_w_check(pp) ...
%             = dphi_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_u_check(pp) ...
%             = drphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_u_check(pp) ...
%             = dzphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_w_check(pp) ...
%             = drphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_w_check(pp) ...
%             = dzphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
        for qq = 1:n_s_e
            %Finding the derivatives of r' = \partial_\eta r and 
            %z' = \partial_\eta z with respect to the spine 
            %lengths at each Gaussian quadrature point
            diff_h_r_prime_lGaussian(pp,qq) ...
                = (phi1_xi_lG(:,pp)')*diff_h_r_le(:,qq);
            diff_h_z_prime_lGaussian(pp,qq) ...
                = (phi1_xi_lG(:,pp)')*diff_h_z_le(:,qq);
            %Finding the derivatives of the determinant of the 
            %Jacobian of the isoparametric map with respect to 
            %each spine length at each Gaussian quadrature point
            diff_h_det_Jle(pp,qq) ...
                = (  r_prime_lGaussian(pp) ...
                     *diff_h_r_prime_lGaussian(pp,qq) ...
                   + z_prime_lGaussian(pp) ...
                     *diff_h_z_prime_lGaussian(pp,qq)) ...
                  /det_Jle(pp);
        end
    end
    for ii = 1:3 %looping over line-element nodes to find 
        %contribution to each equation
        %pair-wise inner product of basis functions
        %
%         %Zeroing variables needed to calculate the derivative of 
%         %Mr_i with respect to theta_m
%         diff_theta_m_c_inrdrchu = 0;
%         diff_theta_m_c_inzdrchw = 0;
%         %Zeroing variables needed to calculate the derivative of 
%         %Mr_i with respect to A
%         c_inrdrchu = 0;
%         c_inzdrchw = 0;
%         %Zeroing variables needed to calculate the derivative of 
%         %Mz_i with respect to theta_m
%         diff_theta_m_c_inzdzchw = 0;
%         diff_theta_m_c_inrdzchu = 0;
%         %Zeroing variables needed to calculate the derivative of 
%         %Mz_i with respect to A
%         c_inzdzchw = 0;
%         c_inrdzchu = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %S1_i with respect to theta_m
%         diff_theta_m_c_itrchu = 0;
%         diff_theta_m_c_itzchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %S1_i with respect to A
%         c_itrchu = 0;
%         c_itzchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %E1_i with respect to theta_m
%         diff_theta_m_c_inrchu = 0;
%         diff_theta_m_c_inzchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %E1_i with respect to A
%         c_inrchu = 0;
%         c_inzchw = 0;
%         %Zeroing variables needed to calculate the derivative of 
%         %Mr_1 with respect to h_q
%         diff_h_c_inrdrchu = zeros(1,n_s_e);
%         diff_h_c_inzdrchw = zeros(1,n_s_e);
%         %Zeroing variables needed to calculate the derivative of 
%         %Mz_1 with respect to h_q
%         diff_h_c_inzdzchw = zeros(1,n_s_e);
%         diff_h_c_inrdzchu = zeros(1,n_s_e);
%         %Zeroing variables needed to calculate the derivative of
%         %S1_i with respect to each spine length
%         diff_h_c_itrchu = zeros(1,n_s_e);
%         diff_h_c_itzchw = zeros(1,n_s_e);
        %Zeroing variables needed to calculate the derivative of
        %E1_i with respect to each spine length
        diff_h_c_i = zeros(1,n_s_e);
%         diff_h_c_inrchu = zeros(1,n_s_e);
%         diff_h_c_inzchw = zeros(1,n_s_e);
        for pp = 1:n_lGaussian_Q
%             %Variables needed to calculate the derivative of 
%             %Mr_i with respect to theta_m
%             diff_theta_m_c_inrdrchu ...
%                 = diff_theta_m_c_inrdrchu ...
%                   - alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  drlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_u_check(pp) ...
%                      );
%             diff_theta_m_c_inzdrchw ...
%                 = diff_theta_m_c_inzdrchw ...
%                   + alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  drlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_w_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of 
%             %Mz_i with respect to theta_m
%             diff_theta_m_c_inzdzchw ...
%                 = diff_theta_m_c_inzdzchw ...
%                   + alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dzlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_w_check(pp) ...
%                      );
%             diff_theta_m_c_inrdzchu ...
%                 = diff_theta_m_c_inrdzchu ...
%                   - alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dzlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_u_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of 
%             %Mr_i with respect to A
%             c_inrdrchu = c_inrdrchu ...
%                          - alpha_1 ...
%                            *W_lG(pp) ...
%                            *phi1_lG(ii,pp) ...
%                            *z_prime_lGaussian(pp) ...
%                            *dr_u_check(pp);
%             c_inzdrchw = c_inzdrchw ...
%                          + alpha_1 ...
%                            *W_lG(pp) ...
%                            *phi1_lG(ii,pp) ...
%                            *r_prime_lGaussian(pp) ...
%                            *dr_w_check(pp);
%             %Variables needed to calculate the derivative of 
%             %Mz_i with respect to A
%             c_inzdzchw = c_inzdzchw ...
%                          + alpha_1 ...
%                            *W_lG(pp) ...
%                            *phi1_lG(ii,pp) ...
%                            *r_prime_lGaussian(pp) ...
%                            *dz_w_check(pp);
%             c_inrdzchu = c_inrdzchu ...
%                          - alpha_1 ...
%                            *W_lG(pp) ...
%                            *phi1_lG(ii,pp) ...
%                            *z_prime_lGaussian(pp) ...
%                            *dz_u_check(pp);
%             %Variables needed to calculate the derivative of
%             %S1_i with respect to theta_m
%             diff_theta_m_c_itrchu ...
%                 = diff_theta_m_c_itrchu ...
%                   + W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      );
%             diff_theta_m_c_itzchw ...
%                 = diff_theta_m_c_itzchw ...
%                   + W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of
%             %S1_i with respect to A
%             c_itrchu ...
%                 = c_itrchu ...
%                   + W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *u_check(pp);
%             c_itzchw ...
%                 = c_itzchw ...
%                   + W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *w_check(pp);
%             %Variables needed to calculate the derivative of E1_i
%             %with respect to theta_m
%             diff_theta_m_c_inrchu ...
%                 = diff_theta_m_c_inrchu ...
%                   - alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      );
%             diff_theta_m_c_inzchw ...
%                 = diff_theta_m_c_inzchw ...
%                   + alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of
%             %E1_i with respect to A
%             c_inrchu = c_inrchu ...
%                        - alpha_1 ...
%                          *W_lG(pp) ...
%                          *phi1_lG(ii,pp) ...
%                          *z_prime_lGaussian(pp) ...
%                          *u_check(pp);                                
%             c_inzchw = c_inzchw ...
%                        + alpha_1 ...
%                          *W_lG(pp) ...
%                          *phi1_lG(ii,pp) ...
%                          *r_prime_lGaussian(pp) ...
%                          *w_check(pp); 
            for qq = 1:n_s_e
%                 %Variables needed to calculate the derivative of 
%                 %Mr_1 with respect to h_q
%                 diff_h_c_inrdrchu(qq) ...
%                     = diff_h_c_inrdrchu(qq) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *dr_u_check(pp) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *drr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *drz_u_check(pp)...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               - alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *drlambda_eig_u_check(pp)...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
%                 diff_h_c_inzdrchw(qq) ...
%                     = diff_h_c_inzdrchw(qq) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *dr_w_check(pp) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *drr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               + alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *drlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
%                 %Variables needed to calculate the derivative of 
%                 %Mz_1 with respect to h_q
%                 diff_h_c_inzdzchw(qq) ...
%                     = diff_h_c_inzdzchw(qq) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *dz_w_check(pp) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dzz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               + alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *dzlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
%                 diff_h_c_inrdzchu(qq) ...
%                     = diff_h_c_inrdzchu(qq) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *dz_u_check(pp) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dzz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               - alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dzlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
%                 %Variables needed to calculate the derivatives of
%                 %S1_i with respect to the spine lengths
%                 diff_h_c_itrchu(qq) ...
%                     = diff_h_c_itrchu(qq) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                      %add derivative with respect to spine 1 here
%                      %for curved solid
%                 diff_h_c_itzchw(qq) ...
%                     = diff_h_c_itzchw(qq) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                      %add derivative with respect to spine 1 here
%                      %for curved solid
                %Variables needed to calculate the derivatives of
                %E1_i with respect to the spine lengths
                diff_h_c_i(qq) ...
                    = diff_h_c_i(qq) ...
                      + W_lG(pp) ...
                        *phi1_lG(ii,pp) ...
                        *diff_h_det_Jle(pp,qq);
%                 diff_h_c_inrchu(qq) ...
%                     = diff_h_c_inrchu(qq) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               - alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
%                 diff_h_c_inzchw(qq) ...
%                     = diff_h_c_inzchw(qq) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               + alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
            end
        end
%         %Contributions to derivatives of Mr with respect to h that come 
%         %from derivative with respect to theta_m
%         diff_h_Mr_near(l_1(ee,ii),S_1(1,:)) ...
%             = diff_h_Mr_near(l_1(ee,ii),S_1(1,:)) ...
%               +2 ...
%                *delta_t ...
%                *A ...
%                *(- diff_theta_m_c_inrdrchu ... 
%                    *diff_h_theta_m ...
%                  - diff_theta_m_c_inzdrchw ...
%                    *diff_h_theta_m ...
%                 ) ...
%                /3;
%         %Contributions to derivatives of Mr with respect to A
%         diff_A_Mr_near(l_1(ee,ii)) ...
%             = diff_A_Mr_near(l_1(ee,ii)) ...
%               + 2 ...
%                 *delta_t ...
%                 *(- c_inrdrchu ...
%                   - c_inzdrchw ...
%                  ) ...
%                 /3;
%         %Contributions to derivatives of Mz with respect to theta_m
%         diff_h_Mz_near(l_1(ee,ii),S_1(1,:)) ...
%             = diff_h_Mz_near(l_1(ee,ii),S_1(1,:)) ...
%               +2 ...
%                *delta_t ...
%                *A ...
%                *(- diff_theta_m_c_inzdzchw ... 
%                    *diff_h_theta_m ...
%                  - diff_theta_m_c_inrdzchu ...
%                    *diff_h_theta_m ...
%                 ) ...
%                /3; 
%         %Contributions to derivatives of Mz with respect to A
%         diff_A_Mz_near(l_1(ee,ii)) ...
%             = diff_A_Mz_near(l_1(ee,ii)) ...
%               + 2 ...
%                 *delta_t ...
%                 *(- c_inzdzchw ... 
%                   - c_inrdzchu ...
%                  ) ...
%                 /3;
%         %Contributions to derivatives of S1 with respect to h that come
%         %from derivatives with respect to theta_m
%         diff_h_S1_near(l1_1(ee,ii),S_1(1,:)) ...
%             = diff_h_S1_near(l1_1(ee,ii),S_1(1,:)) ...
%               - A ...
%                 *(  diff_theta_m_c_itrchu ...
%                     *diff_h_theta_m ...
%                   + diff_theta_m_c_itzchw ...
%                     *diff_h_theta_m ...
%                  );
%         %Contributions to derivatives of S1 with respect to A
%         diff_A_S1_near(l1_1(ee,ii)) ...
%             = diff_A_S1_near(l1_1(ee,ii)) ...
%               - c_itrchu ...
%               - c_itzchw;
%         %Contributions to derivatives of E1 with respect to h that come
%         %from derivatives with respect to theta_m
%         diff_h_E1_near(l1_1(ee,ii),S_1(1,:)) ...
%             = diff_h_E1_near(l1_1(ee,ii),S_1(1,:)) ...
%               + A ...
%                 *(  diff_theta_m_c_inrchu ...
%                     *diff_h_theta_m ...
%                   + diff_theta_m_c_inzchw ...
%                     *diff_h_theta_m ...
%                  );
%         %Contributions to derivatives of E1 with respect to A
%         diff_A_E1_near(l1_1(ee,ii)) ...
%             = diff_A_E1_near(l1_1(ee,ii)) ...
%               + c_inrchu ...
%               + c_inzchw;
        for qq = 1:n_s_e
%             diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
%                 = diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
%                   + 2 ...
%                     *delta_t ...
%                     *A ...
%                     *(- diff_h_c_inrdrchu(qq) ... 
%                       - diff_h_c_inzdrchw(qq) ...
%                      ) ...
%                     /3;
%             diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
%                 = diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
%                   + 2 ...
%                     *delta_t ...
%                     *A ...
%                     *(- diff_h_c_inzdzchw(qq) ... 
%                       - diff_h_c_inrdzchu(qq) ...
%                      ) ...
%                     /3;
%             diff_h_S1_near(l1_1(ee,ii),spines_e(qq)) ...
%                 = diff_h_S1_near(l1_1(ee,ii),spines_e(qq)) ...
%                   - A ...
%                     *(  diff_h_c_itrchu(qq) ...
%                       + diff_h_c_itzchw(qq) ...
%                      );
%             diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
%                 = diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
%                   + Fg ...
%                     *Dg ...
%                     *diff_h_c_i(qq);
%                 ...
%                   + A ...
%                     *(  diff_h_c_inrchu(qq) ...
%                       + diff_h_c_inzchw(qq) ...
%                      );
            diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                = diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                  - 2 ...
                    *delta_t ...
                    *Dg ...
                    *diff_h_c_i(qq) ...
                    /3;
        end
        for jj = 1:3 %looping over line element nodes to find
            %Zeroing variables needed to calculate the derivatives
            %of Mr_i with respect to sigma_1
            cs_jitr = 0;
            %Zeroing variables needed to calculate the derivatives
            %of Mz_i with respect to sigma_1
            cs_jitz = 0;
            %Zeroing variables needed to calculate the derivative
            %of S1_i with respect to wbar_q
            c_ijtr = 0;
            %Zeroing variables needed to calculate the derivative
            %of S1_i with respect to ubar_q
            c_ijtz = 0;
            %Zeroing variables needed to calculate the derivative
            %of S1_i with respect to sigma1_q
            cs_ji = 0;  
            %Zeroing variables needed to calculate the derivative 
            %of K_i with respect to us1
            c_ijnr = 0;
            %Zeroing variables needed to calculate the derivative 
            %of K_i with respect to ws1
            c_ijnz = 0;
            %Zeroing variables that we needed to add to calculate
            %the derivatives of E1_i
            c_ij = 0;
            %
            %Zeroing variables needed to calculate the derivative 
            %of Mr_i with respect to h_q
            diff_h_cs_jitr = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the derivative 
            %of Mz_i with respect to h_q
            diff_h_cs_jitz = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the derivative
            %of S1_i with respect to h_q
            diff_h_c_ijtr = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the derivative
            %of S1_i with respect to h_q
            diff_h_c_ijtz = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the derivative 
            %of K_i with respect to h_q
            diff_h_c_ijnr  = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the derivative 
            %of K_i with respect to h_q
            diff_h_c_ijnz  = zeros(1,n_s_e);
            %Zeroing variables that we needed to add to calculate
            %the derivatives of E1_i with respect to h_q
            diff_h_c_ij = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                %Variables needed to calculate the derivatives
                %of Mr_i with respect to sigma_1
                cs_jitr = cs_jitr ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                %Variables needed to calculate the derivatives
                %of Mz_i with respect to sigma_1
                cs_jitz = cs_jitz ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                %Variables needed to calculate the 
                %derivative of S_i with respect to ubar
                c_ijtr = c_ijtr ...
                         + W_lG(pp) ...
                           *phi1_lG(ii,pp) ...
                           *phi1_lG(jj,pp) ...
                           *r_prime_lGaussian(pp);
                %Variables needed to calculate the 
                %derivative of S_i with respect to wbar
                c_ijtz = c_ijtz ...
                         + W_lG(pp) ...
                           *phi1_lG(ii,pp) ...
                           *phi1_lG(jj,pp) ...
                           *z_prime_lGaussian(pp);
                %Variables needed to calculate the 
                %derivative of S_i with respect to sigma1
                cs_ji = cs_ji ...
                        + W_lG(pp) ...
                          *phi1_lG(jj,pp) ...
                          *phi1_xi_lG(ii,pp);
                %Variables needed to calculate the 
                %derivative of K_i with respect to us1
                c_ijnr  = c_ijnr ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *z_prime_lGaussian(pp);
                %Variables needed to calculate the 
                %derivative of K_i with respect to ws1
                c_ijnz  = c_ijnz ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *r_prime_lGaussian(pp);
                %Variables needed to calculate the 
                %derivative of E1_i with respect to sigma1
                c_ij = c_ij ...
                       + W_lG(pp) ...
                         *phi1_lG(ii,pp) ...
                         *phi1_lG(jj,pp) ...
                         *det_Jle(pp);
                for qq = 1:n_s_e
                    %Variables needed to calculate the derivatives
                    %of Mr_i with respect to h
                    diff_h_cs_jitr(qq) ...
                        = diff_h_cs_jitr(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    %Variables needed to calculate the derivatives
                    %of Mz_i with respect to h
                    diff_h_cs_jitz(qq) ...
                        = diff_h_cs_jitz(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    %Variables needed to calculate the 
                    %derivative of S1_i with respect to h
                    diff_h_c_ijtr(qq) ...
                        = diff_h_c_ijtr(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq);
                    diff_h_c_ijtz(qq) ...
                        = diff_h_c_ijtz(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq);
                    %Variables needed to calculate the 
                    %derivative of K_i with respect to h
                    diff_h_c_ijnr(qq) ...
                        = diff_h_c_ijnr(qq) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq);
                    diff_h_c_ijnz(qq) ...
                        = diff_h_c_ijnz(qq) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq);
                    %Variables needed to calculate the derivatives
                    %of E1_i with respect to h
                    diff_h_c_ij(qq) ...
                        = diff_h_c_ij(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq);
                end
            end
            %Jacobian contributions
            %Mr
            diff_sigma1_Mr_near(l_1(ee,ii),l1_1(ee,jj)) ...
                = diff_sigma1_Mr_near(l_1(ee,ii),l1_1(ee,jj)) ... % 
                  + 2 ...
                    *delta_t ...
                    *cs_jitr ...
                    /(3*Ca);
            %Mz
            diff_sigma1_Mz_near(l_1(ee,ii),l1_1(ee,jj)) ...
                = diff_sigma1_Mz_near(l_1(ee,ii),l1_1(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *cs_jitz ...
                    /(3*Ca);
            %S1
            diff_u_bar_S1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                = diff_u_bar_S1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                  - c_ijtr;
            diff_w_bar_S1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                = diff_w_bar_S1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                  - c_ijtz;
            diff_us1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_us1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + c_ijtr;
            diff_ws1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_ws1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + c_ijtz;
            diff_sigma1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_sigma1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + (1+4*Eg*Bg) ...
                    *cs_ji ...
                    /(4*Bg);
            %K1
            diff_us1_K_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_us1_K_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *c_ijnr ...
                    /3;
            diff_ws1_K_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_ws1_K_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *c_ijnz ...
                    /3;
            %E1
            diff_u_bar_E1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                = diff_u_bar_E1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                  + c_ijnr;
            diff_w_bar_E1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                = diff_w_bar_E1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                  + c_ijnz;
            diff_us1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_us1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  - c_ijnr;
            diff_ws1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_ws1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  - c_ijnz;
            diff_rhos1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_rhos1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + c_ij ...
                    *2 ...
                    *Lg ...
                    /3;
%                   - Fg ...
%                     *c_ij;
            %D1
            diff_rhos1_D1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_rhos1_D1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + c_ij ...
                    *(  2 ...
                        *delta_t ...
                        /3 ...
                      + 2 ...
                        *Tg ...
                        /3 ...
                     );
            for qq = 1:n_s_e
                diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
                    = diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(- pg(l1_1(ee,jj)) ...
                            *diff_h_c_ijnr(qq) ... 
                          + sigma1(l1_1(ee,jj)) ...
                            *diff_h_cs_jitr(qq) ...
                            /Ca ...
                         ) ...  
                        /3;
                diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
                    = diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(- pg(l1_1(ee,jj)) ...
                            *diff_h_c_ijnz(qq) ... 
                          + sigma1(l1_1(ee,jj)) ...
                            *diff_h_cs_jitz(qq) ...
                            /Ca ...
                         ) ...
                        /3;
                diff_h_S1_near(l1_1(ee,ii),spines_e(qq)) ...
                    = diff_h_S1_near(l1_1(ee,ii),spines_e(qq)) ...
                      + diff_h_c_ijtr(qq) ...
                        *(  us1( l1_1(ee,jj)) ...
                          - u_bar(l_1(ee,jj)) ...
                         ) ...
                      + diff_h_c_ijtz(qq) ...
                        *(  ws1( l1_1(ee,jj)) ...
                          - w_bar(l_1(ee,jj)) ...
                         );
                diff_h_K_near(l1_1(ee,ii),spines_e(qq)) ...
                    = diff_h_K_near(l1_1(ee,ii),spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(  us1(l1_1(ee,jj)) ...
                            *diff_h_c_ijnr(qq) ...
                          + ws1(l1_1(ee,jj)) ...
                            *diff_h_c_ijnz(qq) ...
                         ) ...
                        /3 ...
                      - 2 ...
                        *c_ijnr ...
                        *diff_h_r_le(jj,qq) ...
                        /3 ...
                      - diff_h_c_ijnr(qq) ...
                        *(  2*Nodes_rz(l_1(ee,jj),1)/3 ...
                          - 2*Nodes_rz_minus1(l_1(ee,jj),1)/3 ...
                         ) ...
                      - 2 ...
                        *c_ijnz ...
                        *diff_h_z_le(jj,qq) ...
                        /3 ...
                      - diff_h_c_ijnz(qq) ...
                        *(  2*Nodes_rz(l_1(ee,jj),2)/3 ...
                          - 2*Nodes_rz_minus1(l_1(ee,jj),2)/3 ...
                         );
                diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
                    = diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
                      + diff_h_c_ijnr(qq) ...
                        *(  u_bar(l_1(ee,jj)) ...
                          - us1( l1_1(ee,jj)) ...
                         ) ...
                      + diff_h_c_ijnz(qq) ...
                        *(  w_bar(l_1(ee,jj)) ...
                          - ws1( l1_1(ee,jj)) ...
                         ) ...
                      + diff_h_c_ij(qq) ...
                        *Lg ...
                        *(  2*rhos1(l1_1(ee,jj))/3 ...
                          - 2*rhos1_minus1(l1_1(ee,jj))/3 ...
                         );
%                       - Fg ...
%                         *rhos1(l1_1(ee,jj)) ...
%                         *diff_h_c_ij(qq);
                diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                    = diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                      + diff_h_c_ij(qq) ...
                        *(  2 ...
                            *delta_t ...
                            * rhos1(l1_1(ee,jj)) ...
                            /3 ...
                          + Tg ...
                            *(  2*rhos1(l1_1(ee,jj))/3 ...
                              - 2*rhos1_minus1(l1_1(ee,jj))/3 ...
                             ) ...
                         );
            end
            for kk = 1:3
                cs_jkitr = 0;
                cs_jkitz = 0;
                cs_ijktr = 0;
                cs_ijktz = 0;
                %
                diff_h_cs_jkitr = zeros(1,n_s_e);
                diff_h_cs_jkitz = zeros(1,n_s_e);
                diff_h_cs_ijktr = zeros(1,n_s_e);
                diff_h_cs_ijktz = zeros(1,n_s_e);
                for pp = 1:n_lGaussian_Q
                    cs_jkitr ...
                        = cs_jkitr ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_lG(kk,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    cs_jkitz ...
                        = cs_jkitz ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_lG(kk,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    cs_ijktr ...
                        = cs_ijktr ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(kk,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    cs_ijktz ...
                        = cs_ijktz ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(kk,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    for qq = 1:n_s_e
                        diff_h_cs_jkitr(qq) ...
                            = diff_h_cs_jkitr(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_cs_jkitz(qq) ...
                            = diff_h_cs_jkitz(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_cs_ijktr(qq) ...
                            = diff_h_cs_ijktr(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_cs_ijktz(qq) ...
                            = diff_h_cs_ijktz(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                    end
                end
                diff_rhos1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                    = diff_rhos1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                      + Lg ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us1(l1_1(ee,kk)) ...
                                *cs_jkitr ...
                              + ws1(l1_1(ee,kk)) ...
                                *cs_jkitz ...
                             ) ...
                            /3 ...
                          + cs_jkitr ...
                            *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                             ) ...
                          + cs_jkitz ...
                            *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                             ) ...
                          + cs_ijktr ...
                            *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                             ) ...
                          + cs_ijktz ...
                            *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_rhos1_D1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                    = diff_rhos1_D1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                      + Tg ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us1(l1_1(ee,kk)) ...
                                *cs_jkitr ...
                              + ws1(l1_1(ee,kk)) ...
                                *cs_jkitz ...
                             ) ...
                            /3 ...
                          + cs_jkitr ...
                            *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                             ) ...
                          + cs_jkitz ...
                            *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                             ) ...
                          + cs_ijktr ...
                            *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                             ) ...
                          + cs_ijktz ...
                            *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_us1_E1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                    = diff_us1_E1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Lg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitr ...
                        /3;
                diff_us1_D1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                    = diff_us1_D1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Tg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitr ...
                        /3;
                diff_ws1_E1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                    = diff_ws1_E1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Lg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitz ...
                        /3;
                diff_ws1_D1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                    = diff_ws1_D1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Tg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitz ...
                        /3;
                for qq = 1:n_s_e
                    diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
                        = diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
                          + Lg ...
                            *rhos1(l1_1(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitr(qq) ...
                                  + ws1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *cs_jkitr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                             );
                    diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                        = diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                          + Tg ...
                            *rhos1(l1_1(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitr(qq) ...
                                  + ws1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *cs_jkitr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                             );
                end
            end
        end
        for jj = 1:6
            cr_ijnr = 0;
            cr_ijnz = 0;
            cz_ijnr = 0;
            cz_ijnz = 0;
            diff_h_cr_ijnr = zeros(1,n_s_e);
            diff_h_cr_ijnz = zeros(1,n_s_e);
            diff_h_cz_ijnr = zeros(1,n_s_e);
            diff_h_cz_ijnz = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                cr_ijnr = cr_ijnr ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                cr_ijnz = cr_ijnz ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                cz_ijnr = cz_ijnr ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                cz_ijnz = cz_ijnz ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                for qq = 1:n_s_e
                    diff_h_cr_ijnr(qq) ...
                        = diff_h_cr_ijnr(qq) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_cr_ijnz(qq) ...
                        = diff_h_cr_ijnz(qq) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_cz_ijnr(qq) ...
                        = diff_h_cz_ijnr(qq) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_cz_ijnz(qq) ...
                        = diff_h_cz_ijnz(qq) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                end
            end
            diff_u_bar_Mr_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                = diff_u_bar_Mr_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *cr_ijnr ...
                    /3;
            diff_w_bar_Mr_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                = diff_w_bar_Mr_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *cr_ijnz ...
                    /3;
            diff_u_bar_Mz_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                = diff_u_bar_Mz_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *cz_ijnr ...
                    /3;
            diff_w_bar_Mz_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                = diff_w_bar_Mz_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *cz_ijnz ...
                    /3;
            for qq = 1:n_s_e
                diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
                    = diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_bar(l(LE_to_TE_1(ee),jj)) ...
                            *diff_h_cr_ijnr(qq) ...
                          + w_bar(l(LE_to_TE_1(ee),jj)) ...
                            *diff_h_cr_ijnz(qq) ...
                         ) ...
                        /3;
                diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
                    = diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_bar(l(LE_to_TE_1(ee),jj)) ...
                            *diff_h_cz_ijnr(qq) ...
                          + w_bar(l(LE_to_TE_1(ee),jj)) ...
                            *diff_h_cz_ijnz(qq) ...
                         ) ...
                        /3; 
            end
        end
    end
end
%Remaining line-elements in near field
for ee = 2:n1_el_near
    %Finding nodal positions for this line element
    r_le = Nodes_rz(l_1(ee,:),1);
    z_le = Nodes_rz(l_1(ee,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    r_e = Nodes_rz(l(LE_to_TE_1(ee),:),1);
    z_e = Nodes_rz(l(LE_to_TE_1(ee),:),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %Finding total number of spines whose size affects this line 
    %element
    n_s_e = 1+length(S_1(ee,:));
    %Finding the numbers of the spines whose lengths affect the 
    %shape of the element
    spines_e = [1,S_1(ee,:)];
    %Finding derivatives of the nodal positions with respect to the
    %spine legnths
    diff_h_r_le = zeros(3,n_s_e);
    diff_h_z_le = zeros(3,n_s_e);
    diff_h_r_le(:,1) = diff_h0_rz(l_1(ee,:),1);
    diff_h_z_le(:,1) = diff_h0_rz(l_1(ee,:),2);
    for qq = 1:n_s_e-1
        for rr = el1_s_loc_nodes(ee,qq)
            diff_h_r_le(rr,qq+1) = diff_h_rz(l_1(ee,rr),1);
            diff_h_z_le(rr,qq+1) = diff_h_rz(l_1(ee,rr),2);
        end
    end
    diff_h_r_le_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_le_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            diff_h_r_le_lGaussian(pp,qq) ...
                = (diff_h_r_le(:,qq)')*phi1_lG(:,pp);
            diff_h_z_le_lGaussian(pp,qq) ...
                = (diff_h_z_le(:,qq)')*phi1_lG(:,pp);
        end
    end
    %Finding derivatives of the nodal position of the associated triangular
    %element
    diff_h_r_e = zeros(6,n_s_e);
    diff_h_z_e = zeros(6,n_s_e);
    diff_h_r_e(:,1) = diff_h0_rz(l(LE_to_TE_1(ee),:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(LE_to_TE_1(ee),:),2);
    for qq = 2:n_s_e
        for rr = el_s_loc_nodes{LE_to_TE_1(ee),qq-1}
            diff_h_r_e(rr,qq) = diff_h_rz(l(LE_to_TE_1(ee),rr),1);
            diff_h_z_e(rr,qq) = diff_h_rz(l(LE_to_TE_1(ee),rr),2);
        end
    end
    %Finding the derivatives of the determinant of the associated
    %triangular element
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *Tmat1{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *Tmat1{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    %Zeroing the derivatives of r' = \partial_\eta r and 
    %z' = \partial_\eta z with respect to the spine 
    %lengths at each Gaussian quadrature point
    diff_h_r_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    %Zeroing the derivative of the determinant of the Jacobian of 
    %the isoparametric map with respect to each spine length at 
    %each Gaussian quadrature point
    diff_h_det_Jle = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        %Finding r' = \partial_\eta and z' = \partial_\eta z at 
        %each Gaussian quadrature point
        r_prime_lGaussian(pp) = (phi1_xi_lG(:,pp)')*(r_le-min_r_le);
        z_prime_lGaussian(pp) = (phi1_xi_lG(:,pp)')*(z_le-min_z_le);
        normaliser = max(abs(r_prime_lGaussian(pp)), ...
                         abs(z_prime_lGaussian(pp)));
        r_prime_lGaussian_aux = r_prime_lGaussian(pp)/normaliser;
        z_prime_lGaussian_aux = z_prime_lGaussian(pp)/normaliser;
        %Finding the determinant of the Jacobian of the 
        %isoparametric map at each Gaussian quadrature point
        det_Jle(pp) = sqrt(  r_prime_lGaussian_aux^2 ...
                           + z_prime_lGaussian_aux^2 ...
                          ) ...
                      *normaliser;
        det_Je(pp) = (r_e'-min_r_e)*Tmat1{pp}*(z_e-min_z_e);
        %Finding the coordinates with respect to the contact line
        %and the tangent plane to the solid to introduce in the
        %expression of the eigensolution
%         r_pp = (r_le'-Nodes_rz(1,1))*phi1_lG(:,pp);
%         z_pp = (z_le'-Nodes_rz(1,2))*phi1_lG(:,pp);
%         %Data for eigensolution
%         theta_pol = atan2(z_pp,r_pp);
%         phi_pp = pi - theta_m - theta_pol;
%         theta_pp = lambda_eig*phi_pp;
% %                 phi_pp = mod(atan(-z_pp/r_pp),pi);
%         c_theta_pp = cos(theta_pp);
%         s_theta_pp = sin(theta_pp);
%         divider = max(abs(r_pp),abs(z_pp));
%         r_pp_div = r_pp/divider;
%         z_pp_div = z_pp/divider;
%         rho_l = sqrt(r_pp_div^2+z_pp_div^2);
%         rho_l = rho_l*divider;
%         rho_l_minus2_pp = rho_l^(lambda_eig-2);
%         rho_l_minus4_pp = rho_l^(lambda_eig-4);
%         rho_l_minus6_pp = rho_l^(lambda_eig-6);
%         ln_rho2_pp = 2*log(rho_l);
%         % Find the values of u_check at the Gaussian sampling 
%         %points
%         u_check(pp) = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of w_check at the Gaussian sampling 
%         %points
%         w_check(pp) = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of dr_u_check at the Gaussian sampling 
%         %points
%         dr_u_check(pp) = dr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_u_check at the Gaussian sampling 
%         %points
%         dz_u_check(pp) = dz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_u_check(pp) ...
%             = dlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of dr_w_check at the Gaussian sampling 
%         %points
%         dr_w_check(pp) = dr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_w_check at the Gaussian sampling 
%         %points
%         dz_w_check(pp) = dz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_w_check(pp) ...
%             = dlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of drr_u_check at the Gaussian sampling 
%         %points
%         drr_u_check(pp) = drr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_u_check at the Gaussian sampling 
%         %points
%         drz_u_check(pp) = drz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_u_check at the Gaussian sampling 
%         %points
%         dzz_u_check(pp) = dzz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_u_check at the Gaussian 
%         %sampling points
%         drlambda_eig_u_check(pp) ...
%             = drlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dzlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_u_check(pp) ...
%             = dzlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp); 
%         % Find the values of drr_w_check at the Gaussian sampling 
%         %points
%         drr_w_check(pp) = drr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_w_check at the Gaussian sampling 
%         %points
%         drz_w_check(pp) = drz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_w_check at the Gaussian sampling 
%         %points
%         dzz_w_check(pp) = dzz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_w_check at the Gaussian 
%         %sampling points
%         drlambda_eig_w_check(pp) ...
%             = drlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);  
%         %Find the values of dzlambda_eig_w_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_w_check(pp) ...
%             = dzlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_u_check(pp) ...
%             = dphi_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_w_check(pp) ...
%             = dphi_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_u_check(pp) ...
%             = drphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_u_check(pp) ...
%             = dzphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_w_check(pp) ...
%             = drphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_w_check(pp) ...
%             = dzphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
        for qq = 1:n_s_e
            %Finding the derivatives of r' = \partial_\eta r and 
            %z' = \partial_\eta z with respect to the spine 
            %lengths at each Gaussian quadrature point
            diff_h_r_prime_lGaussian(pp,qq) ...
                = (phi1_xi_lG(:,pp)')*diff_h_r_le(:,qq);
            diff_h_z_prime_lGaussian(pp,qq) ...
                = (phi1_xi_lG(:,pp)')*diff_h_z_le(:,qq);
            %Finding the derivatives of the determinant of the 
            %Jacobian of the isoparametric map with respect to 
            %each spine length at each Gaussian quadrature point
            diff_h_det_Jle(pp,qq) ...
                = (  r_prime_lGaussian(pp) ...
                     *diff_h_r_prime_lGaussian(pp,qq) ...
                   + z_prime_lGaussian(pp) ...
                     *diff_h_z_prime_lGaussian(pp,qq)) ...
                  /det_Jle(pp);
        end
    end
    for ii = 1:3 %looping over line-element nodes to find 
        %contribution to each equation
        %pair-wise inner product of basis functions
        %
%         %Zeroing variables needed to calculate the derivative of 
%         %Mr_i with respect to theta_m
%         diff_theta_m_c_inrdrchu = 0;
%         diff_theta_m_c_inzdrchw = 0;
%         %Zeroing variables needed to calculate the derivative of 
%         %Mr_i with respect to A
%         c_inrdrchu = 0;
%         c_inzdrchw = 0;
%         %Zeroing variables needed to calculate the derivative of 
%         %Mz_i with respect to theta_m
%         diff_theta_m_c_inzdzchw = 0;
%         diff_theta_m_c_inrdzchu = 0;
%         %Zeroing variables needed to calculate the derivative of 
%         %Mz_i with respect to A
%         c_inzdzchw = 0;
%         c_inrdzchu = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %S1_i with respect to theta_m
%         diff_theta_m_c_itrchu = 0;
%         diff_theta_m_c_itzchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %S1_i with respect to A
%         c_itrchu = 0;
%         c_itzchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %E1_i with respect to theta_m
%         diff_theta_m_c_inrchu = 0;
%         diff_theta_m_c_inzchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %E1_i with respect to A
%         c_inrchu = 0;
%         c_inzchw = 0;
%         %Zeroing variables needed to calculate the derivative of 
%         %Mr_1 with respect to h_q
%         diff_h_c_inrdrchu = zeros(1,n_s_e);
%         diff_h_c_inzdrchw = zeros(1,n_s_e);
%         %Zeroing variables needed to calculate the derivative of 
%         %Mz_1 with respect to h_q
%         diff_h_c_inzdzchw = zeros(1,n_s_e);
%         diff_h_c_inrdzchu = zeros(1,n_s_e);
%         %Zeroing variables needed to calculate the derivative of
%         %S1_i with respect to each spine length
%         diff_h_c_itrchu = zeros(1,n_s_e);
%         diff_h_c_itzchw = zeros(1,n_s_e);
        %Zeroing variables needed to calculate the derivative of
        %E1_i with respect to each spine length
        diff_h_c_i = zeros(1,n_s_e);
%         diff_h_c_inrchu = zeros(1,n_s_e);
%         diff_h_c_inzchw = zeros(1,n_s_e);
        for pp = 1:n_lGaussian_Q
%             %Variables needed to calculate the derivative of 
%             %Mr_i with respect to theta_m
%             diff_theta_m_c_inrdrchu ...
%                 = diff_theta_m_c_inrdrchu ...
%                   - alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  drlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_u_check(pp) ...
%                      );
%             diff_theta_m_c_inzdrchw ...
%                 = diff_theta_m_c_inzdrchw ...
%                   + alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  drlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_w_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of 
%             %Mz_i with respect to theta_m
%             diff_theta_m_c_inzdzchw ...
%                 = diff_theta_m_c_inzdzchw ...
%                   + alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dzlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_w_check(pp) ...
%                      );
%             diff_theta_m_c_inrdzchu ...
%                 = diff_theta_m_c_inrdzchu ...
%                   - alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dzlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_u_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of 
%             %Mr_i with respect to A
%             c_inrdrchu = c_inrdrchu ...
%                          - alpha_1 ...
%                            *W_lG(pp) ...
%                            *phi1_lG(ii,pp) ...
%                            *z_prime_lGaussian(pp) ...
%                            *dr_u_check(pp);
%             c_inzdrchw = c_inzdrchw ...
%                          + alpha_1 ...
%                            *W_lG(pp) ...
%                            *phi1_lG(ii,pp) ...
%                            *r_prime_lGaussian(pp) ...
%                            *dr_w_check(pp);
%             %Variables needed to calculate the derivative of 
%             %Mz_i with respect to A
%             c_inzdzchw = c_inzdzchw ...
%                          + alpha_1 ...
%                            *W_lG(pp) ...
%                            *phi1_lG(ii,pp) ...
%                            *r_prime_lGaussian(pp) ...
%                            *dz_w_check(pp);
%             c_inrdzchu = c_inrdzchu ...
%                          - alpha_1 ...
%                            *W_lG(pp) ...
%                            *phi1_lG(ii,pp) ...
%                            *z_prime_lGaussian(pp) ...
%                            *dz_u_check(pp);
%             %Variables needed to calculate the derivative of
%             %S1_i with respect to theta_m
%             diff_theta_m_c_itrchu ...
%                 = diff_theta_m_c_itrchu ...
%                   + W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      );
%             diff_theta_m_c_itzchw ...
%                 = diff_theta_m_c_itzchw ...
%                   + W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of
%             %S1_i with respect to A
%             c_itrchu ...
%                 = c_itrchu ...
%                   + W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *u_check(pp);
%             c_itzchw ...
%                 = c_itzchw ...
%                   + W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *w_check(pp);
%             %Variables needed to calculate the derivative of E1_i
%             %with respect to theta_m
%             diff_theta_m_c_inrchu ...
%                 = diff_theta_m_c_inrchu ...
%                   - alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      );
%             diff_theta_m_c_inzchw ...
%                 = diff_theta_m_c_inzchw ...
%                   + alpha_1 ...
%                     *W_lG(pp) ...
%                     *phi1_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of
%             %E1_i with respect to A
%             c_inrchu = c_inrchu ...
%                        - alpha_1 ...
%                          *W_lG(pp) ...
%                          *phi1_lG(ii,pp) ...
%                          *z_prime_lGaussian(pp) ...
%                          *u_check(pp);                                
%             c_inzchw = c_inzchw ...
%                        + alpha_1 ...
%                          *W_lG(pp) ...
%                          *phi1_lG(ii,pp) ...
%                          *r_prime_lGaussian(pp) ...
%                          *w_check(pp); 
            for qq = 1:n_s_e
%                 %Variables needed to calculate the derivative of 
%                 %Mr_1 with respect to h_q
%                 diff_h_c_inrdrchu(qq) ...
%                     = diff_h_c_inrdrchu(qq) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *dr_u_check(pp) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *drr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *drz_u_check(pp)...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               - alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *drlambda_eig_u_check(pp)...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
%                 diff_h_c_inzdrchw(qq) ...
%                     = diff_h_c_inzdrchw(qq) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *dr_w_check(pp) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *drr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               + alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *drlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
%                 %Variables needed to calculate the derivative of 
%                 %Mz_1 with respect to h_q
%                 diff_h_c_inzdzchw(qq) ...
%                     = diff_h_c_inzdzchw(qq) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *dz_w_check(pp) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dzz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               + alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *dzlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
%                 diff_h_c_inrdzchu(qq) ...
%                     = diff_h_c_inrdzchu(qq) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *dz_u_check(pp) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dzz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               - alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dzlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
%                 %Variables needed to calculate the derivatives of
%                 %S1_i with respect to the spine lengths
%                 diff_h_c_itrchu(qq) ...
%                     = diff_h_c_itrchu(qq) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                      %add derivative with respect to spine 1 here
%                      %for curved solid
%                 diff_h_c_itzchw(qq) ...
%                     = diff_h_c_itzchw(qq) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                      %add derivative with respect to spine 1 here
%                      %for curved solid
                %Variables needed to calculate the derivatives of
                %E1_i with respect to the spine lengths
                diff_h_c_i(qq) ...
                    = diff_h_c_i(qq) ...
                      + W_lG(pp) ...
                        *phi1_lG(ii,pp) ...
                        *diff_h_det_Jle(pp,qq);
%                 diff_h_c_inrchu(qq) ...
%                     = diff_h_c_inrchu(qq) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               - alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
%                 diff_h_c_inzchw(qq) ...
%                     = diff_h_c_inzchw(qq) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + alpha_1 ...
%                         *W_lG(pp) ...
%                         *phi1_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               + alpha_1 ...
% %                                 *W_lG(pp) ...
% %                                 *phi1_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
            end
        end
%         %Contributions to derivatives of Mr with respect to h that come
%         %from derivatives with respect to theta_m
%         diff_h_Mr_near(l_1(ee,ii),S_1(1,:)) ...
%             = diff_h_Mr_near(l_1(ee,ii),S_1(1,:)) ...
%               +2 ...
%                *delta_t ...
%                *A ...
%                *(- diff_theta_m_c_inrdrchu ... 
%                    *diff_h_theta_m ...
%                  - diff_theta_m_c_inzdrchw ...
%                    *diff_h_theta_m ...
%                 ) ...
%                /3;
%         %Contributions to derivatives of Mr with respect to A
%         diff_A_Mr_near(l_1(ee,ii)) ...
%             = diff_A_Mr_near(l_1(ee,ii)) ...
%               + 2 ...
%                 *delta_t ...
%                 *(- c_inrdrchu ...
%                   - c_inzdrchw ...
%                  ) ...
%                 /3;
%         %Contributions to derivatives of Mz with respect to h that come
%         %from derivatives with respect to theta_m
%         diff_h_Mz_near(l_1(ee,ii),S_1(1,:)) ...
%             = diff_h_Mz_near(l_1(ee,ii),S_1(1,:)) ...
%               +2 ...
%                *delta_t ...
%                *A ...
%                *(- diff_theta_m_c_inzdzchw ... 
%                    *diff_h_theta_m ...
%                  - diff_theta_m_c_inrdzchu ...
%                    *diff_h_theta_m ...
%                 ) ...
%                /3; 
%         %Contributions to derivatives of Mz with respect to A
%         diff_A_Mz_near(l_1(ee,ii)) ...
%             = diff_A_Mz_near(l_1(ee,ii)) ...
%               + 2 ...
%                 *delta_t ...
%                 *(- c_inzdzchw ... 
%                   - c_inrdzchu ...
%                  ) ...
%                 /3;
%         %S1
%         diff_h_S1_near(l1_1(ee,ii),S_1(1,:)) ...
%             = diff_h_S1_near(l1_1(ee,ii),S_1(1,:)) ...
%               - A ...
%                 *(  diff_theta_m_c_itrchu ...
%                     *diff_h_theta_m ...
%                   + diff_theta_m_c_itzchw ...
%                     *diff_h_theta_m ...
%                  );
%         diff_A_S1_near(l1_1(ee,ii)) ...
%             = diff_A_S1_near(l1_1(ee,ii)) ...
%               - c_itrchu ...
%               - c_itzchw;
%         %E1
%         diff_h_E1_near(l1_1(ee,ii),S_1(1,:)) ...
%             = diff_h_E1_near(l1_1(ee,ii),S_1(1,:)) ...
%               + A ...
%                 *(  diff_theta_m_c_inrchu ...
%                     *diff_h_theta_m ...
%                   + diff_theta_m_c_inzchw ...
%                     *diff_h_theta_m ...
%                  );        
%         diff_A_E1_near(l1_1(ee,ii)) ...
%             = diff_A_E1_near(l1_1(ee,ii)) ...
%               + c_inrchu ...
%               + c_inzchw;
        for qq = 1:n_s_e
%             diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
%                 = diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
%                   + 2 ...
%                     *delta_t ...
%                     *A ...
%                     *(- diff_h_c_inrdrchu(qq) ... 
%                       - diff_h_c_inzdrchw(qq) ...
%                      ) ...
%                     /3;
%             diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
%                 = diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
%                   + 2 ...
%                     *delta_t ...
%                     *A ...
%                     *(- diff_h_c_inzdzchw(qq) ... 
%                       - diff_h_c_inrdzchu(qq) ...
%                      ) ...
%                     /3;
%             diff_h_S1_near(l1_1(ee,ii),spines_e(qq)) ...
%                 = diff_h_S1_near(l1_1(ee,ii),spines_e(qq)) ...
%                   - A ...
%                     *(  diff_h_c_itrchu(qq) ...
%                       + diff_h_c_itzchw(qq) ...
%                      );
%             diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
%                 = diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
%                   + Fg ...
%                     *Dg ...
%                     *diff_h_c_i(qq);
%                 ...
%                   + A ...
%                     *(  diff_h_c_inrchu(qq) ...
%                       + diff_h_c_inzchw(qq) ...
%                      );
            diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                = diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                 - 2 ...
                   *delta_t ...
                   *Dg ...
                   *diff_h_c_i(qq) ...
                   /3;
        end
        for jj = 1:3 %looping over line element nodes to find
            %Zeroing variables needed to calculate the derivatives
            %of Mr_i with respect to sigma_1
            cs_jitr = 0;
            %Zeroing variables needed to calculate the derivatives
            %of Mz_i with respect to sigma_1
            cs_jitz = 0;
            %Zeroing variables needed to calculate the derivative
            %of S1_i with respect to wbar_q
            c_ijtr = 0;
            %Zeroing variables needed to calculate the derivative
            %of S1_i with respect to ubar_q
            c_ijtz = 0;
            %Zeroing variables needed to calculate the derivatives of K_i
            %with respect to u_s1
            c_ijnr = 0;
            %Zeroing variables needed to calculate the derivatives of K_i
            %with respect to w_s1
            c_ijnz = 0;
            %Zeroing variables needed to calculate the derivative
            %of S1_i with respect to sigma1_q
            cs_ji = 0;
            %Zeroing variables that we needed to add to calculate
            %the derivatives of E1_i
            c_ij = 0;
            %Zeroing variables needed to calculate the derivative 
            %of Mr_i with respect to h_q
            diff_h_cs_jitr = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the derivative 
            %of Mz_i with respect to h_q
            diff_h_cs_jitz = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the derivative
            %of S1_i with respect to h_q
            diff_h_c_ijtr = zeros(1,n_s_e);
            diff_h_c_ijtz = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the derivative 
            %of K_i with respect to h_q
            diff_h_c_ijnr  = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the derivative 
            %of K_i with respect to h_q
            diff_h_c_ijnz  = zeros(1,n_s_e);
            %Zeroing variables that we needed to add to calculate
            %the derivatives of E1_i with respect to h_q
            diff_h_c_ij = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                %Variables needed to calculate the derivatives
                %of Mr_i with respect to sigma_1
                cs_jitr = cs_jitr ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                %Variables needed to calculate the derivatives
                %of Mz_i with respect to sigma_1
                cs_jitz = cs_jitz ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                %Variables needed to calculate the 
                %derivative of S1_i with respect to ubar
                c_ijtr = c_ijtr ...
                         + W_lG(pp) ...
                           *phi1_lG(ii,pp) ...
                           *phi1_lG(jj,pp) ...
                           *r_prime_lGaussian(pp);
                %Variables needed to calculate the 
                %derivative of S1_i with respect to wbar
                c_ijtz = c_ijtz ...
                         + W_lG(pp) ...
                           *phi1_lG(ii,pp) ...
                           *phi1_lG(jj,pp) ...
                           *z_prime_lGaussian(pp);
                %Variables needed to calculate the 
                %derivative of S1_i with respect to sigma1
                cs_ji = cs_ji ...
                        + W_lG(pp) ...
                          *phi1_lG(jj,pp) ...
                          *phi1_xi_lG(ii,pp);
                %Variables needed to calculate the 
                %derivative of K_i with respect to us1
                c_ijnr  = c_ijnr ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *z_prime_lGaussian(pp);
                %Variables needed to calculate the 
                %derivative of K_i with respect to ws1
                c_ijnz  = c_ijnz ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *r_prime_lGaussian(pp);
                %Variables needed to calculate the 
                %derivative of E1_i with respect to sigma1
                c_ij = c_ij ...
                       + W_lG(pp) ...
                         *phi1_lG(ii,pp) ...
                         *phi1_lG(jj,pp) ...
                         *det_Jle(pp);
                for qq = 1:n_s_e
                    %Variables needed to calculate the derivatives
                    %of Mr_i with respect to h
                    diff_h_cs_jitr(qq) ...
                        = diff_h_cs_jitr(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    %Variables needed to calculate the derivatives
                    %of Mz_i with respect to h
                    diff_h_cs_jitz(qq) ...
                        = diff_h_cs_jitz(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    %Variables needed to calculate the 
                    %derivative of S1_i with respect to h
                    diff_h_c_ijtr(qq) ...
                        = diff_h_c_ijtr(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq);
                    diff_h_c_ijtz(qq) ...
                        = diff_h_c_ijtz(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq);
                    %Variables needed to calculate the 
                    %derivative of K_i with respect to h
                    diff_h_c_ijnr(qq) ...
                        = diff_h_c_ijnr(qq) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq);
                    diff_h_c_ijnz(qq) ...
                        = diff_h_c_ijnz(qq) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq);
                    %Variables needed to calculate the derivatives
                    %of E1_i with respect to h
                    diff_h_c_ij(qq) ...
                        = diff_h_c_ij(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq);
                end
            end
            %Jacobian contributions
            %Mr
            diff_sigma1_Mr_near(l_1(ee,ii),l1_1(ee,jj)) ...
                = diff_sigma1_Mr_near(l_1(ee,ii),l1_1(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *cs_jitr ...
                    /(3*Ca);
            %Mz
            diff_sigma1_Mz_near(l_1(ee,ii),l1_1(ee,jj)) ...
                = diff_sigma1_Mz_near(l_1(ee,ii),l1_1(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *cs_jitz ...
                    /(3*Ca);
            %S1
            diff_u_bar_S1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                = diff_u_bar_S1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                  - c_ijtr;
            diff_w_bar_S1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                = diff_w_bar_S1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                  - c_ijtz;
            diff_us1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_us1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + c_ijtr;
            diff_ws1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_ws1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + c_ijtz;
            diff_sigma1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_sigma1_S1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + (1+4*Eg*Bg) ...
                    *cs_ji ...
                    /(4*Bg);
            %K
            diff_us1_K_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_us1_K_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *c_ijnr ...
                    /3;
            diff_ws1_K_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_ws1_K_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *c_ijnz ...
                    /3;
            %E1
            diff_u_bar_E1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                = diff_u_bar_E1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                  + c_ijnr;
            diff_w_bar_E1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                = diff_w_bar_E1_near(l1_1(ee,ii),l_1(ee,jj)) ...
                  + c_ijnz;
            diff_us1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_us1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  - c_ijnr;
            diff_ws1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_ws1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  - c_ijnz;
            diff_rhos1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_rhos1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + c_ij ...
                    *2 ...
                    *Lg ...
                    /3;
%                   - Fg ...
%                     *c_ij;
            %D1
            diff_rhos1_D1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                = diff_rhos1_D1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                  + c_ij ...
                    *(  2 ...
                        *delta_t ...
                        /3 ...
                      + 2 ...
                        *Tg ...
                        /3 ...
                     );
            for qq = 1:n_s_e
                diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
                    = diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(- pg(l1_1(ee,jj)) ...
                            *diff_h_c_ijnr(qq) ... 
                          + sigma1(l1_1(ee,jj)) ...
                            *diff_h_cs_jitr(qq) ...
                            /Ca ...
                         ) ...  
                        /3;
                diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
                    = diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(- pg(l1_1(ee,jj)) ...
                            *diff_h_c_ijnz(qq) ... 
                          + sigma1(l1_1(ee,jj)) ...
                            *diff_h_cs_jitz(qq) ...
                            /Ca ...
                         ) ...
                        /3;
                diff_h_S1_near(l1_1(ee,ii),spines_e(qq)) ...
                    = diff_h_S1_near(l1_1(ee,ii),spines_e(qq)) ...
                      + diff_h_c_ijtr(qq) ...
                        *(  us1( l1_1(ee,jj)) ...
                          - u_bar(l_1(ee,jj)) ...
                         ) ...
                      + diff_h_c_ijtz(qq) ...
                        *(  ws1( l1_1(ee,jj)) ...
                          - w_bar(l_1(ee,jj)) ...
                         );
                diff_h_K_near(l1_1(ee,ii),spines_e(qq)) ...
                    = diff_h_K_near(l1_1(ee,ii),spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(  us1(l1_1(ee,jj)) ...
                            *diff_h_c_ijnr(qq) ...
                          + ws1(l1_1(ee,jj)) ...
                            *diff_h_c_ijnz(qq) ...
                         ) ...
                        /3 ...
                      - 2 ...
                        *c_ijnr ...
                        *diff_h_r_le(jj,qq) ...
                        /3 ...
                      - diff_h_c_ijnr(qq) ...
                        *(  2*Nodes_rz(l_1(ee,jj),1)/3 ...
                          - 2*Nodes_rz_minus1(l_1(ee,jj),1)/3 ...
                         ) ...
                      - 2 ...
                        *c_ijnz ...
                        *diff_h_z_le(jj,qq) ...
                        /3 ...
                      - diff_h_c_ijnz(qq) ...
                        *(  2*Nodes_rz(l_1(ee,jj),2)/3 ...
                          - 2*Nodes_rz_minus1(l_1(ee,jj),2)/3 ...
                         );
                diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
                    = diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
                      + diff_h_c_ijnr(qq) ...
                        *(  u_bar(l_1(ee,jj)) ...
                          - us1( l1_1(ee,jj)) ...
                         ) ...
                      + diff_h_c_ijnz(qq) ...
                        *(  w_bar(l_1(ee,jj)) ...
                          - ws1( l1_1(ee,jj)) ...
                         ) ...
                      + diff_h_c_ij(qq) ...
                        *Lg ...
                        *(  2*rhos1(l1_1(ee,jj))/3 ...
                          - 2*rhos1_minus1(l1_1(ee,jj))/3 ...
                         );
%                       - Fg ...
%                         *rhos1(l1_1(ee,jj)) ...
%                         *diff_h_c_ij(qq);
                diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                    = diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                      + diff_h_c_ij(qq) ...
                        *(  2 ...
                            *delta_t ...
                            * rhos1(l1_1(ee,jj)) ...
                            /3 ...
                          + Tg ...
                            *(  2*rhos1(l1_1(ee,jj))/3 ...
                              - 2*rhos1_minus1(l1_1(ee,jj))/3 ...
                             ) ...
                         );
            end
            for kk = 1:3
                cs_jkitr = 0;
                cs_jkitz = 0;
                cs_ijktr = 0;
                cs_ijktz = 0;
                %
                diff_h_cs_jkitr = zeros(1,n_s_e);
                diff_h_cs_jkitz = zeros(1,n_s_e);
                diff_h_cs_ijktr = zeros(1,n_s_e);
                diff_h_cs_ijktz = zeros(1,n_s_e);
                for pp = 1:n_lGaussian_Q
                    cs_jkitr ...
                        = cs_jkitr ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_lG(kk,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    cs_jkitz ...
                        = cs_jkitz ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_lG(kk,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    cs_ijktr ...
                        = cs_ijktr ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(kk,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    cs_ijktz ...
                        = cs_ijktz ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(kk,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    for qq = 1:n_s_e
                        diff_h_cs_jkitr(qq) ...
                            = diff_h_cs_jkitr(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_cs_jkitz(qq) ...
                            = diff_h_cs_jkitz(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_cs_ijktr(qq) ...
                            = diff_h_cs_ijktr(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_cs_ijktz(qq) ...
                            = diff_h_cs_ijktz(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                    end
                end
                diff_rhos1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                    = diff_rhos1_E1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                      + Lg ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us1(l1_1(ee,kk)) ...
                                *cs_jkitr ...
                              + ws1(l1_1(ee,kk)) ...
                                *cs_jkitz ...
                             ) ...
                            /3 ...
                          + cs_jkitr ...
                            *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                             ) ...
                          + cs_jkitz ...
                            *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                             ) ...
                          + cs_ijktr ...
                            *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                             ) ...
                          + cs_ijktz ...
                            *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_rhos1_D1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                    = diff_rhos1_D1_near(l1_1(ee,ii),l1_1(ee,jj)) ...
                      + Tg ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us1(l1_1(ee,kk)) ...
                                *cs_jkitr ...
                              + ws1(l1_1(ee,kk)) ...
                                *cs_jkitz ...
                             ) ...
                            /3 ...
                          + cs_jkitr ...
                            *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                             ) ...
                          + cs_jkitz ...
                            *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                             ) ...
                          + cs_ijktr ...
                            *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                             ) ...
                          + cs_ijktz ...
                            *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_us1_E1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                    = diff_us1_E1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Lg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitr ...
                        /3;
                diff_us1_D1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                    = diff_us1_D1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Tg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitr ...
                        /3;
                diff_ws1_E1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                    = diff_ws1_E1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Lg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitz ...
                        /3;
                diff_ws1_D1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                    = diff_ws1_D1_near(l1_1(ee,ii),l1_1(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Tg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitz ...
                        /3;
                for qq = 1:n_s_e
                    diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
                        = diff_h_E1_near(l1_1(ee,ii),spines_e(qq)) ...
                          + Lg ...
                            *rhos1(l1_1(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitr(qq) ...
                                  + ws1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *cs_jkitr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                             );
                    diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                        = diff_h_D1_near(l1_1(ee,ii),spines_e(qq)) ...
                          + Tg ...
                            *rhos1(l1_1(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitr(qq) ...
                                  + ws1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *cs_jkitr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                             );
                end
            end
        end
        for jj = 1:6
            cr_ijnr = 0;
            cr_ijnz = 0;
            cz_ijnr = 0;
            cz_ijnz = 0;
            diff_h_cr_ijnr = zeros(1,n_s_e);
            diff_h_cr_ijnz = zeros(1,n_s_e);
            diff_h_cz_ijnr = zeros(1,n_s_e);
            diff_h_cz_ijnz = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                cr_ijnr = cr_ijnr ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                cr_ijnz = cr_ijnz ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                cz_ijnr = cz_ijnr ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                cz_ijnz = cz_ijnz ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                for qq = 1:n_s_e
                    diff_h_cr_ijnr(qq) ...
                        = diff_h_cr_ijnr(qq) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_cr_ijnz(qq) ...
                        = diff_h_cr_ijnz(qq) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_cz_ijnr(qq) ...
                        = diff_h_cz_ijnr(qq) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_cz_ijnz(qq) ...
                        = diff_h_cz_ijnz(qq) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                end
            end
            diff_u_bar_Mr_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                = diff_u_bar_Mr_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *cr_ijnr ...
                    /3;
            diff_w_bar_Mr_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                = diff_w_bar_Mr_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *cr_ijnz ...
                    /3;
            diff_u_bar_Mz_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                = diff_u_bar_Mz_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *cz_ijnr ...
                    /3;
            diff_w_bar_Mz_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                = diff_w_bar_Mz_near(l_1(ee,ii),l(LE_to_TE_1(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *cz_ijnz ...
                    /3;
            for qq = 1:n_s_e
                diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
                    = diff_h_Mr_near(l_1(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_bar(l(LE_to_TE_1(ee),jj)) ...
                            *diff_h_cr_ijnr(qq) ...
                          + w_bar(l(LE_to_TE_1(ee),jj)) ...
                            *diff_h_cr_ijnz(qq) ...
                         ) ...
                        /3;
                diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
                    = diff_h_Mz_near(l_1(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_bar(l(LE_to_TE_1(ee),jj)) ...
                            *diff_h_cz_ijnr(qq) ...
                          + w_bar(l(LE_to_TE_1(ee),jj)) ...
                            *diff_h_cz_ijnz(qq) ...
                         ) ...
                        /3; 
            end
        end
    end
end

%Contact line contributions to the derivatives of S_1 with respect to
%sigma1
diff_sigma1_S1_near(c1,c1) = diff_sigma1_S1_near(c1,c1) ...
                             + (1+4*Eg*Bg) ...
                               /(4*Bg);
%Adding the contact line contributions form equation E1_1
diff_rhos1_E2_near = Ls ...
                     *(  2 ...
                         *delta_t ...
                         *(  us1(c1) ...
                             *m1_r ...
                           + ws1(c1) ...
                             *m1_z ...
                          ) ...
                         /3 ...
                       - m1_r ...
                         *(  2*Nodes_rz(contact_line,1)/3 ...
                           - 2*Nodes_rz_minus1(contact_line,1)/3 ...
                          ) ...
                       - m1_z ...
                         *(  2*Nodes_rz(contact_line,2)/3 ...
                           - 2*Nodes_rz_minus1(contact_line,2)/3 ...
                          ) ...
                      );
diff_us1_E2_near = 2 ...
                   *delta_t ...
                   *Ls ...
                   *rhos1(c1) ...
                   *m1_r ...
                   /3;
diff_ws1_E2_near = 2 ...
                   *delta_t ...
                   *Ls ...
                   *rhos1(c1) ...
                   *m1_z ...
                   /3; 
%Adding the contact line contributions form equation D1_1
diff_rhos1_D2_near = Ts ...
                     *(  2 ...
                         *delta_t ...
                         *(  us1(c1) ...
                             *m1_r ...
                           + ws1(c1) ...
                             *m1_z ...
                          ) ...
                         /3 ...
                       - m1_r ...
                         *(  2*Nodes_rz(contact_line,1)/3 ...
                           - 2*Nodes_rz_minus1(contact_line,1)/3 ...
                          ) ...
                       - m1_z ...
                         *(  2*Nodes_rz(contact_line,2)/3 ...
                           - 2*Nodes_rz_minus1(contact_line,2)/3 ...
                          ) ...
                      );
diff_us1_D2_near = 2 ...
                   *delta_t ...
                   *Ts ...
                   *rhos1(c1) ...
                   *m1_r ...
                   /3;
diff_ws1_D2_near = 2 ...
                   *delta_t ...
                   *Ts ...
                   *rhos1(c1) ...
                   *m1_z ...
                   /3; 
%Derivatives of E2 with respect to h that come from derivatives with
%respect to theta_c
diff_theta_c_E2_near = Ls ...
                       *rhos1(c1) ...
                       *(  2 ...
                           *delta_t ...
                           *(  us1(c1) ...
                               *diff_theta_c_m1_r ...
                             + ws1(c1) ...
                               *diff_theta_c_m1_z ...
                            ) ...
                           /3 ...
                         - diff_theta_c_m1_r ...
                           *(  2*Nodes_rz(contact_line,1)/3 ...
                             - 2*Nodes_rz_minus1(contact_line,1)/3 ...
                            ) ...
                         - diff_theta_c_m1_z ...
                           *(  2*Nodes_rz(contact_line,2)/3 ...
                             - 2*Nodes_rz_minus1(contact_line,2)/3 ...
                            ) ...
                        );    
%Derivatives of D2 with respect to h that come from derivatives with
%respect to theta_c
diff_theta_c_D2_near = Ts ...
                       *rhos1(c1) ...
                       *(  2 ...
                           *delta_t ...
                           *(  us1(c1) ...
                               *diff_theta_c_m1_r ...
                             + ws1(c1) ...
                               *diff_theta_c_m1_z ...
                            ) ...
                           /3 ...
                         - diff_theta_c_m1_r ...
                           *(  2*Nodes_rz(contact_line,1)/3 ...
                             - 2*Nodes_rz_minus1(contact_line,1)/3 ...
                            ) ...
                         - diff_theta_c_m1_z ...
                           *(  2*Nodes_rz(contact_line,2)/3 ...
                             - 2*Nodes_rz_minus1(contact_line,2)/3 ...
                            ) ...
                        );  
%Contact line contributions for mass exchange on
%the liquid-solid surface
diff_h_E2_near(c2,1) = diff_h_E2_near(c2,1) ...
                       - 2 ...
                         *Ls ...
                         *rhos1(c1) ...
                         *(  m1_r ...
                             *diff_h0_rz(contact_line,1) ...
                           + m1_z ...
                             *diff_h0_rz(contact_line,2) ...
                          ) ...
                         /3;    
%Contact line contributions for density transport on
%the liquid-solid surface
diff_h_D2_near(c2,1) = diff_h_D2_near(c2,1) ...
                       - 2 ...
                         *Ts ...
                         *rhos1(c1) ...
                         *(  m1_r ...
                             *diff_h0_rz(contact_line,1) ...
                           + m1_z ...
                             *diff_h0_rz(contact_line,2) ...
                          ) ...
                         /3;
    
%Adding the solid-surface boundary contributions to the Jacobian of
%the equations in the near field
%First line-element (has one less spine it depends on)
for ee = 1%looping over elements
    %Finding nodal positions for this line element
    r_le = Nodes_rz(l_2(ee,:),1);
    z_le = Nodes_rz(l_2(ee,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    r_e = Nodes_rz(l(LE_to_TE_2(ee),:),1);
    z_e = Nodes_rz(l(LE_to_TE_2(ee),:),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %Finding total number of spines whose size affects this line 
    %element
    n_s_e = length(S_2(ee,:));
    %Finding the numbers of the spines whose lengths affect the 
    %shape of the element
    spines_e = S_2(ee,:);
    %Finding derivatives of the nodal positions with respect to the
    %spine legnths
    diff_h_r_le = zeros(3,n_s_e);
    diff_h_z_le = zeros(3,n_s_e);
    diff_h_r_le(:,1) = diff_h0_rz(l_2(ee,:),1);
    diff_h_z_le(:,1) = diff_h0_rz(l_2(ee,:),2);
    for qq = 2:n_s_e
        for rr = el2_s_loc_nodes(ee,qq)
            diff_h_r_le(rr,qq) = diff_h_rz(l_2(ee,rr),1);
            diff_h_z_le(rr,qq) = diff_h_rz(l_2(ee,rr),2);
        end
    end
    diff_h_r_le_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_le_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            diff_h_r_le_lGaussian(pp,qq) ...
                = (diff_h_r_le(:,qq)')*phi2_lG(:,pp);
            diff_h_z_le_lGaussian(pp,qq) ...
                = (diff_h_z_le(:,qq)')*phi2_lG(:,pp);
        end
    end
    %Finding derivatives of the nodal position of the associated triangular
    %element
    diff_h_r_e = zeros(6,n_s_e);
    diff_h_z_e = zeros(6,n_s_e);
    diff_h_r_e(:,1) = diff_h0_rz(l(LE_to_TE_2(ee),:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(LE_to_TE_2(ee),:),2);
    for qq = 2:n_s_e
        for rr = el_s_loc_nodes{LE_to_TE_2(ee),qq}
            diff_h_r_e(rr,qq) = diff_h_rz(l(LE_to_TE_2(ee),rr),1);
            diff_h_z_e(rr,qq) = diff_h_rz(l(LE_to_TE_2(ee),rr),2);
        end
    end
    %Finding the derivatives of the determinant of the associated
    %triangular element
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *Tmat2{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *Tmat2{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    %Zeroing the derivatives of r' = \partial_\eta r and 
    %z' = \partial_\eta z with respect to the spine lengths at each 
    %Gaussian quadrature point
    diff_h_r_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    %Zeroing the derivative of the determinant of the Jacobian of 
    %the isoparametric map at each Gaussian quadrature point
    diff_h_det_Jle = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        %Finding the r' = \partial_\eta r and z' = \partial_\eta z 
        %at each Gaussian quadrature point
        r_prime_lGaussian(pp) = (phi2_eta_lG(:,pp)')*(r_le-min_r_le);
        z_prime_lGaussian(pp) = (phi2_eta_lG(:,pp)')*(z_le-min_z_le);
        normaliser = max(abs(r_prime_lGaussian(pp)), ...
                         abs(z_prime_lGaussian(pp)));
        r_prime_lGaussian_aux = r_prime_lGaussian(pp)/normaliser;
        z_prime_lGaussian_aux = z_prime_lGaussian(pp)/normaliser;
        %Finding the determinant of the Jacobian 
        %of the isoparametric map at each Gaussian quadrature point
        det_Jle(pp) = sqrt(  r_prime_lGaussian_aux^2 ...
                           + z_prime_lGaussian_aux^2 ...
                          ) ...
                      *normaliser;
        det_Je(pp) = (r_e'-min_r_e)*Tmat2{pp}*(z_e-min_z_e);
        %Finding the coordinates with respect to the contact line
        %and the tangent plane to the solid to introduce in the
        %expression of the eigensolution
%         r_pp = (r_le'-Nodes_rz(1,1))*phi2_lG(:,pp);
%         z_pp = (z_le'-Nodes_rz(1,2))*phi2_lG(:,pp);
%         %Data for eigensolution
%         theta_pol = atan2(z_pp,r_pp);
%         phi_pp = pi - theta_m - theta_pol;
%         theta_pp = lambda_eig*phi_pp;
%         c_theta_pp = cos(theta_pp);
%         s_theta_pp = sin(theta_pp);
%         divider = max(abs(r_pp),abs(z_pp));
%         r_pp_div = r_pp/divider;
%         z_pp_div = z_pp/divider;
%         rho_l = sqrt(r_pp_div^2+z_pp_div^2);
%         rho_l = rho_l*divider;
%         rho_l_minus2_pp = rho_l^(lambda_eig-2);
%         rho_l_minus4_pp = rho_l^(lambda_eig-4);
%         rho_l_minus6_pp = rho_l^(lambda_eig-6);
%         ln_rho2_pp = 2*log(rho_l);
%         % Find the values of u_check at the Gaussian sampling 
%         %points
%         u_check(pp) = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of w_check at the Gaussian sampling 
%         %points
%         w_check(pp) = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of dr_u_check at the Gaussian sampling 
%         %points
%         dr_u_check(pp) = dr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_u_check at the Gaussian sampling 
%         %points
%         dz_u_check(pp) = dz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_u_check(pp) ...
%             = dlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of dr_w_check at the Gaussian sampling 
%         %points
%         dr_w_check(pp) = dr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_w_check at the Gaussian sampling 
%         %points
%         dz_w_check(pp) = dz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_w_check(pp) ...
%             = dlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of drr_u_check at the Gaussian sampling 
%         %points
%         drr_u_check(pp) = drr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_u_check at the Gaussian sampling 
%         %points
%         drz_u_check(pp) = drz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_u_check at the Gaussian sampling 
%         %points
%         dzz_u_check(pp) = dzz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_u_check at the Gaussian 
%         %sampling points
%         drlambda_eig_u_check(pp) ...
%             = drlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dzlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_u_check(pp) ...
%             = dzlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp); 
%         % Find the values of drr_w_check at the Gaussian sampling 
%         %points
%         drr_w_check(pp) = drr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_w_check at the Gaussian sampling 
%         %points
%         drz_w_check(pp) = drz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_w_check at the Gaussian sampling 
%         %points
%         dzz_w_check(pp) = dzz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_w_check at the Gaussian 
%         %sampling points
%         drlambda_eig_w_check(pp) ...
%             = drlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);  
%         %Find the values of dzlambda_eig_w_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_w_check(pp) ...
%             = dzlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_u_check(pp) ...
%             = dphi_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_w_check(pp) ...
%             = dphi_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_u_check(pp) ...
%             = drphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_u_check(pp) ...
%             = dzphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_w_check(pp) ...
%             = drphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_w_check(pp) ...
%             = dzphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
        for qq = 1:n_s_e
            %Finding the derivatives of r' = \partial_\eta r and 
            %z' = \partial_\eta z with respect to the spine lengths
            %at each Gaussian quadrature point
            diff_h_r_prime_lGaussian(pp,qq) ...
                = (phi2_eta_lG(:,pp)')*diff_h_r_le(:,qq);
            diff_h_z_prime_lGaussian(pp,qq) ...
                = (phi2_eta_lG(:,pp)')*diff_h_z_le(:,qq);
            %Finding the derivative of the determinant of the 
            %Jacobian of the isoparametric map at each Gaussian 
            %quadrature point
            diff_h_det_Jle(pp,qq) ...
                = (  r_prime_lGaussian(pp) ...
                     *diff_h_r_prime_lGaussian(pp,qq) ...
                   + z_prime_lGaussian(pp) ...
                     *diff_h_z_prime_lGaussian(pp,qq)) ...
                  /det_Jle(pp);
        end
    end
    %Finding integral quantities and their derivatives with respect
    %to each of the spine lengths
    for ii = 1:3 %looping over local nodes to find the contribution
        %to momentum and impermeability residuals 
        %
%         %Zeroing variables needed to calculate derivatives of Mr_i
%         %with respect to A
%         d_itrtrchu = 0;
%         d_itrtzchw = 0;
%         d_inrdrchu = 0;
%         d_inzdrchw = 0;
%         %Zeroing variables needed to calculate derivatives of Mz_i
%         %with respect to A
%         d_itrtzchu = 0;
%         d_itztzchw = 0;
%         d_inrdzchu = 0;
%         d_inzdzchw = 0;
%         %Zeroing variables needed to calculate the derivatives of
%         %S2_i with respect to A
%         d_itrchu = 0;
%         d_itzchw = 0;
%         %Zeroing variables needed to calculate derivatives of E2_i
%         %with respect to A
%         d_inrchu = 0;
%         d_inzchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %Mr_i with respect to theta_m
%         diff_theta_m_d_itrtrchu = 0;
%         diff_theta_m_d_itrtzchw = 0;
%         diff_theta_m_d_inrdrchu = 0;
%         diff_theta_m_d_inzdrchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %Mz_i with respect to theta_m
%         diff_theta_m_d_itrtzchu = 0;
%         diff_theta_m_d_itztzchw = 0; 
%         diff_theta_m_d_inrdzchu = 0;
%         diff_theta_m_d_inzdzchw = 0;  
%         %Zeroing variables needed to calculate the derivatives of
%         %S2_i with respect to theta_m
%         diff_theta_m_d_itrchu = 0;
%         diff_theta_m_d_itzchw = 0;
%         %Zeroing variables needed to calculate the derivatives of
%         %E2_i with respect to theta_m
%         diff_theta_m_d_inrchu = 0;
%         diff_theta_m_d_inzchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %Mr_i with respect to h_q
%         diff_h_d_itrtrchu = zeros(1,n_s_e);
%         diff_h_d_itrtzchw = zeros(1,n_s_e);
%         diff_h_d_inrdrchu = zeros(1,n_s_e);
%         diff_h_d_inzdrchw = zeros(1,n_s_e);
%         %Zeroing variables needed to calculate the derivative of
%         %Mz_i with respect to h_q
%         diff_h_d_itrtzchu = zeros(1,n_s_e);
%         diff_h_d_itztzchw = zeros(1,n_s_e);
%         diff_h_d_inrdzchu = zeros(1,n_s_e);
%         diff_h_d_inzdzchw = zeros(1,n_s_e);
%         %Zeroing variables needed to calculate the derivatives of
%         %S2_i with respect to h
%         diff_h_d_itrchu = zeros(1,n_s_e);
%         diff_h_d_itzchw = zeros(1,n_s_e);
        %Zeroing variables needed to calculate the derivatives of
        %E2_i with respect to h
        diff_h_d_i = zeros(1,n_s_e);
%         diff_h_d_inrchu = zeros(1,n_s_e);
%         diff_h_d_inzchw = zeros(1,n_s_e);
        for pp = 1:n_lGaussian_Q
%             %Variables needed to calculate derivatives of Mr_i
%             %with respect to A
%             d_itrtrchu = ...
%                 d_itrtrchu ...
%                 + W_lG(pp) ...
%                   *phi2_lG(ii,pp) ...
%                   *r_prime_lGaussian(pp) ...
%                   *r_prime_lGaussian(pp) ...
%                   *u_check(pp) ...
%                   /det_Jle(pp);
%             d_itrtzchw ...
%                 = d_itrtzchw ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *w_check(pp) ...
%                     /det_Jle(pp);
%             d_inrdrchu ...
%                 = d_inrdrchu ...
%                   - alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...                    
%                     *dr_u_check(pp);
%             d_inzdrchw ...
%                 = d_inzdrchw ...
%                   + alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...                    
%                     *dr_w_check(pp);
%             %Variables needed to calculate derivatives of Mz_i
%             %with respect to A
%             d_itrtzchu = ...
%                 d_itrtzchu ...
%                 + W_lG(pp) ...
%                   *phi2_lG(ii,pp) ...
%                   *r_prime_lGaussian(pp) ...
%                   *z_prime_lGaussian(pp) ...
%                   *u_check(pp) ...
%                   /det_Jle(pp);
%             d_itztzchw = ...
%                 d_itztzchw ...
%                 + W_lG(pp) ...
%                   *phi2_lG(ii,pp) ...
%                   *z_prime_lGaussian(pp) ...
%                   *z_prime_lGaussian(pp) ...
%                   *w_check(pp) ...
%                   /det_Jle(pp);
%             d_inrdzchu ...
%                 = d_inrdzchu ...
%                   - alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...                    
%                     *dz_u_check(pp);
%             d_inzdzchw ...
%                 = d_inzdzchw ...
%                   + alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...                    
%                     *dz_w_check(pp);
%             %Variables needed to calculate the derivatives of
%             %S2_i with respect to A
%             d_itrchu ...
%                 = d_itrchu ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *u_check(pp);
%             d_itzchw ...
%                 = d_itzchw ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *w_check(pp);
%             %Variables needed to calculate derivatives of E2_i
%             %with respect to A    
%             d_inrchu = d_inrchu ...
%                        - alpha_2 ...
%                          *W_lG(pp) ...
%                          *phi2_lG(ii,pp) ...
%                          *z_prime_lGaussian(pp) ...
%                          *u_check(pp) ...
%                          *det_Jle(pp);
%             d_inzchw = d_inzchw ...
%                        + alpha_2 ...
%                          *W_lG(pp) ...
%                          *phi2_lG(ii,pp) ...
%                          *r_prime_lGaussian(pp) ...
%                          *w_check(pp) ...
%                          *det_Jle(pp);
%             %Variables needed to calculate the derivatives of Mr_i
%             %with respect to theta_m
%             diff_theta_m_d_itrtrchu ...
%                 = diff_theta_m_d_itrtrchu ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     /det_Jle(pp);
%             diff_theta_m_d_itrtzchw ...
%                 = diff_theta_m_d_itrtzchw ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     /det_Jle(pp);
%             diff_theta_m_d_inrdrchu ...
%                 = diff_theta_m_d_inrdrchu ...
%                   - alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...                    
%                     *(  drlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_u_check(pp) ...
%                      );
%             diff_theta_m_d_inzdrchw ...
%                 = diff_theta_m_d_inzdrchw ...
%                   + alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...                    
%                     *(  drlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_w_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of
%             %Mz_i with respect to theta_m
%             diff_theta_m_d_itrtzchu ...
%                 = diff_theta_m_d_itrtzchu ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     /det_Jle(pp);
%             diff_theta_m_d_itztzchw ...
%                 = diff_theta_m_d_itztzchw ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     /det_Jle(pp); 
%             diff_theta_m_d_inrdzchu ...
%                 = diff_theta_m_d_inrdzchu ...
%                   - alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...                    
%                     *(  dzlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_u_check(pp) ...
%                      );
%             diff_theta_m_d_inzdzchw ...
%                 = diff_theta_m_d_inzdzchw ...
%                   + alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...                    
%                     *(  dzlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_w_check(pp) ...
%                      ); 
%             %Variables needed to calculate the derivatives of
%             %S2_i with respect to theta_m
%             diff_theta_m_d_itrchu ...
%                 = diff_theta_m_d_itrchu ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      );
%             diff_theta_m_d_itzchw ...
%                 = diff_theta_m_d_itzchw ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      );
%             %Variables needed to calculate the derivatives of
%             %E2_i with respect to theta_m
%             diff_theta_m_d_inrchu ...
%                 = diff_theta_m_d_inrchu ...
%                   - alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     *det_Jle(pp);
%             diff_theta_m_d_inzchw ...
%                 = diff_theta_m_d_inzchw ...
%                   + alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     *det_Jle(pp);
            for qq = 1:n_s_e
%                 %Variables needed to calculate the derivative of
%                 %Mr_i with respect to h_q
%                 diff_h_d_itrtrchu(qq) ...
%                     = diff_h_d_itrtrchu(qq) ...
%                       + 2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       - W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *u_check(pp) ...
%                         *diff_h_det_Jle(pp,qq) ...
%                         /(det_Jle(pp)^2);
% %                               + W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 /det_Jle(pp) ...
%                 diff_h_d_itrtzchw(qq) ...
%                     = diff_h_d_itrtzchw(qq) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *z_prime_lGaussian(pp) ...
%                         *w_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       - W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *w_check(pp) ...
%                         *diff_h_det_Jle(pp,qq) ...
%                         /(det_Jle(pp)^2);
% %                               + W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 /det_Jle(pp) ...
%               diff_h_d_inrdrchu(qq) ...
%                   = diff_h_d_inrdrchu(qq) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *diff_h_z_prime_lGaussian(pp,qq) ...
%                       *dr_u_check(pp) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *z_prime_lGaussian(pp) ...
%                       *drr_u_check(pp) ...
%                       *(  diff_h_r_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,1) ...
%                        ) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *z_prime_lGaussian(pp) ...
%                       *drz_u_check(pp) ...
%                       *(  diff_h_z_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,2) ...
%                        ); 
%               diff_h_d_inzdrchw(qq) ...
%                   = diff_h_d_inzdrchw(qq) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *diff_h_r_prime_lGaussian(pp,qq) ...
%                       *dr_w_check(pp) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *r_prime_lGaussian(pp) ...
%                       *drr_w_check(pp) ...
%                       *(  diff_h_r_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,1) ...
%                        ) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *r_prime_lGaussian(pp) ...
%                       *drz_w_check(pp) ...
%                       *(  diff_h_z_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,2) ...
%                        ); 
%                 %Variables needed to calculate the derivative of
%                 %Mz_i with respect to h_q    
%                 diff_h_d_itrtzchu(qq) ...
%                     = diff_h_d_itrtzchu(qq) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *z_prime_lGaussian(pp) ...
%                         *u_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       - W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *u_check(pp) ...
%                         *diff_h_det_Jle(pp,qq) ...
%                         /(det_Jle(pp)^2);
% %                               + W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 /det_Jle(pp) ...
%                 diff_h_d_itztzchw(qq) ...
%                     = diff_h_d_itztzchw(qq) ...
%                       + 2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       - W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *w_check(pp) ...
%                         *diff_h_det_Jle(pp,qq) ...
%                         /(det_Jle(pp)^2);
% %                               + W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 /det_Jle(pp) ...
%               diff_h_d_inrdzchu(qq) ...
%                   = diff_h_d_inrdzchu(qq) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *diff_h_z_prime_lGaussian(pp,qq) ...
%                       *dz_u_check(pp) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *z_prime_lGaussian(pp) ...
%                       *drz_u_check(pp) ...
%                       *(  diff_h_r_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,1) ...
%                        ) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *z_prime_lGaussian(pp) ...
%                       *dzz_u_check(pp) ...
%                       *(  diff_h_z_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,2) ...
%                        ); 
%               diff_h_d_inzdzchw(qq) ...
%                   = diff_h_d_inzdzchw(qq) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *diff_h_r_prime_lGaussian(pp,qq) ...
%                       *dz_w_check(pp) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *r_prime_lGaussian(pp) ...
%                       *drz_w_check(pp) ...
%                       *(  diff_h_r_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,1) ...
%                        ) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *r_prime_lGaussian(pp) ...
%                       *dzz_w_check(pp) ...
%                       *(  diff_h_z_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,2) ...
%                        ); 
%                 %Variables needed to calculate the derivatives of
%                 %S2_i with respect to h_q
%                 diff_h_d_itrchu(qq) ...
%                     = diff_h_d_itrchu(qq) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                      %For wetting of a curved surface this will
%                      %require an extra term
%                 diff_h_d_itzchw(qq) ...
%                     = diff_h_d_itzchw(qq) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                      %For wetting of a curved surface this will
%                      %require an extra term
%                 %Variables needed to calculate derivatives 
%                 %of E2_i with respect to h_q
%                 diff_h_d_inrchu(qq) ...
%                     = diff_h_d_inrchu(qq) ...
%                       - alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                         *det_Jle(pp) ...
%                       - alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       - alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       - alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *u_check(pp) ...
%                         *diff_h_det_Jle(pp,qq);
% %                               - alpha_2 ...
% %                                 *W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Jle(pp) ...
%                 diff_h_d_inzchw(qq) ...
%                     = diff_h_d_inzchw(qq) ...
%                       + alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                         *det_Jle(pp) ...
%                       + alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       + alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       + alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *w_check(pp) ...
%                         *diff_h_det_Jle(pp,qq);
% %                               + alpha_2 ...
% %                                 *W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Jle(pp) ...
                diff_h_d_i(qq) ...
                    = diff_h_d_i(qq) ...
                      + W_lG(pp) ...
                        *phi2_lG(ii,pp) ...
                        *diff_h_det_Jle(pp,qq);
            end
        end
%         % Adding contributions of derivatives of Mr_i 
%         %with respect to h that come from derivatives with respect to
%         %theta_m
%         diff_h_Mr_near(l_2(ee,ii),S_1(1,:)) ...
%             = diff_h_Mr_near(l_2(ee,ii),S_1(1,:)) ...
%               + 2 ...
%                 *delta_t ...
%                 *A ...
%                 *(  (1+4*Be*Ca*Es) ...
%                     *(  diff_theta_m_d_itrtrchu ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_d_itrtzchw ...
%                         *diff_h_theta_m ...
%                      )...
%                     /(4*Ca*Es) ...
%                   - (  diff_theta_m_d_inrdrchu ...
%                        *diff_h_theta_m ...
%                      + diff_theta_m_d_inzdrchw ...
%                        *diff_h_theta_m ...
%                     ) ...
%                  ) ...
%                 /3;
%         % Adding contributions of derivatives of Mz_i 
%         %with respect to h that come from derivatives with respect to
%         %theta_m
%         diff_h_Mz_near(l_2(ee,ii),S_1(1,:)) ...
%             = diff_h_Mz_near(l_2(ee,ii),S_1(1,:)) ...
%               + 2 ...
%                 *delta_t ...
%                 *A ...
%                 *(  (1+4*Be*Ca*Es) ...
%                     *(  diff_theta_m_d_itrtzchu ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_d_itztzchw ...
%                         *diff_h_theta_m ...
%                      )...
%                     /(4*Ca*Es) ...
%                   - (  diff_theta_m_d_inrdzchu ...
%                        *diff_h_theta_m ...
%                      + diff_theta_m_d_inzdzchw ...
%                        *diff_h_theta_m ...
%                     ) ...
%                  ) ...
%                 /3;
%         %Contributions to the derivatives of S2_i with respect to h
%         %that come from derivatives with respect to theta_m
%         diff_h_S2_near(l2_2(ee,ii),S_1(1,:)) ...
%             = diff_h_S2_near(l2_2(ee,ii),S_1(1,:)) ...
%               - A ...
%                 *(  diff_theta_m_d_itrchu ...
%                     *diff_h_theta_m ...
%                   + diff_theta_m_d_itzchw ...
%                     *diff_h_theta_m ...
%                  ) ...
%                 /2;
%         %Contributions to the derivatives of E2_i with respect to h 
%         %that come from derivative with respect to theta_m
%         diff_h_E2_near(l2_2(ee,ii),S_1(1,:)) ...
%             = diff_h_E2_near(l2_2(ee,ii),S_1(1,:)) ...
%               + A ...
%                 *(  diff_theta_m_d_inrchu ...
%                     *diff_h_theta_m ...
%                   + diff_theta_m_d_inzchw ...
%                     *diff_h_theta_m ...
%                  );
%         %Contributions to derivatives of Mr_i with respect to A
%         diff_A_Mr_near(l_2(ee,ii)) ...
%             = diff_A_Mr_near(l_2(ee,ii)) ...
%               + 2 ...
%                 *delta_t ...
%                 *(  (1+4*Be*Ca*Es) ...
%                     *(  d_itrtrchu ...
%                       + d_itrtzchw ...
%                      )...
%                     /(4*Ca*Es) ...
%                   - (  d_inrdrchu ...
%                      + d_inzdrchw ...
%                     ) ...
%                  ) ...
%                 /3;
%         %Contributions to derivatives of Mz_i with respect to A
%         diff_A_Mz_near(l_2(ee,ii)) ...
%             = diff_A_Mz_near(l_2(ee,ii)) ...
%               + 2 ...
%                 *delta_t ...
%                 *(  (1+4*Be*Ca*Es) ...
%                     *(  d_itrtzchu ...
%                       + d_itztzchw ...
%                      )...
%                     /(4*Ca*Es) ...
%                   - (  d_inrdzchu ...
%                      + d_inzdzchw ...
%                     ) ...
%                  ) ...
%                 /3;
%         %Contributions to derivatives of S2_i with respect to A
%         diff_A_S2_near(l2_2(ee,ii)) ...
%             = diff_A_S2_near(l2_2(ee,ii)) ...
%               -(  d_itrchu ...
%                 + d_itzchw ...
%                ) ...
%                /2;
%         %Contributions to derivatives of E2_i with respect to A
%         diff_A_E2_near(l2_2(ee,ii)) ...
%             = diff_A_E2_near(l2_2(ee,ii)) ...
%               + d_inrchu ...
%               + d_inzchw;
        %adding contributions that do not depend on jj to 
        %the derivatives with respect to spine lengths 
        for qq = 1:n_s_e
%             diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
%                 = diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
%                   + 2 ...
%                     *delta_t ...
%                     *A ...
%                     *(  (1+4*Be*Ca*Es) ...
%                         *(  diff_h_d_itrtrchu(qq) ...
%                           + diff_h_d_itrtzchw(qq) ...
%                          ) ...
%                         /(4*Ca*Es) ...
%                       - (  diff_h_d_inrdrchu(qq) ...
%                          + diff_h_d_inzdrchw(qq) ...
%                         ) ...
%                      ) ...
%                     /3;
%             diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
%                 = diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
%                   + 2 ...
%                     *delta_t ...
%                     *A ...
%                     *(  (1+4*Be*Ca*Es) ...
%                         *(  diff_h_d_itrtzchu(qq) ...
%                           + diff_h_d_itztzchw(qq) ...
%                          ) ...
%                         /(4*Ca*Es) ...
%                       - (  diff_h_d_inrdzchu(qq) ...
%                          + diff_h_d_inzdzchw(qq) ...
%                         ) ...
%                      ) ...
%                     /3;
%             diff_h_S2_near(l2_2(ee,ii),spines_e(qq)) ...
%                 = diff_h_S2_near(l2_2(ee,ii),spines_e(qq)) ...
%                   - A ...
%                     *(  diff_h_d_itrchu(qq) ...
%                       + diff_h_d_itzchw(qq) ...
%                      ) ...
%                     /2;
%             diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
%                 = diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
%                   + Fs ...
%                     *Ds ...
%                     *diff_h_d_i(qq);
%                 ...
%                   + A ...
%                     *(  diff_h_d_inrchu(qq) ...
%                       + diff_h_d_inzchw(qq) ...
%                      );
            diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                = diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                  - 2 ...
                    *delta_t ...
                    *Ds ...
                    *diff_h_d_i(qq) ...
                    /3;
        end
        for jj = 1:3%looping over local nodes to calculate inner 
            %product of basis function by basis function ii
            %
            %Zeroing variables needed to calculate the contribution 
            %to the derivative of Mr_i with respect to u_j
            d_ijtrtr = 0;
            %Zeroing variables needed to calculate the contribution 
            %to the derivative of Mr_i with respect to w_j
            d_ijtrtz = 0;
            %Zeroing variables needed to calculate the contribution 
            %to the derivative of Mr_i with respect to sigma2_j
            ds_ijtr = 0;
            %Zeroing variables needed to calculate the contribution
            %to the derivative of Mz_i with respect to w_j
            d_ijtztz = 0;
            %Zeroing variables needed to calculate the contribution 
            %to the derivative of Mr_i with respect to sigma2_j
            ds_ijtz = 0;
            %Zeroing variables needed to calculate the derivative
            %of S2_i with respect to u_bar_j
            d_ijtr = 0;
            %Zeroing variables needed to calculate the derivative
            %of S2_i with respect to w_bar_j
            d_ijtz = 0;
            %Zeroing variables needed to calculate the derivatives
            %of S2_i with respect to sigma2
            ds_ji = 0;
            %Zeroing variables needed to calculate the contribution
            %to the derivative of I_i with respect to u_j
            d_ijnr = 0;
            %Zeroing variables needed to calculate the contribution
            %to the derivative of I_i with respect to w_j
            d_ijnz = 0;
            %Zeroing variables needed to calculate the
            %contributions to the drivatives of E2_i with respect
            %to rhos2_j
            d_ij  = 0;
            %Zeroing variables needed to calculate the contribution
            %to the derivative of Mr_i with respect to h_q
            diff_h_d_ijtrtr = zeros(1,n_s_e);
            diff_h_d_ijtrtz = zeros(1,n_s_e);
            diff_h_ds_ijtr = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the contribution
            %to the derivative of Mz_i with respect to h_q
            diff_h_d_ijtztz = zeros(1,n_s_e);
            diff_h_ds_ijtz = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the contribution
            %to the derivative of S2_i with respect to h_q
            diff_h_d_ijtr = zeros(1,n_s_e);
            diff_h_d_ijtz = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the contribution
            %to the derivative of I_i with respect to h_q
            diff_h_d_ijnr = zeros(1,n_s_e);
            diff_h_d_ijnz = zeros(1,n_s_e);
            %Zeroing variables that we needed to add to calculate
            %the derivatives of E2_i with respect to h
            diff_h_d_ij = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                %Variables needed to calculate the contribution to 
                %the derivative of Mr_i with respect to u_j
                d_ijtrtr = d_ijtrtr ...
                           + W_lG(pp) ...
                             *r_prime_lGaussian(pp) ...
                             *r_prime_lGaussian(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the contribution to 
                %the derivative of Mr_i with respect to w_j
                d_ijtrtz = d_ijtrtz ...
                           + W_lG(pp) ...
                             *r_prime_lGaussian(pp) ...
                             *z_prime_lGaussian(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the contribution to 
                %the derivative of Mz_i with respect to w_j
                d_ijtztz = d_ijtztz ...
                           + W_lG(pp) ...
                             *z_prime_lGaussian(pp) ...
                             *z_prime_lGaussian(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the contribution to 
                %the derivative of Mr_i with respect to sigma2_j
                ds_ijtr = ds_ijtr ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_eta_lG(jj,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                %Variables needed to calculate the contribution to 
                %the derivative of Mz_i with respect to sigma2_j
                ds_ijtz = ds_ijtz ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_eta_lG(jj,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);          
                %Variables needed to calculate the derivatives of
                %S2_i
                d_ijtr   = d_ijtr ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *r_prime_lGaussian(pp);
                d_ijtz   = d_ijtz ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *z_prime_lGaussian(pp);
                ds_ji    = ds_ji ...
                           + W_lG(pp) ...
                             *phi2_lG(jj,pp) ...
                             *phi2_eta_lG(ii,pp);
                %Variables needed to calculate the derivatives of
                %I_i
                d_ijnr   = d_ijnr ...
                           - alpha_2 ...
                             *W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *z_prime_lGaussian(pp);
                d_ijnz   = d_ijnz ...
                           + alpha_2 ...
                             *W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *r_prime_lGaussian(pp);
                %Variables needed to calculate the derivatives of
                %E2_i
                d_ij = d_ij ...
                       + W_lG(pp) ...
                         *phi2_lG(ii,pp) ...
                         *phi2_lG(jj,pp) ...
                         *det_Jle(pp);
                for qq = 1:n_s_e
                    %Variables needed for derivatives of Mr_i with
                    %respect to h_q
                    diff_h_d_ijtrtr(qq) ...
                        = diff_h_d_ijtrtr(qq) ...
                          + 2 ...
                            *W_lG(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    diff_h_d_ijtrtz(qq) ...
                        = diff_h_d_ijtrtz(qq) ...
                          + W_lG(pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            *z_prime_lGaussian(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            /det_Jle(pp) ...
                          + W_lG(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *z_prime_lGaussian(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                   diff_h_ds_ijtr(qq) ...
                       = diff_h_ds_ijtr(qq) ...
                         + W_lG(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_eta_lG(jj,pp) ...
                           *diff_h_r_prime_lGaussian(pp,qq) ...
                           /det_Jle(pp) ...
                         - W_lG(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_eta_lG(jj,pp) ...
                           *r_prime_lGaussian(pp) ...
                           *diff_h_det_Jle(pp,qq) ...
                           /(det_Jle(pp)^2);
                   %Variables needed for derivatives of Mz_i with
                    %respect to h_q
                   diff_h_d_ijtztz(qq) ...
                       = diff_h_d_ijtztz(qq) ...
                         + 2 ...
                           *W_lG(pp) ...
                           *z_prime_lGaussian(pp) ...
                           *diff_h_z_prime_lGaussian(pp,qq) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_lG(jj,pp) ...
                           /det_Jle(pp) ...
                         - W_lG(pp) ...
                           *z_prime_lGaussian(pp) ...
                           *z_prime_lGaussian(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_lG(jj,pp) ...
                           *diff_h_det_Jle(pp,qq) ...
                           /(det_Jle(pp)^2);
                   diff_h_ds_ijtz(qq) ...
                       = diff_h_ds_ijtz(qq) ...
                         + W_lG(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_eta_lG(jj,pp) ...
                           *diff_h_z_prime_lGaussian(pp,qq) ...
                           /det_Jle(pp) ...
                         - W_lG(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_eta_lG(jj,pp) ...
                           *z_prime_lGaussian(pp) ...
                           *diff_h_det_Jle(pp,qq) ...
                           /(det_Jle(pp)^2);
                    %Variables needed for derivatives of S2_i with
                    %respect to h_q
                    diff_h_d_ijtr(qq) ...
                        = diff_h_d_ijtr(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq); 
                    diff_h_d_ijtz(qq) ...
                        = diff_h_d_ijtz(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp);
                    %Variables needed for derivatives of E2_i with
                    %respect to h_q
                    diff_h_d_ijnr(qq) ...
                        = diff_h_d_ijnr(qq) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp);
                    diff_h_d_ijnz(qq) ...
                        = diff_h_d_ijnz(qq) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp);
                    diff_h_d_ij(qq) ...
                        = diff_h_d_ij(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq);
                end
            end
            %Jacobian contributions
            diff_u_bar_Mr_near(l_2(ee,ii),l_2(ee,jj)) ...
                = diff_u_bar_Mr_near(l_2(ee,ii),l_2(ee,jj))... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtrtr ...
                    /(6*Ca*Es);
            diff_w_bar_Mr_near(l_2(ee,ii),l_2(ee,jj)) ...
                = diff_w_bar_Mr_near(l_2(ee,ii),l_2(ee,jj))... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtrtz ...
                    /(6*Ca*Es);  
            diff_u_bar_Mz_near(l_2(ee,ii),l_2(ee,jj)) ...
                = diff_u_bar_Mz_near(l_2(ee,ii),l_2(ee,jj))... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtrtz ...
                    /(6*Ca*Es);
            diff_w_bar_Mz_near(l_2(ee,ii),l_2(ee,jj)) ...
                = diff_w_bar_Mz_near(l_2(ee,ii),l_2(ee,jj))... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtztz ...
                    /(6*Ca*Es);
            diff_lambda2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_lambda2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *d_ijnr ...
                    /3;
            diff_lambda2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_lambda2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *d_ijnz ...
                    /3;   
            diff_us2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_us2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  - delta_t ...
                    *d_ijtrtr ...
                    /(3*Ca*Es);
            diff_ws2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_ws2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  - delta_t ...
                    *d_ijtrtz ...
                    /(3*Ca*Es);
            diff_us2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_us2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  - delta_t ...
                    *d_ijtrtz ...
                    /(3*Ca*Es);
            diff_ws2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_ws2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  - delta_t ...
                    *d_ijtztz ...
                    /(3*Ca*Es);
            diff_u_bar_S2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                = diff_u_bar_S2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                  - d_ijtr/2;
            diff_w_bar_S2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                = diff_w_bar_S2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                  - d_ijtz/2;
            diff_us2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_us2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ijtr;
            diff_ws2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_ws2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ijtz;
            diff_sigma2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_sigma2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + Es ...
                    *ds_ji;
            diff_us2_I_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_us2_I_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ijnr;
            diff_ws2_I_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_ws2_I_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ijnz;
            diff_u_bar_E2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                = diff_u_bar_E2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                  + d_ijnr;
            diff_w_bar_E2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                = diff_w_bar_E2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                  + d_ijnz;
            diff_us2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_us2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  - d_ijnr;
            diff_ws2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_ws2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  - d_ijnz;
            diff_rhos2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_rhos2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ij ...
                    *2 ...
                    *Ls ...
                    /3;
%                   - Fs ...
%                     *d_ij;
            diff_rhos2_D2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_rhos2_D2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ij ...
                    *(  2 ...
                        *delta_t ...
                        /3 ...
                      + 2 ...
                        *Ts ...
                        /3 ...
                     );
            for qq = 1:n_s_e
                diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
                 = diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
                   + 2 ...
                     *delta_t ...
                     *lambda2(l2_2(ee,jj)) ...
                     *diff_h_d_ijnr(qq) ...
                     /3 ...
                   + (1+4*Be*Ca*Es) ...
                     *delta_t ...
                     *(  u_bar(l_2(ee,jj)) ...
                         *diff_h_d_ijtrtr(qq) ...
                       + w_bar(l_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                      ) ...
                     /(6*Ca*Es) ...
                   + (1-4*Be*Ca*Es) ...
                     *delta_t ...
                     *(  u_s(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtr(qq) ...
                       + w_s(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                      ) ...
                     /(6*Ca*Es) ...
                   - delta_t ...
                     *(  us2(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtr(qq) ...
                       + ws2(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                      ) ...
                     /(3*Ca*Es);
                diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
                 = diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
                   + 2 ...
                     *delta_t ...
                     *lambda2(l2_2(ee,jj)) ...
                     *diff_h_d_ijnz(qq) ...
                     /3 ...
                   + (1+4*Be*Ca*Es) ...
                     *delta_t ...
                     *(  u_bar(l_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                       + w_bar(l_2(ee,jj)) ...
                         *diff_h_d_ijtztz(qq) ...
                      ) ...
                     /(6*Ca*Es) ...
                   + (1-4*Be*Ca*Es) ...
                     *delta_t ...
                     *(  u_s(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                       + w_s(l2_2(ee,jj)) ...
                         *diff_h_d_ijtztz(qq) ...
                      ) ...
                     /(6*Ca*Es) ...
                   - delta_t ...
                     *(  us2(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                       + ws2(l2_2(ee,jj)) ...
                         *diff_h_d_ijtztz(qq) ...
                      ) ...
                     /(3*Ca*Es);
                diff_h_S2_near(l2_2(ee,ii),spines_e(qq)) ...
                    = diff_h_S2_near(l2_2(ee,ii),spines_e(qq)) ...
                      + diff_h_d_ijtr(qq) ...
                        *(  us2(l2_2(ee,jj)) ...
                          - u_bar(l_2(ee,jj))/2 ...
                          - u_s(l2_2(ee,jj))/2 ...
                         ) ...
                      + diff_h_d_ijtz(qq) ...
                        *(  ws2(l2_2(ee,jj)) ...
                          - w_bar(l_2(ee,jj))/2 ...
                          - w_s(l2_2(ee,jj))/2 ...
                         );
                diff_h_I_near(l2_2(ee,ii),spines_e(qq)) ...
                 = diff_h_I_near(l2_2(ee,ii),spines_e(qq)) ...
                   + diff_h_d_ijnr(qq) ...
                     *(  us2(l2_2(ee,jj)) ...
                       - u_s(l2_2(ee,jj)) ...
                      ) ...
                   + diff_h_d_ijnz(qq) ...
                     *(  ws2(l2_2(ee,jj)) ...
                       - w_s(l2_2(ee,jj)) ...
                      );
                diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
                    = diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
                      + diff_h_d_ijnr(qq) ...
                        *(  u_bar(l_2(ee,jj)) ...
                          - us2( l2_2(ee,jj)) ...
                         ) ...
                      + diff_h_d_ijnz(qq) ...
                        *(  w_bar(l_2(ee,jj)) ...
                          - ws2( l2_2(ee,jj)) ...
                         ) ...
                      + diff_h_d_ij(qq) ...
                        *Ls ...
                        *(  2*rhos2(l2_2(ee,jj))/3 ...
                          - 2*rhos2_minus1(l2_2(ee,jj))/3 ...
                         );       
%                       - Fs ...
%                         *rhos2(l2_2(ee,jj)) ...
%                         *diff_h_d_ij(qq);
                diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                    = diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                      + diff_h_d_ij(qq) ...
                        *(  2 ...
                            *delta_t ...
                            *rhos2(l2_2(ee,jj)) ...
                            /3 ...
                          + Ts ...
                            *(  2*rhos2(l2_2(ee,jj))/3 ...
                              - 2*rhos2_minus1(l2_2(ee,jj))/3 ...
                             ) ...
                         );       
            end
            for kk = 1:3
                ds_jkitr = 0;
                ds_jkitz = 0;
                ds_ijktr = 0;
                ds_ijktz = 0;
                diff_h_ds_jkitr = zeros(1,n_s_e);
                diff_h_ds_jkitz = zeros(1,n_s_e);
                diff_h_ds_ijktr = zeros(1,n_s_e);
                diff_h_ds_ijktz = zeros(1,n_s_e);
                for pp = 1:n_lGaussian_Q
                    ds_jkitr ...
                        = ds_jkitr ...
                          + W_lG(pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_lG(kk,pp) ...
                            *phi2_eta_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    ds_jkitz ...
                        = ds_jkitz ...
                          + W_lG(pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_lG(kk,pp) ...
                            *phi2_eta_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    ds_ijktr ...
                        = ds_ijktr ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_eta_lG(kk,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    ds_ijktz ...
                        = ds_ijktz ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_eta_lG(kk,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    for qq = 1:n_s_e
                        diff_h_ds_jkitr(qq) ...
                            = diff_h_ds_jkitr(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_ds_jkitz(qq) ...
                            = diff_h_ds_jkitz(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_ds_ijktr(qq) ...
                            = diff_h_ds_ijktr(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_ds_ijktz(qq) ...
                            = diff_h_ds_ijktz(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                    end
                end 
                diff_rhos2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                    = diff_rhos2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                      + Ls ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us2(l2_2(ee,kk)) ...
                                *ds_jkitr ...
                              + ws2(l2_2(ee,kk)) ...
                                *ds_jkitz ...
                             ) ...
                            /3 ...
                          + (  ds_jkitr + ds_ijktr)...
                            *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                             ) ...
                          + (  ds_jkitz + ds_ijktz)...
                            *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_rhos2_D2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                    = diff_rhos2_D2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                      + Ts ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us2(l2_2(ee,kk)) ...
                                *ds_jkitr ...
                              + ws2(l2_2(ee,kk)) ...
                                *ds_jkitz ...
                             ) ...
                            /3 ...
                          + (  ds_jkitr + ds_ijktr)...
                            *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                             ) ...
                          + (  ds_jkitz + ds_ijktz)...
                            *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_us2_E2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                    = diff_us2_E2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Ls ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitr ...
                        /3;
                diff_us2_D2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                    = diff_us2_D2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Ts ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitr ...
                        /3;
                diff_ws2_E2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                    = diff_ws2_E2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Ls ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitz ...
                        /3;    
                diff_ws2_D2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                    = diff_ws2_D2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Ts ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitz ...
                        /3;    
                for qq = 1:n_s_e
                    diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
                        = diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
                          + Ls ...
                            *rhos2(l2_2(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitr(qq) ...
                                  + ws2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *ds_jkitr ...
                                /3 ...
                                *diff_h_r_le(kk,qq) ...
                              + diff_h_ds_jkitr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_jkitz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                             );
                    diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                        = diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                          + Ts ...
                            *rhos2(l2_2(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitr(qq) ...
                                  + ws2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *ds_jkitr ...
                                /3 ...
                                *diff_h_r_le(kk,qq) ...
                              + diff_h_ds_jkitr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_jkitz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                             );
                end                    
            end
        end
        for jj = 1:6
            dr_ijnr = 0;
            dr_ijnz = 0;
            dz_ijnr = 0;
            dz_ijnz = 0;
            diff_h_dr_ijnr = zeros(1,n_s_e);
            diff_h_dr_ijnz = zeros(1,n_s_e);
            diff_h_dz_ijnr = zeros(1,n_s_e);
            diff_h_dz_ijnz = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                dr_ijnr = dr_ijnr ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                dr_ijnz = dr_ijnz ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                dz_ijnr = dz_ijnr ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                dz_ijnz = dz_ijnz ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                for qq = 1:n_s_e
                    diff_h_dr_ijnr(qq) ...
                        = diff_h_dr_ijnr(qq) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_dr_ijnz(qq) ...
                        = diff_h_dr_ijnz(qq) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_dz_ijnr(qq) ...
                        = diff_h_dz_ijnr(qq) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_dz_ijnz(qq) ...
                        = diff_h_dz_ijnz(qq) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                end
            end
            diff_u_bar_Mr_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                = diff_u_bar_Mr_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *dr_ijnr ...
                    /3;
            diff_w_bar_Mr_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                = diff_w_bar_Mr_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *dr_ijnz ...
                    /3;
            diff_u_bar_Mz_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                = diff_u_bar_Mz_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *dz_ijnr ...
                    /3;
            diff_w_bar_Mz_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                = diff_w_bar_Mz_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *dz_ijnz ...
                    /3;
            for qq = 1:n_s_e
                diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
                    = diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_bar(l(LE_to_TE_2(ee),jj)) ...
                            *diff_h_dr_ijnr(qq) ...
                          + w_bar(l(LE_to_TE_2(ee),jj)) ...
                            *diff_h_dr_ijnz(qq) ...
                         ) ...
                        /3;
                diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
                    = diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_bar(l(LE_to_TE_2(ee),jj)) ...
                            *diff_h_dz_ijnr(qq) ...
                          + w_bar(l(LE_to_TE_2(ee),jj)) ...
                            *diff_h_dz_ijnz(qq) ...
                         ) ...
                        /3; 
            end
        end
    end
end
%Remaining line-elements in near field
for ee = 2:n2_el_near%looping over elements
    %Finding nodal positions for this line element
    r_le = Nodes_rz(l_2(ee,:),1);
    z_le = Nodes_rz(l_2(ee,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    r_e = Nodes_rz(l(LE_to_TE_2(ee),:),1);
    z_e = Nodes_rz(l(LE_to_TE_2(ee),:),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %Finding total number of spines whose size affects this line 
    %element
    n_s_e = 1+length(S_2(ee,:));
    %Finding the numbers of the spines whose lengths affect the 
    %shape of the element
    spines_e = [1,S_2(ee,:)];
    %Finding derivatives of the nodal positions with respect to the
    %spine legnths
    diff_h_r_le = zeros(3,n_s_e);
    diff_h_z_le = zeros(3,n_s_e);
    diff_h_r_le(:,1) = diff_h0_rz(l_2(ee,:),1);
    diff_h_z_le(:,1) = diff_h0_rz(l_2(ee,:),2);
    for qq = 2:n_s_e
        for rr = el2_s_loc_nodes(ee,qq-1)
            diff_h_r_le(rr,qq) = diff_h_rz(l_2(ee,rr),1);
            diff_h_z_le(rr,qq) = diff_h_rz(l_2(ee,rr),2);
        end
    end
    diff_h_r_le_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_le_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            diff_h_r_le_lGaussian(pp,qq) ...
                = (diff_h_r_le(:,qq)')*phi2_lG(:,pp);
            diff_h_z_le_lGaussian(pp,qq) ...
                = (diff_h_z_le(:,qq)')*phi2_lG(:,pp);
        end
    end
    %Finding derivatives of the nodal position of the associated triangular
    %element
    diff_h_r_e = zeros(6,n_s_e);
    diff_h_z_e = zeros(6,n_s_e);
    diff_h_r_e(:,1) = diff_h0_rz(l(LE_to_TE_2(ee),:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(LE_to_TE_2(ee),:),2);
    for qq = 2:n_s_e
        for rr = el_s_loc_nodes{LE_to_TE_2(ee),qq-1}
            diff_h_r_e(rr,qq) = diff_h_rz(l(LE_to_TE_2(ee),rr),1);
            diff_h_z_e(rr,qq) = diff_h_rz(l(LE_to_TE_2(ee),rr),2);
        end
    end
    %Finding the derivatives of the determinant of the associated
    %triangular element
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *Tmat2{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *Tmat2{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    %Zeroing the derivatives of r' = \partial_\eta r and 
    %z' = \partial_\eta z with respect to the spine lengths at each 
    %Gaussian quadrature point
    diff_h_r_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    %Zeroing the derivative of the determinant of the Jacobian of 
    %the isoparametric map at each Gaussian quadrature point
    diff_h_det_Jle = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        %Finding the r' = \partial_\eta r and z' = \partial_\eta z 
        %at each Gaussian quadrature point
        r_prime_lGaussian(pp) = (phi2_eta_lG(:,pp)')*(r_le-min_r_le);
        z_prime_lGaussian(pp) = (phi2_eta_lG(:,pp)')*(z_le-min_z_le);
        normaliser = max(abs(r_prime_lGaussian(pp)), ...
                         abs(z_prime_lGaussian(pp)));
        r_prime_lGaussian_aux = r_prime_lGaussian(pp)/normaliser;
        z_prime_lGaussian_aux = z_prime_lGaussian(pp)/normaliser;
        %Finding the determinant of the Jacobian 
        %of the isoparametric map at each Gaussian quadrature point
        det_Jle(pp) = sqrt(  r_prime_lGaussian_aux^2 ...
                           + z_prime_lGaussian_aux^2 ...
                          ) ...
                      *normaliser;
        det_Je(pp) = (r_e'-min_r_e)*Tmat2{pp}*(z_e-min_z_e);
        %Finding the coordinates with respect to the contact line
        %and the tangent plane to the solid to introduce in the
        %expression of the eigensolution
%         r_pp = (r_le'-Nodes_rz(1,1))*phi2_lG(:,pp);
%         z_pp = (z_le'-Nodes_rz(1,2))*phi2_lG(:,pp);
%         %Data for eigensolution
%         theta_pol = atan2(z_pp,r_pp);
%         phi_pp = pi - theta_m - theta_pol;
%         theta_pp = lambda_eig*phi_pp;
%         c_theta_pp = cos(theta_pp);
%         s_theta_pp = sin(theta_pp);
%         divider = max(abs(r_pp),abs(z_pp));
%         r_pp_div = r_pp/divider;
%         z_pp_div = z_pp/divider;
%         rho_l = sqrt(r_pp_div^2+z_pp_div^2);
%         rho_l = rho_l*divider;
%         rho_l_minus2_pp = rho_l^(lambda_eig-2);
%         rho_l_minus4_pp = rho_l^(lambda_eig-4);
%         rho_l_minus6_pp = rho_l^(lambda_eig-6);
%         ln_rho2_pp = 2*log(rho_l);
%         % Find the values of u_check at the Gaussian sampling 
%         %points
%         u_check(pp) = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of w_check at the Gaussian sampling 
%         %points
%         w_check(pp) = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of dr_u_check at the Gaussian sampling 
%         %points
%         dr_u_check(pp) = dr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_u_check at the Gaussian sampling 
%         %points
%         dz_u_check(pp) = dz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_u_check(pp) ...
%             = dlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of dr_w_check at the Gaussian sampling 
%         %points
%         dr_w_check(pp) = dr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_w_check at the Gaussian sampling 
%         %points
%         dz_w_check(pp) = dz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_w_check(pp) ...
%             = dlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of drr_u_check at the Gaussian sampling 
%         %points
%         drr_u_check(pp) = drr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_u_check at the Gaussian sampling 
%         %points
%         drz_u_check(pp) = drz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_u_check at the Gaussian sampling 
%         %points
%         dzz_u_check(pp) = dzz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_u_check at the Gaussian 
%         %sampling points
%         drlambda_eig_u_check(pp) ...
%             = drlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dzlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_u_check(pp) ...
%             = dzlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp); 
%         % Find the values of drr_w_check at the Gaussian sampling 
%         %points
%         drr_w_check(pp) = drr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_w_check at the Gaussian sampling 
%         %points
%         drz_w_check(pp) = drz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_w_check at the Gaussian sampling 
%         %points
%         dzz_w_check(pp) = dzz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_w_check at the Gaussian 
%         %sampling points
%         drlambda_eig_w_check(pp) ...
%             = drlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);  
%         %Find the values of dzlambda_eig_w_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_w_check(pp) ...
%             = dzlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_u_check(pp) ...
%             = dphi_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_w_check(pp) ...
%             = dphi_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_u_check(pp) ...
%             = drphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_u_check(pp) ...
%             = dzphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_w_check(pp) ...
%             = drphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_w_check(pp) ...
%             = dzphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
        for qq = 1:n_s_e
            %Finding the derivatives of r' = \partial_\eta r and 
            %z' = \partial_\eta z with respect to the spine lengths
            %at each Gaussian quadrature point
            diff_h_r_prime_lGaussian(pp,qq) ...
                = (phi2_eta_lG(:,pp)')*diff_h_r_le(:,qq);
            diff_h_z_prime_lGaussian(pp,qq) ...
                = (phi2_eta_lG(:,pp)')*diff_h_z_le(:,qq);
            %Finding the derivative of the determinant of the 
            %Jacobian of the isoparametric map at each Gaussian 
            %quadrature point
            diff_h_det_Jle(pp,qq) ...
                = (  r_prime_lGaussian(pp) ...
                     *diff_h_r_prime_lGaussian(pp,qq) ...
                   + z_prime_lGaussian(pp) ...
                     *diff_h_z_prime_lGaussian(pp,qq)) ...
                  /det_Jle(pp);
        end
    end
    %Finding integral quantities and their derivatives with respect
    %to each of the spine lengths
    for ii = 1:3 %looping over local nodes to find the contribution
        %to momentum and impermeability residuals 
        %
%         %Zeroing variables needed to calculate derivatives of Mr_i
%         %with respect to A
%         d_itrtrchu = 0;
%         d_itrtzchw = 0;
%         d_inrdrchu = 0;
%         d_inzdrchw = 0;
%         %Zeroing variables needed to calculate derivatives of Mz_i
%         %with respect to A
%         d_itrtzchu = 0;
%         d_itztzchw = 0;
%         d_inrdzchu = 0;
%         d_inzdzchw = 0;
%         %Zeroing variables needed to calculate the derivatives of
%         %S2_i with respect to A
%         d_itrchu = 0;
%         d_itzchw = 0;
%         %Zeroing variables needed to calculate derivatives of E2_i
%         %with respect to A
%         d_inrchu = 0;
%         d_inzchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %Mr_i with respect to theta_m
%         diff_theta_m_d_itrtrchu = 0;
%         diff_theta_m_d_itrtzchw = 0;
%         diff_theta_m_d_inrdrchu = 0;
%         diff_theta_m_d_inzdrchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %Mz_i with respect to theta_m
%         diff_theta_m_d_itrtzchu = 0;
%         diff_theta_m_d_itztzchw = 0;
%         diff_theta_m_d_inrdzchu = 0;
%         diff_theta_m_d_inzdzchw = 0; 
%         %Zeroing variables needed to calculate the derivatives of
%         %S2_i with respect to theta_m
%         diff_theta_m_d_itrchu = 0;
%         diff_theta_m_d_itzchw = 0;
%         %Zeroing variables needed to calculate the derivatives of
%         %E2_i with respect to theta_m
%         diff_theta_m_d_inrchu = 0;
%         diff_theta_m_d_inzchw = 0;
%         %Zeroing variables needed to calculate the derivative of
%         %Mr_i with respect to h_q
%         diff_h_d_itrtrchu = zeros(1,n_s_e);
%         diff_h_d_itrtzchw = zeros(1,n_s_e);
%         diff_h_d_inrdrchu = zeros(1,n_s_e);
%         diff_h_d_inzdrchw = zeros(1,n_s_e);
%         %Zeroing variables needed to calculate the derivative of
%         %Mz_i with respect to h_q
%         diff_h_d_itrtzchu = zeros(1,n_s_e);
%         diff_h_d_itztzchw = zeros(1,n_s_e);
%         diff_h_d_inrdzchu = zeros(1,n_s_e);
%         diff_h_d_inzdzchw = zeros(1,n_s_e);
%         %Zeroing variables needed to calculate the derivaives of
%         %S2_i with respect to h_q
%         diff_h_d_itrchu = zeros(1,n_s_e);
%         diff_h_d_itzchw = zeros(1,n_s_e);
        %Zeroing variables needed to calculate the derivatives of 
        %E2_i with respect to h_q
        diff_h_d_i = zeros(1,n_s_e);
%         diff_h_d_inrchu = zeros(1,n_s_e);
%         diff_h_d_inzchw = zeros(1,n_s_e);
        for pp = 1:n_lGaussian_Q
%             %Variables needed to calculate derivatives of Mr_i
%             %with respect to A
%             d_itrtrchu = ...
%                 d_itrtrchu ...
%                 + W_lG(pp) ...
%                   *phi2_lG(ii,pp) ...
%                   *r_prime_lGaussian(pp) ...
%                   *r_prime_lGaussian(pp) ...
%                   *u_check(pp) ...
%                   /det_Jle(pp);
%             d_itrtzchw ...
%                 = d_itrtzchw ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *w_check(pp) ...
%                     /det_Jle(pp);
%             d_inrdrchu ...
%                 = d_inrdrchu ...
%                   - alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...                    
%                     *dr_u_check(pp);
%             d_inzdrchw ...
%                 = d_inzdrchw ...
%                   + alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...                    
%                     *dr_w_check(pp);
%             %Variables needed to calculate derivatives of Mz_i
%             %with respect to A
%             d_itrtzchu = ...
%                 d_itrtzchu ...
%                 + W_lG(pp) ...
%                   *phi2_lG(ii,pp) ...
%                   *r_prime_lGaussian(pp) ...
%                   *z_prime_lGaussian(pp) ...
%                   *u_check(pp) ...
%                   /det_Jle(pp);
%             d_itztzchw = ...
%                 d_itztzchw ...
%                 + W_lG(pp) ...
%                   *phi2_lG(ii,pp) ...
%                   *z_prime_lGaussian(pp) ...
%                   *z_prime_lGaussian(pp) ...
%                   *w_check(pp) ...
%                   /det_Jle(pp);
%             d_inrdzchu ...
%                 = d_inrdzchu ...
%                   - alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...                    
%                     *dz_u_check(pp);
%             d_inzdzchw ...
%                 = d_inzdzchw ...
%                   + alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...                    
%                     *dz_w_check(pp);
%             %Variables needed to calculate the derivatives of
%             %S2_i with respect to A
%             d_itrchu ...
%                 = d_itrchu ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *u_check(pp);
%             d_itzchw ...
%                 = d_itzchw ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *w_check(pp);
%             %Variables needed to calculate derivatives of E2_i
%             %with respect to A    
%             d_inrchu = d_inrchu ...
%                        - alpha_2 ...
%                          *W_lG(pp) ...
%                          *phi2_lG(ii,pp) ...
%                          *z_prime_lGaussian(pp) ...
%                          *u_check(pp) ...
%                          *det_Jle(pp);
%             d_inzchw = d_inzchw ...
%                        + alpha_2 ...
%                          *W_lG(pp) ...
%                          *phi2_lG(ii,pp) ...
%                          *r_prime_lGaussian(pp) ...
%                          *w_check(pp) ...
%                          *det_Jle(pp);
%             %Variables needed to calculate the derivatives of Mr_i
%             %with respect to theta_m
%             diff_theta_m_d_itrtrchu ...
%                 = diff_theta_m_d_itrtrchu ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     /det_Jle(pp);
%             diff_theta_m_d_itrtzchw ...
%                 = diff_theta_m_d_itrtzchw ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     /det_Jle(pp);
%             diff_theta_m_d_inrdrchu ...
%                 = diff_theta_m_d_inrdrchu ...
%                   - alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...                    
%                     *(  drlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_u_check(pp) ...
%                      );
%             diff_theta_m_d_inzdrchw ...
%                 = diff_theta_m_d_inzdrchw ...
%                   + alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...                    
%                     *(  drlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_w_check(pp) ...
%                      );
%             %Variables needed to calculate the derivative of
%             %Mz_i with respect to theta_m
%             diff_theta_m_d_itrtzchu ...
%                 = diff_theta_m_d_itrtzchu ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     /det_Jle(pp);
%             diff_theta_m_d_itztzchw ...
%                 = diff_theta_m_d_itztzchw ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     /det_Jle(pp); 
%             diff_theta_m_d_inrdzchu ...
%                 = diff_theta_m_d_inrdzchu ...
%                   - alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...                    
%                     *(  dzlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_u_check(pp) ...
%                      );
%             diff_theta_m_d_inzdzchw ...
%                 = diff_theta_m_d_inzdzchw ...
%                   + alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...                    
%                     *(  dzlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_w_check(pp) ...
%                      ); 
%             %Variables needed to calculate the derivatives of
%             %S2_i with respect to theta_m
%             diff_theta_m_d_itrchu ...
%                 = diff_theta_m_d_itrchu ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      );
%             diff_theta_m_d_itzchw ...
%                 = diff_theta_m_d_itzchw ...
%                   + W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      );
%             %Variables needed to calculate the derivatives of
%             %E2_i with respect to theta_m
%             diff_theta_m_d_inrchu ...
%                 = diff_theta_m_d_inrchu ...
%                   - alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     *det_Jle(pp);
%             diff_theta_m_d_inzchw ...
%                 = diff_theta_m_d_inzchw ...
%                   + alpha_2 ...
%                     *W_lG(pp) ...
%                     *phi2_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     *det_Jle(pp);
            for qq = 1:n_s_e
%                 %Variables needed to calculate the derivative of
%                 %Mr_i with respect to h_q
%                 diff_h_d_itrtrchu(qq) ...
%                     = diff_h_d_itrtrchu(qq) ...
%                       + 2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       - W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *u_check(pp) ...
%                         *diff_h_det_Jle(pp,qq) ...
%                         /(det_Jle(pp)^2);
% %                               + W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 /det_Jle(pp) ...
%                 diff_h_d_itrtzchw(qq) ...
%                     = diff_h_d_itrtzchw(qq) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *z_prime_lGaussian(pp) ...
%                         *w_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       - W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *w_check(pp) ...
%                         *diff_h_det_Jle(pp,qq) ...
%                         /(det_Jle(pp)^2);
% %                               + W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 /det_Jle(pp) ...
%               diff_h_d_inrdrchu(qq) ...
%                   = diff_h_d_inrdrchu(qq) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *diff_h_z_prime_lGaussian(pp,qq) ...
%                       *dr_u_check(pp) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *z_prime_lGaussian(pp) ...
%                       *drr_u_check(pp) ...
%                       *(  diff_h_r_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,1) ...
%                        ) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *z_prime_lGaussian(pp) ...
%                       *drz_u_check(pp) ...
%                       *(  diff_h_z_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,2) ...
%                        ); 
%               diff_h_d_inzdrchw(qq) ...
%                   = diff_h_d_inzdrchw(qq) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *diff_h_r_prime_lGaussian(pp,qq) ...
%                       *dr_w_check(pp) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *r_prime_lGaussian(pp) ...
%                       *drr_w_check(pp) ...
%                       *(  diff_h_r_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,1) ...
%                        ) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *r_prime_lGaussian(pp) ...
%                       *drz_w_check(pp) ...
%                       *(  diff_h_z_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,2) ...
%                        ); 
%                 %Variables needed to calculate the derivative of
%                 %Mz_i with respect to h_q    
%                 diff_h_d_itrtzchu(qq) ...
%                     = diff_h_d_itrtzchu(qq) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *z_prime_lGaussian(pp) ...
%                         *u_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       - W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *u_check(pp) ...
%                         *diff_h_det_Jle(pp,qq) ...
%                         /(det_Jle(pp)^2);
% %                               + W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 /det_Jle(pp) ...
%                 diff_h_d_itztzchw(qq) ...
%                     = diff_h_d_itztzchw(qq) ...
%                       + 2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         /det_Jle(pp) ...
%                       - W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *w_check(pp) ...
%                         *diff_h_det_Jle(pp,qq) ...
%                         /(det_Jle(pp)^2);
% %                               + W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 /det_Jle(pp) ...
%               diff_h_d_inrdzchu(qq) ...
%                   = diff_h_d_inrdzchu(qq) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *diff_h_z_prime_lGaussian(pp,qq) ...
%                       *dz_u_check(pp) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *z_prime_lGaussian(pp) ...
%                       *drz_u_check(pp) ...
%                       *(  diff_h_r_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,1) ...
%                        ) ...
%                     - alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *z_prime_lGaussian(pp) ...
%                       *dzz_u_check(pp) ...
%                       *(  diff_h_z_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,2) ...
%                        ); 
%               diff_h_d_inzdzchw(qq) ...
%                   = diff_h_d_inzdzchw(qq) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *diff_h_r_prime_lGaussian(pp,qq) ...
%                       *dz_w_check(pp) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *r_prime_lGaussian(pp) ...
%                       *drz_w_check(pp) ...
%                       *(  diff_h_r_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,1) ...
%                        ) ...
%                     + alpha_2 ...
%                       *W_lG(pp) ...
%                       *phi2_lG(ii,pp) ...
%                       *r_prime_lGaussian(pp) ...
%                       *dzz_w_check(pp) ...
%                       *(  diff_h_z_le_lGaussian(pp,qq) ...
%                         - (qq==1)*diff_h0_rz(1,2) ...
%                        ); 
%                 %Variables needed to calculate the derivatives of
%                 %S2_i with respect to h_q
%                 diff_h_d_itrchu(qq) ...
%                     = diff_h_d_itrchu(qq) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                      %For wetting of a curved surface this will
%                      %require an extre term
%                 diff_h_d_itzchw(qq) ...
%                     = diff_h_d_itzchw(qq) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
%                      %For wetting of a curved surface this will
%                      %require an extre term
%                 %Zeroing variables needed to calculate derivatives 
%                 %of E2_i with respect to h_q
%                 diff_h_d_inrchu(qq) ...
%                     = diff_h_d_inrchu(qq) ...
%                       - alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *u_check(pp) ...
%                         *det_Jle(pp) ...
%                       - alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       - alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       - alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *u_check(pp) ...
%                         *diff_h_det_Jle(pp,qq);
% %                               - alpha_2 ...
% %                                 *W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Jle(pp) ...
%                 diff_h_d_inzchw(qq) ...
%                     = diff_h_d_inzchw(qq) ...
%                       + alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *w_check(pp) ...
%                         *det_Jle(pp) ...
%                       + alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       + alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       + alpha_2 ...
%                         *W_lG(pp) ...
%                         *phi2_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *w_check(pp) ...
%                         *diff_h_det_Jle(pp,qq);
% %                               + alpha_2 ...
% %                                 *W_lG(pp) ...
% %                                 *phi2_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *dlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig ...
% %                                 *det_Jle(pp) ...
                diff_h_d_i(qq) ...
                    = diff_h_d_i(qq) ...
                      + W_lG(pp) ...
                        *phi2_lG(ii,pp) ...
                        *diff_h_det_Jle(pp,qq);
            end
        end
%         % Adding contributions of derivatives of Mr_i with respect to h
%         % that come from derivatives with respect to theta_m
%         diff_h_Mr_near(l_2(ee,ii),S_1(1,:)) ...
%             = diff_h_Mr_near(l_2(ee,ii),S_1(1,:)) ...
%               + 2 ...
%                 *delta_t ...
%                 *A ...
%                 *(  (1+4*Be*Ca*Es) ...
%                     *(  diff_theta_m_d_itrtrchu ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_d_itrtzchw ...
%                         *diff_h_theta_m ...
%                      )...
%                     /(4*Ca*Es) ...
%                   - (  diff_theta_m_d_inrdrchu ... 
%                        *diff_h_theta_m ...
%                      + diff_theta_m_d_inzdrchw ...
%                        *diff_h_theta_m ...
%                     ) ...
%                  ) ...
%                 /3;
%         % Adding contributions of derivatives of Mz_i with respect to h 
%         %that come from derivatives with respect to theta_m
%         diff_h_Mz_near(l_2(ee,ii),S_1(1,:)) ...
%             = diff_h_Mz_near(l_2(ee,ii),S_1(1,:)) ...
%               + 2 ...
%                 *delta_t ...
%                 *A ...
%                 *(  (1+4*Be*Ca*Es) ...
%                     *(  diff_theta_m_d_itrtzchu ...
%                         *diff_h_theta_m ...
%                       + diff_theta_m_d_itztzchw ... 
%                         *diff_h_theta_m ...
%                      )...
%                     /(4*Ca*Es) ...
%                   - (  diff_theta_m_d_inrdzchu ... 
%                        *diff_h_theta_m ...
%                      + diff_theta_m_d_inzdzchw ... 
%                        *diff_h_theta_m ...
%                     ) ...
%                  ) ...
%                 /3;
%         %Contributions to the derivatives of S2_i with respect to h 
%         %that come from derivatives with respect to theta_m
%         diff_h_S2_near(l2_2(ee,ii),S_1(1,:)) ...
%             = diff_h_S2_near(l2_2(ee,ii),S_1(1,:)) ...
%               - A ...
%                 *(  diff_theta_m_d_itrchu ... 
%                     *diff_h_theta_m ...
%                   + diff_theta_m_d_itzchw ... 
%                     *diff_h_theta_m ...
%                  ) ...
%                 /2;
%         %Contributions to the derivatives of E2_i with respect to h 
%         %that come from derivatives with respet to theta_m
%         diff_h_E2_near(l2_2(ee,ii),S_1(1,:)) ...
%             = diff_h_E2_near(l2_2(ee,ii),S_1(1,:)) ...
%               + A ...
%                 *(  diff_theta_m_d_inrchu ... 
%                     *diff_h_theta_m ...
%                   + diff_theta_m_d_inzchw ... 
%                     *diff_h_theta_m ...
%                  );
%         %Contributions to the derivatives of Mr_i with respect to A
%         diff_A_Mr_near(l_2(ee,ii)) ...
%             = diff_A_Mr_near(l_2(ee,ii)) ...
%               + 2 ...
%                 *delta_t ...
%                 *(  (1+4*Be*Ca*Es) ...
%                     *(  d_itrtrchu ...
%                       + d_itrtzchw ...
%                      )...
%                     /(4*Ca*Es) ...
%                   - (  d_inrdrchu ...
%                      + d_inzdrchw ...
%                     ) ...
%                  ) ...
%                 /3;
%         %Contributions to the derivatives of Mr_i with respect to A
%         diff_A_Mz_near(l_2(ee,ii)) ...
%             = diff_A_Mz_near(l_2(ee,ii)) ...
%               + 2 ...
%                 *delta_t ...
%                 *(  (1+4*Be*Ca*Es) ...
%                     *(  d_itrtzchu ...
%                       + d_itztzchw ...
%                      )...
%                     /(4*Ca*Es) ...
%                   - (  d_inrdzchu ...
%                      + d_inzdzchw ...
%                     ) ...
%                  ) ...
%                 /3;
%         %Contributions to the derivatives of S2_i with respect to A
%         diff_A_S2_near(l2_2(ee,ii)) ...
%             = diff_A_S2_near(l2_2(ee,ii)) ...
%               -(  d_itrchu ...
%                 + d_itzchw ...
%                ) ...
%                /2;
%         %Contributions to the derivatives of E2_i with respect to A
%         diff_A_E2_near(l2_2(ee,ii)) ...
%             = diff_A_E2_near(l2_2(ee,ii)) ...
%               + d_inrchu ...
%               + d_inzchw;
%         %adding contributions that do not depend on jj to 
%         %derivatives with respect to spine lengths 
        for qq = 1:n_s_e
%             diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
%                 = diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
%                   + 2 ...
%                     *delta_t ...
%                     *A ...
%                     *(  (1+4*Be*Ca*Es) ...
%                         *(  diff_h_d_itrtrchu(qq) ...
%                           + diff_h_d_itrtzchw(qq) ...
%                          ) ...
%                         /(4*Ca*Es) ...
%                       - (  diff_h_d_inrdrchu(qq) ...
%                          + diff_h_d_inzdrchw(qq) ...
%                         ) ...
%                      ) ...
%                     /3;
%             diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
%                 = diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
%                   + 2 ...
%                     *delta_t ...
%                     *A ...
%                     *(  (1+4*Be*Ca*Es) ...
%                         *(  diff_h_d_itrtzchu(qq) ...
%                           + diff_h_d_itztzchw(qq) ...
%                          ) ...
%                         /(4*Ca*Es) ...
%                       - (  diff_h_d_inrdzchu(qq) ...
%                          + diff_h_d_inzdzchw(qq) ...
%                         ) ...
%                      ) ...
%                     /3;
%             diff_h_S2_near(l2_2(ee,ii),spines_e(qq)) ...
%                 = diff_h_S2_near(l2_2(ee,ii),spines_e(qq)) ...
%                   - A ...
%                     *(  diff_h_d_itrchu(qq) ...
%                       + diff_h_d_itzchw(qq) ...
%                      ) ...
%                     /2;
%             diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
%                 = diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
%                   + Fs ...
%                     *Ds ...
%                     *diff_h_d_i(qq);
%                 ...
%                   + A ...
%                     *(  diff_h_d_inrchu(qq) ...
%                       + diff_h_d_inzchw(qq) ...
%                      );
            diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                = diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                  - 2 ...
                    *delta_t ...
                    *Ds ...
                    *diff_h_d_i(qq) ...
                    /3;
        end
        for jj = 1:3%looping over local nodes to calculate inner 
            %product of basis function by basis function ii
            %
            %Zeroing variables needed to calculate the contribution 
            %to the derivative of Mr_i with respect to u_j
            d_ijtrtr = 0;
            %Zeroing variables needed to calculate the contribution 
            %to the derivative of Mr_i with respect to w_j
            d_ijtrtz = 0;
            %Zeroing variables needed to calculate the contribution 
            %to the derivative of Mr_i with respect to sigma2_j
            ds_ijtr = 0;
            %Zeroing variables needed to calculate the contribution
            %to the derivative of Mz_i with respect to w_j
            d_ijtztz = 0;
            %Zeroing variables needed to calculate the contribution 
            %to the derivative of Mr_i with respect to sigma2_j
            ds_ijtz = 0;
            %Zeroing variables needed to calculate the derivative
            %of S2_i with respect to u_bar_j
            d_ijtr = 0;
            %Zeroing variables needed to calculate the derivative
            %of S2_i with respect to w_bar_j
            d_ijtz = 0;
            %Zeroing variables needed to calculate the derivatives
            %of S2_i with respect to sigma2
            ds_ji = 0;
            %Zeroing variables needed to calculate the contribution
            %to the derivative of I_i with respect to u_j
            d_ijnr = 0;
            %Zeroing variables needed to calculate the contribution
            %to the derivative of I_i with respect to w_j
            d_ijnz = 0;
            %Zeroing variables needed to calculate the
            %contributions to the drivatives of E2_i with respect
            %to rhos2_j
            d_ij  = 0;
            %Zeroing variables needed to calculate the contribution
            %to the derivative of Mr_i with respect to h_q
            diff_h_d_ijtrtr = zeros(1,n_s_e);
            diff_h_d_ijtrtz = zeros(1,n_s_e);
            diff_h_ds_ijtr = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the contribution
            %to the derivative of Mz_i with respect to h_q
            diff_h_d_ijtztz = zeros(1,n_s_e);
            diff_h_ds_ijtz = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the contribution
            %to the derivative of S2_i with respect to h_q
            diff_h_d_ijtr = zeros(1,n_s_e);
            diff_h_d_ijtz = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the contribution
            %to the derivative of I_i with respect to h_q
            diff_h_d_ijnr = zeros(1,n_s_e);
            diff_h_d_ijnz = zeros(1,n_s_e);
            %Zeroing variables that we needed to add to calculate
            %the derivatives of E2_i with respect to h
            diff_h_d_ij = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                %Variables needed to calculate the contribution to 
                %the derivative of Mr_i with respect to u_j
                d_ijtrtr = d_ijtrtr ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *r_prime_lGaussian(pp) ...
                             *r_prime_lGaussian(pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the contribution to 
                %the derivative of Mr_i with respect to w_j
                d_ijtrtz = d_ijtrtz ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *r_prime_lGaussian(pp) ...
                             *z_prime_lGaussian(pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the contribution to 
                %the derivative of Mz_i with respect to w_j
                d_ijtztz = d_ijtztz ...
                           + W_lG(pp) ...
                             *z_prime_lGaussian(pp) ...
                             *z_prime_lGaussian(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the contribution to 
                %the derivative of Mr_i with respect to sigma2_j
                ds_ijtr = ds_ijtr ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_eta_lG(jj,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                %Variables needed to calculate the contribution to 
                %the derivative of Mz_i with respect to sigma2_j
                ds_ijtz = ds_ijtz ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_eta_lG(jj,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);   
                %Variables needed to calculate the contribution to 
                %the derivative of S2_i 
                d_ijtr   = d_ijtr ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *r_prime_lGaussian(pp);
                d_ijtz   = d_ijtz ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *z_prime_lGaussian(pp);
                ds_ji    = ds_ji ...
                           + W_lG(pp) ...
                             *phi2_lG(jj,pp) ...
                             *phi2_eta_lG(ii,pp);
                %Variables needed to calculate the derivatives of
                %I_i
                d_ijnr   = d_ijnr ...
                           - alpha_2 ...
                             *W_lG(pp) ...
                             *z_prime_lGaussian(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp);
                d_ijnz   = d_ijnz ...
                           + alpha_2 ...
                             *W_lG(pp) ...
                             *r_prime_lGaussian(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp);
                %Variables needed to calculate the derivatives of
                %E2_i
                d_ij = d_ij ...
                       + W_lG(pp) ...
                         *phi2_lG(ii,pp) ...
                         *phi2_lG(jj,pp) ...
                         *det_Jle(pp);
                for qq = 1:n_s_e
                    %Variables needed for derivatives of Mr_i with
                    %respect to h_q
                    diff_h_d_ijtrtr(qq) ...
                        = diff_h_d_ijtrtr(qq) ...
                          + 2 ...
                            *W_lG(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    diff_h_d_ijtrtz(qq) ...
                        = diff_h_d_ijtrtz(qq) ...
                          + W_lG(pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            *z_prime_lGaussian(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            /det_Jle(pp) ...
                          + W_lG(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *z_prime_lGaussian(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                   diff_h_ds_ijtr(qq) ...
                       = diff_h_ds_ijtr(qq) ...
                         + W_lG(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_eta_lG(jj,pp) ...
                           *diff_h_r_prime_lGaussian(pp,qq) ...
                           /det_Jle(pp) ...
                         - W_lG(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_eta_lG(jj,pp) ...
                           *r_prime_lGaussian(pp) ...
                           *diff_h_det_Jle(pp,qq) ...
                           /(det_Jle(pp)^2);
                   %Variables needed for derivatives of Mz_i with
                   %respect to h_q
                   diff_h_d_ijtztz(qq) ...
                       = diff_h_d_ijtztz(qq) ...
                         + 2 ...
                           *W_lG(pp) ...
                           *z_prime_lGaussian(pp) ...
                           *diff_h_z_prime_lGaussian(pp,qq) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_lG(jj,pp) ...
                           /det_Jle(pp) ...
                         - W_lG(pp) ...
                           *z_prime_lGaussian(pp) ...
                           *z_prime_lGaussian(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_lG(jj,pp) ...
                           *diff_h_det_Jle(pp,qq) ...
                           /(det_Jle(pp)^2);
                   diff_h_ds_ijtz(qq) ...
                       = diff_h_ds_ijtz(qq) ...
                         + W_lG(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_eta_lG(jj,pp) ...
                           *diff_h_z_prime_lGaussian(pp,qq) ...
                           /det_Jle(pp) ...
                         - W_lG(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_eta_lG(jj,pp) ...
                           *z_prime_lGaussian(pp) ...
                           *diff_h_det_Jle(pp,qq) ...
                           /(det_Jle(pp)^2);
                    %Variables needed for derivatives of S2_i with
                    %respect to h_q
                    diff_h_d_ijtr(qq) ...
                        = diff_h_d_ijtr(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq); 
                    diff_h_d_ijtz(qq) ...
                        = diff_h_d_ijtz(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp);
                    %Variables needed for derivatives of E2_i with
                    %respect to h_q   
                    diff_h_d_ijnr(qq) ...
                        = diff_h_d_ijnr(qq) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp);
                    diff_h_d_ijnz(qq) ...
                        = diff_h_d_ijnz(qq) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp);
                    diff_h_d_ij(qq) ...
                        = diff_h_d_ij(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq);
                end
            end
            %Jacobian contributions
            diff_u_bar_Mr_near(l_2(ee,ii),l_2(ee,jj)) ...
                = diff_u_bar_Mr_near(l_2(ee,ii),l_2(ee,jj))... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtrtr ...
                    /(6*Ca*Es);
            diff_w_bar_Mr_near(l_2(ee,ii),l_2(ee,jj)) ...
                = diff_w_bar_Mr_near(l_2(ee,ii),l_2(ee,jj))... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtrtz ...
                    /(6*Ca*Es);
            diff_u_bar_Mz_near(l_2(ee,ii),l_2(ee,jj)) ...
                = diff_u_bar_Mz_near(l_2(ee,ii),l_2(ee,jj))... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtrtz ...
                    /(6*Ca*Es);
            diff_w_bar_Mz_near(l_2(ee,ii),l_2(ee,jj)) ...
                = diff_w_bar_Mz_near(l_2(ee,ii),l_2(ee,jj))... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtztz ...
                    /(6*Ca*Es);
            diff_lambda2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_lambda2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *d_ijnr ...
                    /3;
            diff_lambda2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_lambda2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  + 2 ...
                    *delta_t ...
                    *d_ijnz ...
                    /3;
            diff_us2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_us2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  - delta_t ...
                    *d_ijtrtr ...
                    /(3*Ca*Es);
            diff_ws2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_ws2_near_Mr_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  - delta_t ...
                    *d_ijtrtz ...
                    /(3*Ca*Es);
            diff_us2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_us2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  - delta_t ...
                    *d_ijtrtz ...
                    /(3*Ca*Es);
            diff_ws2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                = diff_ws2_near_Mz_near(l_2(ee,ii),l2_2(ee,jj)) ...
                  - delta_t ...
                    *d_ijtztz ...
                    /(3*Ca*Es);
            diff_u_bar_S2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                = diff_u_bar_S2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                  - d_ijtr/2;
            diff_w_bar_S2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                = diff_w_bar_S2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                  - d_ijtz/2;
            diff_us2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_us2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ijtr;
            diff_ws2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_ws2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ijtz;
            diff_sigma2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_sigma2_S2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + Es ...
                    *ds_ji;
            diff_us2_I_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_us2_I_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ijnr;
            diff_ws2_I_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_ws2_I_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ijnz;
            diff_u_bar_E2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                = diff_u_bar_E2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                  + d_ijnr;
            diff_w_bar_E2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                = diff_w_bar_E2_near(l2_2(ee,ii),l_2(ee,jj)) ...
                  + d_ijnz;
            diff_us2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_us2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  - d_ijnr;
            diff_ws2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_ws2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  - d_ijnz;
            diff_rhos2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_rhos2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ij ...
                    *2 ...
                    *Ls ...
                    /3;
%                   - Fs ...
%                     *d_ij;
            diff_rhos2_D2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                = diff_rhos2_D2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                  + d_ij ...
                    *(  2 ...
                        *delta_t ...
                        /3 ...
                      + 2 ...
                        *Ts ...
                        /3 ...
                     );
            for qq = 1:n_s_e
                diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
                 = diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
                   + 2 ...
                     *delta_t ...
                     *lambda2(l2_2(ee,jj)) ...
                     *diff_h_d_ijnr(qq) ...
                     /3 ...
                   + (1+4*Be*Ca*Es) ...
                     *delta_t ...
                     *(  u_bar(l_2(ee,jj)) ...
                         *diff_h_d_ijtrtr(qq) ...
                       + w_bar(l_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                      ) ...
                     /(6*Ca*Es) ...
                   + (1-4*Be*Ca*Es) ...
                     *delta_t ...
                     *(  u_s(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtr(qq) ...
                       + w_s(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                      ) ...
                     /(6*Ca*Es) ...
                   - delta_t ...
                     *(  us2(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtr(qq) ...
                       + ws2(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                      ) ...
                     /(3*Ca*Es);
                diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
                 = diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
                   + 2 ...
                     *delta_t ...
                     *lambda2(l2_2(ee,jj)) ...
                     *diff_h_d_ijnz(qq) ...
                     /3 ...
                   + (1+4*Be*Ca*Es) ...
                     *delta_t ...
                     *(  u_bar(l_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                       + w_bar(l_2(ee,jj)) ...
                         *diff_h_d_ijtztz(qq) ...
                      ) ...
                     /(6*Ca*Es) ...
                   + (1-4*Be*Ca*Es) ...
                     *delta_t ...
                     *(  u_s(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                       + w_s(l2_2(ee,jj)) ...
                         *diff_h_d_ijtztz(qq) ...
                      ) ...
                     /(6*Ca*Es) ...
                   - delta_t ...
                     *(  us2(l2_2(ee,jj)) ...
                         *diff_h_d_ijtrtz(qq) ...
                       + ws2(l2_2(ee,jj)) ...
                         *diff_h_d_ijtztz(qq) ...
                      ) ...
                     /(3*Ca*Es);
                diff_h_S2_near(l2_2(ee,ii),spines_e(qq)) ...
                    = diff_h_S2_near(l2_2(ee,ii),spines_e(qq)) ...
                      + diff_h_d_ijtr(qq) ...
                        *(  us2(l2_2(ee,jj)) ...
                          - u_bar(l_2(ee,jj))/2 ...
                          - u_s(l2_2(ee,jj))/2 ...
                         ) ...
                      + diff_h_d_ijtz(qq) ...
                        *(  ws2(l2_2(ee,jj)) ...
                          - w_bar(l_2(ee,jj))/2 ...
                          - w_s(l2_2(ee,jj))/2 ...
                         );
                diff_h_I_near(l2_2(ee,ii),spines_e(qq)) ...
                 = diff_h_I_near(l2_2(ee,ii),spines_e(qq)) ...
                   + diff_h_d_ijnr(qq) ...
                     *(  us2(l2_2(ee,jj)) ...
                       - u_s(l2_2(ee,jj)) ...
                      ) ...
                   + diff_h_d_ijnz(qq) ...
                     *(  ws2(l2_2(ee,jj)) ...
                       - w_s(l2_2(ee,jj)) ...
                      );
                diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
                    = diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
                      + diff_h_d_ijnr(qq) ...
                        *(  u_bar(l_2(ee,jj)) ...
                          - us2( l2_2(ee,jj)) ...
                         ) ...
                      + diff_h_d_ijnz(qq) ...
                        *(  w_bar(l_2(ee,jj)) ...
                          - ws2( l2_2(ee,jj)) ...
                         ) ...
                      + diff_h_d_ij(qq) ...
                        *Ls ...
                        *(  2*rhos2(l2_2(ee,jj))/3 ...
                          - 2*rhos2_minus1(l2_2(ee,jj))/3 ...
                         );   
%                       - Fs ...
%                         *rhos2(l2_2(ee,jj)) ...
%                         *diff_h_d_ij(qq);
                diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                    = diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                      + diff_h_d_ij(qq) ...
                        *(  2 ...
                            *delta_t ...
                            *rhos2(l2_2(ee,jj)) ...
                            /3 ...
                          + Ts ...
                            *(  2*rhos2(l2_2(ee,jj))/3 ...
                              - 2*rhos2_minus1(l2_2(ee,jj))/3 ...
                             ) ...
                         );   
            end
            for kk = 1:3
                ds_jkitr = 0;
                ds_jkitz = 0;
                ds_ijktr = 0;
                ds_ijktz = 0;
                diff_h_ds_jkitr = zeros(1,n_s_e);
                diff_h_ds_jkitz = zeros(1,n_s_e);
                diff_h_ds_ijktr = zeros(1,n_s_e);
                diff_h_ds_ijktz = zeros(1,n_s_e);
                for pp = 1:n_lGaussian_Q
                    ds_jkitr ...
                        = ds_jkitr ...
                          + W_lG(pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_lG(kk,pp) ...
                            *phi2_eta_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    ds_jkitz ...
                        = ds_jkitz ...
                          + W_lG(pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_lG(kk,pp) ...
                            *phi2_eta_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    ds_ijktr ...
                        = ds_ijktr ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_eta_lG(kk,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    ds_ijktz ...
                        = ds_ijktz ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_eta_lG(kk,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    for qq = 1:n_s_e
                        diff_h_ds_jkitr(qq) ...
                            = diff_h_ds_jkitr(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_ds_jkitz(qq) ...
                            = diff_h_ds_jkitz(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_ds_ijktr(qq) ...
                            = diff_h_ds_ijktr(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_ds_ijktz(qq) ...
                            = diff_h_ds_ijktz(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                    end
                end 
                diff_rhos2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                    = diff_rhos2_E2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                      + Ls ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us2(l2_2(ee,kk)) ...
                                *ds_jkitr ...
                              + ws2(l2_2(ee,kk)) ...
                                *ds_jkitz ...
                             ) ...
                            /3 ...
                          + (  ds_jkitr + ds_ijktr)...
                            *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                             ) ...
                          + (  ds_jkitz + ds_ijktz)...
                            *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_rhos2_D2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                    = diff_rhos2_D2_near(l2_2(ee,ii),l2_2(ee,jj)) ...
                      + Ts ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us2(l2_2(ee,kk)) ...
                                *ds_jkitr ...
                              + ws2(l2_2(ee,kk)) ...
                                *ds_jkitz ...
                             ) ...
                            /3 ...
                          + (  ds_jkitr + ds_ijktr)...
                            *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                             ) ...
                          + (  ds_jkitz + ds_ijktz)...
                            *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_us2_E2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                    = diff_us2_E2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Ls ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitr ...
                        /3;
                diff_us2_D2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                    = diff_us2_D2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Ts ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitr ...
                        /3;
                diff_ws2_E2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                    = diff_ws2_E2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Ls ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitz ...
                        /3;    
                diff_ws2_D2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                    = diff_ws2_D2_near(l2_2(ee,ii),l2_2(ee,kk)) ...
                      - 2 ...
                        *delta_t ...
                        *Ts ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitz ...
                        /3;     
                for qq = 1:n_s_e
                    diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
                        = diff_h_E2_near(l2_2(ee,ii),spines_e(qq)) ...
                          + Ls ...
                            *rhos2(l2_2(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitr(qq) ...
                                  + ws2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *ds_jkitr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_jkitr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_jkitz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                             );
                    diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                        = diff_h_D2_near(l2_2(ee,ii),spines_e(qq)) ...
                          + Ts ...
                            *rhos2(l2_2(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitr(qq) ...
                                  + ws2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *ds_jkitr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_jkitr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_jkitz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                             );
                end                           
            end
        end
        for jj = 1:6
            dr_ijnr = 0;
            dr_ijnz = 0;
            dz_ijnr = 0;
            dz_ijnz = 0;
            diff_h_dr_ijnr = zeros(1,n_s_e);
            diff_h_dr_ijnz = zeros(1,n_s_e);
            diff_h_dz_ijnr = zeros(1,n_s_e);
            diff_h_dz_ijnz = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                dr_ijnr = dr_ijnr ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                dr_ijnz = dr_ijnz ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                dz_ijnr = dz_ijnr ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                dz_ijnz = dz_ijnz ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                for qq = 1:n_s_e
                    diff_h_dr_ijnr(qq) ...
                        = diff_h_dr_ijnr(qq) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_dr_ijnz(qq) ...
                        = diff_h_dr_ijnz(qq) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_dz_ijnr(qq) ...
                        = diff_h_dz_ijnr(qq) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_dz_ijnz(qq) ...
                        = diff_h_dz_ijnz(qq) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                end
            end
            diff_u_bar_Mr_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                = diff_u_bar_Mr_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *dr_ijnr ...
                    /3;
            diff_w_bar_Mr_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                = diff_w_bar_Mr_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *dr_ijnz ...
                    /3;
            diff_u_bar_Mz_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                = diff_u_bar_Mz_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *dz_ijnr ...
                    /3;
            diff_w_bar_Mz_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                = diff_w_bar_Mz_near(l_2(ee,ii),l(LE_to_TE_2(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *dz_ijnz ...
                    /3;
            for qq = 1:n_s_e
                diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
                    = diff_h_Mr_near(l_2(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_bar(l(LE_to_TE_2(ee),jj)) ...
                            *diff_h_dr_ijnr(qq) ...
                          + w_bar(l(LE_to_TE_2(ee),jj)) ...
                            *diff_h_dr_ijnz(qq) ...
                         ) ...
                        /3;
                diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
                    = diff_h_Mz_near(l_2(ee,ii),spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_bar(l(LE_to_TE_2(ee),jj)) ...
                            *diff_h_dz_ijnr(qq) ...
                          + w_bar(l(LE_to_TE_2(ee),jj)) ...
                            *diff_h_dz_ijnz(qq) ...
                         ) ... 
                        /3; 
            end
        end
    end
end

%Contact line contribtion to S2
diff_sigma2_S2_near(c2,c2)  ...
    = diff_sigma2_S2_near(c2,c2) ...
      + Es;

%Adding the separatrix boundary contributions to the Jacobian of
%the momentum eqns in the near field
for ee = 1:n4_el%looping over line-elements
    %Finding line element node cooerdinates
    r_le = Nodes_rz(l_4(ee,:),1);
    z_le = Nodes_rz(l_4(ee,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    r_e = Nodes_rz(l(LE_to_TE_4(ee),:),1);
    z_e = Nodes_rz(l(LE_to_TE_4(ee),:),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %number of spines whose size affects this line element
    n_s_e = 1+length(S_4(ee,:));
    n_s_eT = 1+length(S(LE_to_TE_4(ee),:));
    %Finding the numbers of the spines whose lengths affect the shape
    %of the element
    spines_e = [1,S_4(ee,:)];
    spines_eT = [1,S(LE_to_TE_4(ee),:)];
    %Finding derivatives of the nodal positions with respect to the
    %spine lengths
    diff_h_r_le = zeros(3,n_s_e);
    diff_h_z_le = zeros(3,n_s_e);
    diff_h_r_le(:,1) = diff_h0_rz(l_4(ee,:),1);
    diff_h_z_le(:,1) = diff_h0_rz(l_4(ee,:),2);
    for qq = 2:n_s_e
        for rr = el4_s_loc_nodes{ee,qq-1}
            diff_h_r_le(rr,qq) = diff_h_rz(l_4(ee,rr),1);
            diff_h_z_le(rr,qq) = diff_h_rz(l_4(ee,rr),2);
        end
    end
    diff_h_r_le_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_le_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            diff_h_r_le_lGaussian(pp,qq) ...
                = (diff_h_r_le(:,qq)')*phi4_lG(:,pp);
            diff_h_z_le_lGaussian(pp,qq) ...
                = (diff_h_z_le(:,qq)')*phi4_lG(:,pp);
        end
    end
    %Finding derivatives of the nodal position of the associated triangular
    %element
    diff_h_r_e = zeros(6,n_s_eT);
    diff_h_z_e = zeros(6,n_s_eT);
    diff_h_r_e(:,1) = diff_h0_rz(l(LE_to_TE_4(ee),:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(LE_to_TE_4(ee),:),2);
    for qq = 2:n_s_eT
        for rr = el_s_loc_nodes{LE_to_TE_4(ee),qq-1}
            diff_h_r_e(rr,qq) = diff_h_rz(l(LE_to_TE_4(ee),rr),1);
            diff_h_z_e(rr,qq) = diff_h_rz(l(LE_to_TE_4(ee),rr),2);
        end
    end
    %Finding the derivatives of the determinant of the associated
    %triangular element
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_eT
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *Tmat4{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *Tmat4{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    %Zeroing the derivatives of r' = \partial_\xi r and 
    %z' = \partial_\xi z with respect to the spine lengths at each 
    %Gaussian quadrature point
    diff_h_r_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    %Zeroing the derivatives of the determinant of the Jacobian of 
    %the isoparametric map with respect to each spine length at 
    %each Gaussian quadrature point
    diff_h_det_Jle = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        %Finding r' = \partial_\xi r and z' = \partial_\xi z at
        %each Gaussian quadrature point
        r_prime_lGaussian(pp) = (phi4_xi_lG(:,pp)')*(r_le-min_r_le);
        z_prime_lGaussian(pp) = (phi4_xi_lG(:,pp)')*(z_le-min_z_le);
        normaliser = max(abs(r_prime_lGaussian(pp)), ...
                         abs(z_prime_lGaussian(pp)));
        r_prime_lGaussian_aux = r_prime_lGaussian(pp)/normaliser;
        z_prime_lGaussian_aux = z_prime_lGaussian(pp)/normaliser;
        %Finding the determinant of the Jacobian of the 
        %isoparametric map at each Gaussian quadrature point
        det_Jle(pp) = sqrt(  r_prime_lGaussian_aux^2 ...
                           + z_prime_lGaussian_aux^2 ...
                          ) ...
                      *normaliser;
        det_Je(pp) = (r_e'-min_r_e)*Tmat4{pp}*(z_e-min_z_e);
        %Finding the coordinates with respect to the contact line
        %and the tangent plane to the solid to introduce in the
        %expression of the eigensolution
%         r_pp = (r_le'-Nodes_rz(1,1))*phi4_lG(:,pp);
%         z_pp = (z_le'-Nodes_rz(1,2))*phi4_lG(:,pp);
%         %Data for eigensolution
%         theta_pol = atan2(z_pp,r_pp);
%         phi_pp = pi - theta_m - theta_pol;
%         theta_pp = lambda_eig*phi_pp;
%         c_theta_pp = cos(theta_pp);
%         s_theta_pp = sin(theta_pp);
%         divider = max(abs(r_pp),abs(z_pp));
%         r_pp_div = r_pp/divider;
%         z_pp_div = z_pp/divider;
%         rho_l = sqrt(r_pp_div^2+z_pp_div^2);
%         rho_l = rho_l*divider;
%         rho_l_minus2_pp = rho_l^(lambda_eig-2);
%         rho_l_minus4_pp = rho_l^(lambda_eig-4);
%         rho_l_minus6_pp = rho_l^(lambda_eig-6);
%         ln_rho2_pp = 2*log(rho_l);
%         % Find the values of u_check at the Gaussian sampling 
%         %points
%         u_check(pp) = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of w_check at the Gaussian sampling 
%         %points
%         w_check(pp) = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                     rho_l_minus2_pp,c_theta_pp, ...
%                                     s_theta_pp);
%         % Find the values of dr_u_check at the Gaussian sampling 
%         %points
%         dr_u_check(pp) = dr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_u_check at the Gaussian sampling 
%         %points
%         dz_u_check(pp) = dz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_u_check(pp) ...
%             = dlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of dr_w_check at the Gaussian sampling 
%         %points
%         dr_w_check(pp) = dr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         % Find the values of dz_w_check at the Gaussian sampling 
%         %points
%         dz_w_check(pp) = dz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                           rho_l_minus2_pp, ...
%                                           rho_l_minus4_pp, ...
%                                           c_theta_pp,s_theta_pp);
%         %Find the values of dlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dlambda_eig_w_check(pp) ...
%             = dlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                         rho_l_minus2_pp, ...
%                                         c_theta_pp,s_theta_pp, ...
%                                         ln_rho2_pp,phi_pp);
%         % Find the values of drr_u_check at the Gaussian sampling 
%         %points
%         drr_u_check(pp) = drr_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_u_check at the Gaussian sampling 
%         %points
%         drz_u_check(pp) = drz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_u_check at the Gaussian sampling 
%         %points
%         dzz_u_check(pp) = dzz_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_u_check at the Gaussian 
%         %sampling points
%         drlambda_eig_u_check(pp) ...
%             = drlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dzlambda_eig_u_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_u_check(pp) ...
%             = dzlambdaeig_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp); 
%         % Find the values of drr_w_check at the Gaussian sampling 
%         %points
%         drr_w_check(pp) = drr_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of drz_w_check at the Gaussian sampling 
%         %points
%         drz_w_check(pp) = drz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         % Find the values of dzz_w_check at the Gaussian sampling 
%         %points
%         dzz_w_check(pp) = dzz_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                             rho_l_minus4_pp, ...
%                                             rho_l_minus6_pp, ...
%                                             c_theta_pp,s_theta_pp);
%         %Find the values of drlambda_eig_w_check at the Gaussian 
%         %sampling points
%         drlambda_eig_w_check(pp) ...
%             = drlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);  
%         %Find the values of dzlambda_eig_w_check at the Gaussian 
%         %sampling points
%         dzlambda_eig_w_check(pp) ...
%             = dzlambdaeig_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                          rho_l_minus2_pp, ...
%                                          rho_l_minus4_pp, ...
%                                          c_theta_pp,s_theta_pp, ...
%                                          ln_rho2_pp,phi_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_u_check(pp) ...
%             = dphi_check_u_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %Find the values of dphi_u_check at the Gaussian sampling points
%         dphi_w_check(pp) ...
%             = dphi_check_w_of_rzl(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_u_check(pp) ...
%             = drphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_u_check(pp) ...
%             = dzphi_check_u_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         drphi_w_check(pp) ...
%             = drphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
%         %find the values of drphi_u_check at the Gausian sampling points
%         dzphi_w_check(pp) ...
%             = dzphi_check_w_of_rz(r_pp,z_pp,lambda_eig, ...
%                                   rho_l_minus2_pp, ...
%                                   rho_l_minus4_pp, ...
%                                   c_theta_pp,s_theta_pp);
        for qq = 1:n_s_e
            %Zeroing the derivatives of r' = \partial_\xi r and 
            %z' = \partial_\xi z with respect to the spine lengths 
            %at each Gaussian quadrature point
            diff_h_r_prime_lGaussian(pp,qq) ...
                = (phi4_xi_lG(:,pp)')*diff_h_r_le(:,qq);
            diff_h_z_prime_lGaussian(pp,qq) ...
                = (phi4_xi_lG(:,pp)')*diff_h_z_le(:,qq);
            %Finding the derivatives of the determinant of the 
            %Jacobian of the isoparametric map with respect to each 
            %spine length at each Gaussian quadrature point
            diff_h_det_Jle(pp,qq) ...
                = (  r_prime_lGaussian(pp) ...
                     *diff_h_r_prime_lGaussian(pp,qq) ...
                   + z_prime_lGaussian(pp) ...
                     *diff_h_z_prime_lGaussian(pp,qq) ...
                  ) ...
                  /det_Jle(pp);
        end
    end
    %Looping over local nodes to find the contribution to the 
    %respective eq
    for ii = 1:3 
%         %Zeroing variables needed to find the derivatives of Mr_i
%         %with respect to A
%         g_inrdrchu = 0;
% %         g_inzdzchu = 0;
%         g_inzdrchw = 0;
%         %Zeroing variables needed to find the derivatives of Mz_i
%         %with respect to A
%         g_inzdzchw = 0;
% %         g_inrdrchw = 0;
%         g_inrdzchu = 0;
%         %Zeroing variables needed for derivatives of Cu with respect to A
%         g_ichu = 0;
%         %Zeroing variables needed for derivatives of Cw with respect to A
%         g_ichw = 0;
%         %Zeroing variables needed to find the derivatives of Mr_i
%         %with respect to theta_m
%         diff_theta_m_g_inrdrchu = 0;
% %         diff_theta_m_g_inzdzchu = 0;
%         diff_theta_m_g_inzdrchw = 0;
%         %Zeroing variables needed to find the derivatives of Mz_i
%         %with respect to theta_m
%         diff_theta_m_g_inzdzchw = 0;
% %         diff_theta_m_g_inrdrchw = 0;
%         diff_theta_m_g_inrdzchu = 0;
%         %Zeroing variables needed to find the derivative of Cu with respect
%         %to theta_m
%         diff_theta_m_g_ichu = 0;
%         %Zeroing variables needed to find the derivative of Cw with respect
%         %to theta_m
%         diff_theta_m_g_ichw = 0;
%         %Zeroing variables needed to find the derivatives of Mr_i
%         %with respect to h_q
%         diff_h_g_inrdrchu = zeros(1,n_s_e);
% %         diff_h_g_inzdzchu = zeros(1,n_s_e);
%         diff_h_g_inzdrchw = zeros(1,n_s_e);
%         %Zeroing variables needed to find the derivatives of Mz_i
%         %with respect to h_q
%         diff_h_g_inzdzchw = zeros(1,n_s_e);
% %         diff_h_g_inrdrchw = zeros(1,n_s_e);
%         diff_h_g_inrdzchu = zeros(1,n_s_e);
%         %Zeroing variables needed to calculate the derivatives of Cu
%         %with respect to h
%         diff_h_g_ichu = zeros(1,n_s_e);
%         %Zeroing variables needed to calculate the derivatives of Cw
%         %with respect to h
%         diff_h_g_ichw = zeros(1,n_s_e);
        for pp = 1:n_lGaussian_Q
%             %Variables needed to find the derivatives of Mr_i
%             %with respect to A
%             g_inrdrchu = g_inrdrchu ...
%                          - alpha_4 ...
%                            *W_lG(pp) ...
%                            *phi4_lG(ii,pp) ...
%                            *z_prime_lGaussian(pp) ...
%                            *dr_u_check(pp);
%             g_inzdrchw = g_inzdrchw ...
%                          + alpha_4 ...
%                            *W_lG(pp) ...
%                            *phi4_lG(ii,pp) ...
%                            *r_prime_lGaussian(pp) ...
%                            *dr_w_check(pp);
%             %Variables needed to find the derivatives of Mz_i
%             %with respect to A
%             g_inzdzchw = g_inzdzchw ...
%                          + alpha_4 ...
%                            *W_lG(pp) ...
%                            *phi4_lG(ii,pp) ...
%                            *r_prime_lGaussian(pp) ...
%                            *dz_w_check(pp);
%             g_inrdzchu = g_inrdzchu ...
%                          - alpha_4 ...
%                            *W_lG(pp) ...
%                            *phi4_lG(ii,pp) ...
%                            *z_prime_lGaussian(pp) ...
%                            *dz_u_check(pp);
%             %Variables needed for the derivatives of Cu with respect
%             %to A
%             g_ichu = g_ichu ...
%                      + W_lG(pp) ...
%                        *phi4_lG(ii,pp) ...
%                        *u_check(pp) ...
%                        *det_Jle(pp);
%             %Variables needed for the derivatives of Cw with respect
%             %to A
%             g_ichw = g_ichw ...
%                      + W_lG(pp) ...
%                        *phi4_lG(ii,pp) ...
%                        *w_check(pp) ...
%                        *det_Jle(pp);
%             %Variables needed to find the derivatives of Mr_i
%             %with respect to theta_m
%             diff_theta_m_g_inrdrchu ...
%                 = diff_theta_m_g_inrdrchu ...
%                   - alpha_4 ...
%                     *W_lG(pp) ...
%                     *phi4_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  drlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_u_check(pp) ...
%                      );
%             diff_theta_m_g_inzdrchw ...
%                 = diff_theta_m_g_inzdrchw ...
%                   + alpha_4 ...
%                     *W_lG(pp) ...
%                     *phi4_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  drlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - drphi_w_check(pp) ...
%                      );
%             %Variables needed to find the derivatives of Mz_i
%             %with respect to theta_m
%             diff_theta_m_g_inzdzchw ...
%                 = diff_theta_m_g_inzdzchw ...
%                   + alpha_4 ...
%                     *W_lG(pp) ...
%                     *phi4_lG(ii,pp) ...
%                     *r_prime_lGaussian(pp) ...
%                     *(  dzlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_w_check(pp) ...
%                      );
%             diff_theta_m_g_inrdzchu ...
%                 = diff_theta_m_g_inrdzchu ...
%                   - alpha_4 ...
%                     *W_lG(pp) ...
%                     *phi4_lG(ii,pp) ...
%                     *z_prime_lGaussian(pp) ...
%                     *(  dzlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dzphi_u_check(pp) ...
%                      );
%             diff_theta_m_g_ichu ...
%                 = diff_theta_m_g_ichu ...
%                   + W_lG(pp) ...
%                     *phi4_lG(ii,pp) ...
%                     *(  dlambda_eig_u_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_u_check(pp) ...
%                      ) ...
%                     *det_Jle(pp);
%             diff_theta_m_g_ichw ...
%                 = diff_theta_m_g_ichw ...
%                   + W_lG(pp) ...
%                     *phi4_lG(ii,pp) ...
%                     *(  dlambda_eig_w_check(pp) ...
%                         *(-pi/(theta_m^2)) ...
%                       - dphi_w_check(pp) ...
%                      ) ...
%                     *det_Jle(pp);
            for qq = 1:n_s_e
%                 %Variables needed to find the derivatives of Mr_i
%                 %with respect to h_q
%                 diff_h_g_inrdrchu(qq) ...
%                     = diff_h_g_inrdrchu(qq) ...
%                       - alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *dr_u_check(pp) ...
%                       - alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *drr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               ...
% %                               - alpha_4 ...
% %                                 *W_lG(pp) ...
% %                                 *phi4_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *drlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig
%                 diff_h_g_inzdrchw(qq) ...
%                     = diff_h_g_inzdrchw(qq) ...
%                       + alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *dr_w_check(pp) ...
%                       + alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *drr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               ...
% %                               + alpha_4 ...
% %                                 *W_lG(pp) ...
% %                                 *phi4_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *drlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig
%                 %Variables needed to find the derivatives of Mz_i
%                 %with respect to h_q
%                 diff_h_g_inzdzchw(qq) ...
%                     = diff_h_g_inzdzchw(qq) ...
%                       + alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *diff_h_r_prime_lGaussian(pp,qq) ...
%                         *dz_w_check(pp) ...
%                       + alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *drz_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       + alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *r_prime_lGaussian(pp) ...
%                         *dzz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               ...
% %                               + alpha_4 ...
% %                                 *W_lG(pp) ...
% %                                 *phi4_lG(ii,pp) ...
% %                                 *r_prime_lGaussian(pp) ...
% %                                 *dzlambda_eig_w_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig
%                 diff_h_g_inrdzchu(qq) ...
%                     = diff_h_g_inrdzchu(qq) ...
%                       - alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *diff_h_z_prime_lGaussian(pp,qq) ...
%                         *dz_u_check(pp) ...
%                       - alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *drz_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                       - alpha_4 ...
%                         *W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *z_prime_lGaussian(pp) ...
%                         *dzz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          );
% %                               ...
% %                               - alpha_4 ...
% %                                 *W_lG(pp) ...
% %                                 *phi4_lG(ii,pp) ...
% %                                 *z_prime_lGaussian(pp) ...
% %                                 *dzlambda_eig_u_check(pp) ...
% %                                 *(qq == 1)*diff_h0_lambda_eig
%                 %Variables needed to calculate the derivative of Cu with
%                 %respect to h
%                 diff_h_g_ichu(qq) ...
%                     = diff_h_g_ichu(qq) ...
%                       + W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *dr_u_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *dz_u_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *u_check(pp) ...
%                         *diff_h_det_Jle(pp,qq);
%                 %Variables needed to calculate the derivative of Cw with
%                 %respect to h
%                 diff_h_g_ichw(qq) ...
%                     = diff_h_g_ichw(qq) ...
%                       + W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *dr_w_check(pp) ...
%                         *(  diff_h_r_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,1) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *dz_w_check(pp) ...
%                         *(  diff_h_z_le_lGaussian(pp,qq) ...
%                           - (qq==1)*diff_h0_rz(1,2) ...
%                          ) ...
%                         *det_Jle(pp) ...
%                       + W_lG(pp) ...
%                         *phi4_lG(ii,pp) ...
%                         *w_check(pp) ...
%                         *diff_h_det_Jle(pp,qq);
            end
        end
%         %Contributions to derivatives with respect to h that come from
%         %derivatives with respect to theta_m
%         diff_h_Mr_near(l_4(ee,ii),S_1(1,:)) ...
%             = diff_h_Mr_near(l_4(ee,ii),S_1(1,:)) ...
%               - 2 ...
%                 *delta_t ...
%                 *A ...
%                 *(  diff_theta_m_g_inrdrchu ... 
%                     *diff_h_theta_m ... 
%                   + diff_theta_m_g_inzdrchw ... 
%                     *diff_h_theta_m ...
%                  ) ...
%                 /3;
%         diff_h_Mz_near(l_4(ee,ii),S_1(1,:)) ...
%             = diff_h_Mz_near(l_4(ee,ii),S_1(1,:)) ...
%               - 2 ...
%                 *delta_t ...
%                 *A ...
%                 *(  diff_theta_m_g_inzdzchw ...
%                     *diff_h_theta_m ... 
%                   + diff_theta_m_g_inrdzchu ... 
%                     *diff_h_theta_m ...
%                  ) ...
%                 /3;
%         diff_h_Cu(l4_4(ee,ii),S_1(1,:)) ...
%             = diff_h_Cu(l4_4(ee,ii),S_1(1,:)) ...
%               - A ...
%                 *diff_theta_m_g_ichu ... 
%                 *diff_h_theta_m;
%         diff_h_Cw(l4_4(ee,ii),S_1(1,:)) ...
%             = diff_h_Cw(l4_4(ee,ii),S_1(1,:)) ...
%               - A ...
%                 *diff_theta_m_g_ichw ...
%                 *diff_h_theta_m;
%         %Contributions to derivatives with respect to A
%         diff_A_Mr_near(l_4(ee,ii)) ...
%             = diff_A_Mr_near(l_4(ee,ii)) ...
%               - 2 ...
%                 *delta_t ...
%                 *(  g_inrdrchu ... 
%                   + g_inzdrchw ...
%                  ) ...
%                 /3;
%         diff_A_Mz_near(l_4(ee,ii)) ...
%             = diff_A_Mz_near(l_4(ee,ii)) ...
%               - 2 ...
%                 *delta_t ...
%                 *(  g_inzdzchw ... 
%                   + g_inrdzchu ...
%                  ) ...
%                 /3;
%         diff_A_Cu(l4_4(ee,ii)) ...
%             = diff_A_Cu(l4_4(ee,ii)) ...
%               - g_ichu;
%         diff_A_Cw(l4_4(ee,ii)) ...
%             = diff_A_Cw(l4_4(ee,ii)) ...
%               - g_ichw;
        for qq = 1:n_s_e
%             diff_h_Mr_near(l_4(ee,ii),spines_e(qq)) ...
%                 = diff_h_Mr_near(l_4(ee,ii),spines_e(qq)) ...
%                   - 2 ...
%                     *delta_t ...
%                     *A ...
%                     *(  diff_h_g_inrdrchu(qq) ... 
%                       + diff_h_g_inzdrchw(qq) ...
%                      ) ...
%                     /3;
%              diff_h_Mz_near(l_4(ee,ii),spines_e(qq)) ...
%                 = diff_h_Mz_near(l_4(ee,ii),spines_e(qq)) ...
%                   - 2 ...
%                     *delta_t ...
%                     *A ...
%                     *(  diff_h_g_inzdzchw(qq) ... 
%                       + diff_h_g_inrdzchu(qq) ...
%                      ) ...
%                     /3;
%             diff_h_Cu(l4_4(ee,ii),spines_e(qq)) ...
%                 = diff_h_Cu(l4_4(ee,ii),spines_e(qq)) ...
%                   - A ...
%                     *diff_h_g_ichu(qq);
%             diff_h_Cw(l4_4(ee,ii),spines_e(qq)) ...
%                 = diff_h_Cw(l4_4(ee,ii),spines_e(qq)) ...
%                   - A ...
%                     *diff_h_g_ichw(qq);
        end
        %Looping over local nodes to calculate inner product of 
        %basis function jj by basis function ii
        for jj = 1:3
            %Zeroing variables needed to calculate the derivatives of Cu
            %and Cw with respect to u and w correspondingly
            g_ij = 0;
            %Zeroing variables needed to calculate the derivatives of Cu
            %and Cw with repect to h
            diff_h_g_ij = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                %Variables needed to calculate derivatives of Cu and Cw
                %with respect to u and w
                g_ij = g_ij ...
                       + W_lG(pp) ...
                         *phi4_lG(ii,pp) ...
                         *phi4_lG(jj,pp) ...
                         *det_Jle(pp);
                for qq = 1:n_s_e
                    diff_h_g_ij(qq) ...
                        = diff_h_g_ij(qq) ...
                          + W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *phi4_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq);        
                end
            end
            %Jacobian contributions
            diff_u_far_Cu(l4_4(ee,ii),l_4(ee,jj)-n_v_pre_start_far) ...
                = diff_u_far_Cu(l4_4(ee,ii),l_4(ee,jj)-n_v_pre_start_far) ...
                  + g_ij;
            diff_w_far_Cw(l4_4(ee,ii),l_4(ee,jj)-n_v_pre_start_far) ...
                = diff_w_far_Cw(l4_4(ee,ii),l_4(ee,jj)-n_v_pre_start_far) ...
                  + g_ij; 
            diff_u_bar_Cu(l4_4(ee,ii),l_4(ee,jj)) ...
                = diff_u_bar_Cu(l4_4(ee,ii),l_4(ee,jj)) ...
                  - g_ij;   
            diff_w_bar_Cw(l4_4(ee,ii),l_4(ee,jj)) ...
                = diff_w_bar_Cw(l4_4(ee,ii),l_4(ee,jj)) ...
                  - g_ij;               
            for qq = 1:n_s_e
                diff_h_Cu(l4_4(ee,ii),spines_e(qq)) ...
                    = diff_h_Cu(l4_4(ee,ii),spines_e(qq)) ...
                      + diff_h_g_ij(qq) ...
                        *(  u_far(l_4(ee,jj)-n_v_pre_start_far)...
                          - u_bar(l_4(ee,jj)) ...
                         );                
                diff_h_Cw(l4_4(ee,ii),spines_e(qq)) ...
                    = diff_h_Cw(l4_4(ee,ii),spines_e(qq)) ...
                      + diff_h_g_ij(qq) ...
                        *(  w_far(l_4(ee,jj)-n_v_pre_start_far)...
                          - w_bar(l_4(ee,jj)) ...
                         );
            end
        end
        for jj = 1:6
            gr_ijnr = 0;
            gr_ijnz = 0;
            gz_ijnr = 0;
            gz_ijnz = 0;
            diff_h_gr_ijnr = zeros(1,n_s_eT);
            diff_h_gr_ijnz = zeros(1,n_s_eT);
            diff_h_gz_ijnr = zeros(1,n_s_eT);
            diff_h_gz_ijnz = zeros(1,n_s_eT);
            for pp = 1:n_lGaussian_Q
                gr_ijnr = gr_ijnr ...
                          - alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                gr_ijnz = gr_ijnz ...
                          + alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                gz_ijnr = gz_ijnr ...
                          + alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                gz_ijnz = gz_ijnz ...
                          - alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                for qq = 1:n_s_eT
                    diff_h_gr_ijnr(qq) ...
                        = diff_h_gr_ijnr(qq) ...
                          - alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_gr_ijnz(qq) ...
                        = diff_h_gr_ijnz(qq) ...
                          + alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_gz_ijnr(qq) ...
                        = diff_h_gz_ijnr(qq) ...
                          + alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_gz_ijnz(qq) ...
                        = diff_h_gz_ijnz(qq) ...
                          - alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_4 ...
                            *W_lG(pp) ...
                            *phi4_lG(ii,pp) ...
                            *Tmat4{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    index = find(spines_e == spines_eT(qq));
                    if isempty(index) == 0
                        diff_h_gr_ijnr(qq) ...
                            = diff_h_gr_ijnr(qq) ...
                              - alpha_4 ...
                                *W_lG(pp) ...
                                *phi4_lG(ii,pp) ...
                                *Tmat4{pp}(jj,:)*(z_e-min_z_e) ...
                                *diff_h_z_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                        diff_h_gr_ijnz(qq) ...
                            = diff_h_gr_ijnz(qq) ...
                              + alpha_4 ...
                                *W_lG(pp) ...
                                *phi4_lG(ii,pp) ...
                                *Tmat4{pp}(jj,:)*(z_e-min_z_e) ...
                                *diff_h_r_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                        diff_h_gz_ijnr(qq) ...
                            = diff_h_gz_ijnr(qq) ...
                              + alpha_4 ...
                                *W_lG(pp) ...
                                *phi4_lG(ii,pp) ...
                                *Tmat4{pp}(jj,:)*(r_e-min_r_e) ...
                                *diff_h_z_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                        diff_h_gz_ijnz(qq) ...
                            = diff_h_gz_ijnz(qq) ...
                              - alpha_4 ...
                                *W_lG(pp) ...
                                *phi4_lG(ii,pp) ...
                                *Tmat4{pp}(jj,:)*(r_e-min_r_e) ...
                                *diff_h_r_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                    end
                end
            end
            diff_u_bar_Mr_near(l_4(ee,ii),l(LE_to_TE_4(ee),jj)) ...
                = diff_u_bar_Mr_near(l_4(ee,ii),l(LE_to_TE_4(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *gr_ijnr ...
                    /3;
            diff_w_bar_Mr_near(l_4(ee,ii),l(LE_to_TE_4(ee),jj)) ...
                = diff_w_bar_Mr_near(l_4(ee,ii),l(LE_to_TE_4(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *gr_ijnz ...
                    /3;
            diff_u_bar_Mz_near(l_4(ee,ii),l(LE_to_TE_4(ee),jj)) ...
                = diff_u_bar_Mz_near(l_4(ee,ii),l(LE_to_TE_4(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *gz_ijnr ...
                    /3;
            diff_w_bar_Mz_near(l_4(ee,ii),l(LE_to_TE_4(ee),jj)) ...
                = diff_w_bar_Mz_near(l_4(ee,ii),l(LE_to_TE_4(ee),jj)) ...
                  - 2 ...
                    *delta_t ...
                    *gz_ijnz ...
                    /3;
            for qq = 1:n_s_eT
                diff_h_Mr_near(l_4(ee,ii),spines_eT(qq)) ...
                    = diff_h_Mr_near(l_4(ee,ii),spines_eT(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_bar(l(LE_to_TE_4(ee),jj)) ...
                            *diff_h_gr_ijnr(qq) ...
                          + w_bar(l(LE_to_TE_4(ee),jj)) ...
                            *diff_h_gr_ijnz(qq) ...
                         ) ...
                        /3;
                diff_h_Mz_near(l_4(ee,ii),spines_eT(qq)) ...
                    = diff_h_Mz_near(l_4(ee,ii),spines_eT(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_bar(l(LE_to_TE_4(ee),jj)) ...
                            *diff_h_gz_ijnr(qq) ...
                          + w_bar(l(LE_to_TE_4(ee),jj)) ...
                            *diff_h_gz_ijnz(qq) ...
                         ) ...
                        /3; 
            end
        end
    end
end

%Far-field Jacobian contributions
%Bulk element contributions
for ee = n_el_near+1:n_el %go through every element
    %Findinding the r and z coordinates of the element's nodes
    r_e = Nodes_rz(l(ee,1:6),1);
    z_e = Nodes_rz(l(ee,1:6),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %Finding total number of spines whose size affects this element 
    %(the first spine for all plus the ones passing through the 
    %element)
    n_s_e = 1+length(S(ee,:));
    %Finding the numbers of the spines whose lengths affect the 
    %shape of the element
    spines_e = [n_spines_far+1,S(ee,:)-n_spines_pre_start_far];
    %Notice that above we are using the last column of this matrix
    %to store the derivatives with respect to the domain size, this
    %will then be removed from here and placed on the correct place
    %on the global matrix
    %Find the derivative of each of the nodal positions with 
    %respect to each of the spines that affect this particular 
    %element
    diff_h_r_e = zeros(6,n_s_e);
    diff_h_z_e = zeros(6,n_s_e);
    diff_h_r_e(:,1) = diff_h0_rz(l(ee,:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(ee,:),2);
    for qq = 1:n_s_e-1
        for rr = el_s_loc_nodes{ee,qq}
            diff_h_r_e(rr,qq+1) = diff_h_rz(l(ee,rr),1);
            diff_h_z_e(rr,qq+1) = diff_h_rz(l(ee,rr),2);
        end
    end
    % Finding the determinant of the Jacobian of the isoparametric
    %map and its derivative with respect to each spine length at 
    %each Gaussian quadrature point
%     det_Je = zeros(1,n_Gaussian_Q);
    diff_h_det_Je = zeros(n_Gaussian_Q,n_s_e);
    for pp = 1:n_Gaussian_Q
        det_Je(pp) = (r_e'-min_r_e)*T{pp}*(z_e-min_z_e);
        for qq = 1:n_s_e
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *T{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *T{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    for ii = 1:6 %select each basis function that has support on 
        %the chosen element
        diff_h_a_igr = zeros(1,n_s_e);
        diff_h_a_igz = zeros(1,n_s_e);
        for qq = 1:n_s_e
            for pp = 1:n_Gaussian_Q
                diff_h_a_igr(qq) ...
                    = diff_h_a_igr(qq) ...
                      + W_G(pp) ...
                        *gr ...
                        *phi_G(ii,pp) ...
                        *diff_h_det_Je(pp,qq);
                diff_h_a_igz(qq) ...
                    = diff_h_a_igz(qq) ...
                      + W_G(pp) ...
                        *gz...
                        *phi_G(ii,pp) ...
                        *diff_h_det_Je(pp,qq);
            end
            diff_h_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                          spines_e(qq)) ...
                = diff_h_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                                spines_e(qq)) ...
                  -2 ...
                   *delta_t ...
                   *St ...
                   *diff_h_a_igr(qq) ...
                   /3; 
            diff_h_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                          spines_e(qq)) ...
                = diff_h_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                                spines_e(qq)) ...
                  -2 ...
                   *delta_t ...
                   *St ...
                   *diff_h_a_igz(qq) ...
                   /3; 
        end
        for jj = 1:6 %compute product of basis function ii by the 
            %part of the solution that is supported on the element 
            %(for linear terms this is just the six hat functions 
            %on each node times its node value)
            a_ij = 0;
            diff_h_a_ij = zeros(1,n_s_e);
            arr_ij = 0;
            diff_h_arr_ij = zeros(1,n_s_e);
            arz_ij = 0;
            diff_h_arz_ij = zeros(1,n_s_e);
            azr_ij = 0;
            diff_h_azr_ij = zeros(1,n_s_e);
            azz_ij = 0;
            diff_h_azz_ij = zeros(1,n_s_e);
            for pp = 1:n_Gaussian_Q
                a_ij = a_ij ...
                       + W_G(pp) ...
                         *phi_G(ii,pp) ...
                         *phi_G(jj,pp) ...
                         *det_Je(pp);
                arr_ij = arr_ij ...
                         + W_G(pp) ...
                           *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                           *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                           /det_Je(pp);
                arz_ij = arz_ij ...
                         - W_G(pp) ...
                           *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                           *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                           /det_Je(pp);
                azr_ij = azr_ij ...
                         - W_G(pp) ...
                           *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                           *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                           /det_Je(pp);
                azz_ij = azz_ij ...
                         + W_G(pp) ...
                           *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                           *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                           /det_Je(pp);
                for qq = 1:n_s_e
                    diff_h_a_ij(qq) ...
                        = diff_h_a_ij(qq) ...
                          + W_G(pp) ...
                            *phi_G(ii,pp) ...
                            *phi_G(jj,pp) ...
                            *diff_h_det_Je(pp,qq);
                    diff_h_arr_ij(qq) ...
                        = diff_h_arr_ij(qq) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_z_e(:,qq)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*diff_h_z_e(:,qq)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_arz_ij(qq) ...
                        = diff_h_arz_ij(qq) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_z_e(:,qq)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*diff_h_r_e(:,qq)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(z_e-min_z_e)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_azr_ij(qq) ...
                        = diff_h_azr_ij(qq) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_r_e(:,qq)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*diff_h_z_e(:,qq)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*(z_e-min_z_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_azz_ij(qq) ...
                        = diff_h_azz_ij(qq) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*diff_h_r_e(:,qq)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            /det_Je(pp) ...
                          + W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*diff_h_r_e(:,qq)) ...
                            /det_Je(pp) ...
                          - W_G(pp) ...
                            *(T{pp}(ii,:)*(r_e-min_r_e)) ...
                            *(T{pp}(jj,:)*(r_e-min_r_e)) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                end
            end
            A_ij = 0;
            B_ij = 0;
            C_ij = 0;
            diff_h_A_ij = zeros(1,n_s_e);
            diff_h_B_ij = zeros(1,n_s_e);
            diff_h_C_ij = zeros(1,n_s_e);
            for kk = 1:6 %This second loop is needed because of 
                %the non-linearity of the convective term 
                ar_ikj = 0;
                diff_h_ar_ikj = zeros(1,n_s_e);
                az_ikj = 0;
                diff_h_az_ikj = zeros(1,n_s_e);
                for pp = 1:n_Gaussian_Q
                    ar_ikj = ar_ikj + W_G(pp) ...
                                      *phi_G(ii,pp) ...
                                      *phi_G(kk,pp) ...
                                      *(T{pp}(jj,:)*(z_e-min_z_e));
                    az_ikj = az_ikj - W_G(pp) ...
                                      *phi_G(ii,pp) ...
                                      *phi_G(kk,pp) ...
                                      *(T{pp}(jj,:)*(r_e-min_r_e));
                    for qq = 1:n_s_e
                        diff_h_ar_ikj(qq) ...
                            = diff_h_ar_ikj(qq) ...
                              + W_G(pp) ...
                                *phi_G(ii,pp) ...
                                *phi_G(kk,pp) ...
                                *(T{pp}(jj,:)*diff_h_z_e(:,qq));
                        diff_h_az_ikj(qq) ...
                            = diff_h_az_ikj(qq) ...
                              - W_G(pp) ...
                                *phi_G(ii,pp) ...
                                *phi_G(kk,pp) ...
                                *(T{pp}(jj,:)*diff_h_r_e(:,qq));
                    end
                end
                A_ij = A_ij ...
                       + ar_ikj ...
                         *u_far(l(ee,kk)-n_v_pre_start_far) ...
                       + az_ikj ...
                         *w_far(l(ee,kk)-n_v_pre_start_far);
                B_ij = B_ij ...
                       + ar_ikj ...
                         *( 2*Nodes_rz(l(ee,kk),1)/3 ...
                           -2*Nodes_rz_minus1(l(ee,kk),1)/3 ...
                          );
                C_ij = C_ij ...
                       + az_ikj ...
                         *( 2*Nodes_rz(l(ee,kk),2)/3 ...
                           -2*Nodes_rz_minus1(l(ee,kk),2)/3 ...
                          );
                for qq = 1:n_s_e
                    diff_h_A_ij(qq) ...
                        = diff_h_A_ij(qq) ...
                          + diff_h_ar_ikj(qq) ...
                            *u_far(l(ee,kk)-n_v_pre_start_far) ...
                          + diff_h_az_ikj(qq) ...
                            *w_far(l(ee,kk)-n_v_pre_start_far);
                    diff_h_B_ij(qq) ...
                        = diff_h_B_ij(qq) ...
                          + diff_h_ar_ikj(qq) ...
                            *( 2*Nodes_rz(l(ee,kk),1)/3 ...
                              -2*Nodes_rz_minus1(l(ee,kk),1)/3 ... 
                             ) ...
                          + 2 ...
                            *ar_ikj ...
                            *diff_h_r_e(kk,qq) ...
                            /3;
                    diff_h_C_ij(qq) ...
                        = diff_h_C_ij(qq) ...
                          + diff_h_az_ikj(qq) ...
                            *( 2*Nodes_rz(l(ee,kk),2)/3 ...
                              -2*Nodes_rz_minus1(l(ee,kk),2)/3 ... 
                             ) ...
                          + 2 ...
                            *az_ikj ...
                            *diff_h_z_e(kk,qq) ...
                            /3;
                end
                %Jacobian contributions
                diff_u_far_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                                  l(ee,kk)-n_v_pre_start_far) ...
                    = diff_u_far_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                                        l(ee,kk)-n_v_pre_start_far)...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *u_far(l(ee,jj)-n_v_pre_start_far) ...
                        *ar_ikj ...
                        /3;
                diff_w_far_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                                  l(ee,kk)-n_v_pre_start_far) ...
                    = diff_w_far_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                                        l(ee,kk)-n_v_pre_start_far)...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *u_far(l(ee,jj)-n_v_pre_start_far) ... 
                        *az_ikj ...
                        /3;
                diff_u_far_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                                  l(ee,kk)-n_v_pre_start_far) ...
                    = diff_u_far_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                                        l(ee,kk)-n_v_pre_start_far)...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *w_far(l(ee,jj)-n_v_pre_start_far) ...
                        *ar_ikj ...
                        /3;
                diff_w_far_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                                  l(ee,kk)-n_v_pre_start_far) ...
                    = diff_w_far_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                                        l(ee,kk)-n_v_pre_start_far)...
                      + 2 ...
                        *delta_t ...
                        *Re ...
                        *w_far(l(ee,jj)-n_v_pre_start_far) ...
                        *az_ikj ...
                        /3;
            end
            %Jacobian contributions
            diff_u_far_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                              l(ee,jj)-n_v_pre_start_far) ...
                = diff_u_far_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                                    l(ee,jj)-n_v_pre_start_far) ...
                  + 2 ...
                    *delta_t ...
                    *(  arr_ij ... % (*2)
                      + azz_ij ...
                     ) ...
                    /3 ...
                  + 2 ...
                    *Re ...
                    *a_ij ...
                    /3 ...
                  + Re ...
                    *(  2 ...
                        *delta_t ...
                        *A_ij ...
                        /3 ...
                      - B_ij ...
                      - C_ij ...
                     );
%             diff_w_far_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
%                               l(ee,jj)-n_v_pre_start_far) ...
%                 = diff_w_far_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
%                                     l(ee,jj)-n_v_pre_start_far) ... 
%                   + 2 ...
%                     *delta_t ...
%                     *azr_ij ...
%                     /3;
%             diff_u_far_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
%                               l(ee,jj)-n_v_pre_start_far) ...
%                 = diff_u_far_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
%                                     l(ee,jj)-n_v_pre_start_far) ...
%                   + 2 ...
%                     *delta_t ...
%                     *arz_ij ...
%                     /3;
            diff_w_far_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                              l(ee,jj)-n_v_pre_start_far) ...
                = diff_w_far_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                                    l(ee,jj)-n_v_pre_start_far) ...
                  + 2 ...
                    *delta_t ...
                    *(  azz_ij ... % (*2)
                      + arr_ij ...
                     ) ...
                    /3 ...
                  + 2 ...
                    *Re ...
                    *a_ij ...
                    /3 ...
                  + Re ...
                    *(  2 ...
                        *delta_t ...
                        *A_ij ...
                        /3 ...
                      - B_ij ...
                      - C_ij ...
                     );
            for qq = 1:n_s_e
                diff_h_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                                    spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(  u_far(l(ee,jj)-n_v_pre_start_far) ...
                            *(  diff_h_arr_ij(qq) ... % (*2)
                              + diff_h_azz_ij(qq) ...
                             ) ... % + w_far(l(ee,jj)-n_v_pre_start_far)*diff_h_azr_ij(qq) ...
                         ) ...
                        /3 ...
                      + Re ...
                        *diff_h_a_ij(qq) ...
                        *(  2*u_far(l(ee,jj)-n_v_pre_start_far)/3 ...
                          - 2*u_minus1(l(ee,jj))/3 ...
                         ) ...
                      + Re ...
                        *u_far(l(ee,jj)-n_v_pre_start_far) ...
                        *(  2 ...
                            *delta_t ...
                            *diff_h_A_ij(qq) ...
                            /3 ...
                          - diff_h_B_ij(qq) ...
                          - diff_h_C_ij(qq) ...
                         );
                diff_h_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                                    spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(  w_far(l(ee,jj)-n_v_pre_start_far) ...
                            *(  diff_h_azz_ij(qq) ... %(*2)
                              + diff_h_arr_ij(qq) ...
                             ) ... % + u_far(l(ee,jj)-n_v_pre_start_far)*diff_h_arz_ij(qq) ...
                         ) ...
                        /3 ...
                      + Re ...
                        *diff_h_a_ij(qq) ...
                        *(  2*w_far(l(ee,jj)-n_v_pre_start_far)/3 ...
                          - 2*w_minus1(l(ee,jj))/3 ...
                         ) ...
                      + Re ...
                        *w_far(l(ee,jj)-n_v_pre_start_far) ...
                        *(  2 ...
                            *delta_t ...
                            *diff_h_A_ij(qq) ...
                            /3 ...
                          - diff_h_B_ij(qq) ...
                          - diff_h_C_ij(qq) ...
                         );
            end
        end
        for jj = 1:3
            br_ji = 0;
            diff_h_br_ji = zeros(1,n_s_e);
            bz_ji = 0;
            diff_h_bz_ji = zeros(1,n_s_e);
            for pp = 1:n_Gaussian_Q
                br_ji = br_ji ...
                        + W_G(pp) ...
                          *psi_G(jj,pp) ...
                          *(T{pp}(ii,:)*(z_e-min_z_e));
                bz_ji = bz_ji ...
                        - W_G(pp) ...
                          *psi_G(jj,pp) ...
                          *(T{pp}(ii,:)*(r_e-min_r_e));
                for qq = 1:n_s_e
                    diff_h_br_ji(qq) ...
                        = diff_h_br_ji(qq) ...
                          + W_G(pp) ...
                            *psi_G(jj,pp) ...
                            *(T{pp}(ii,:)*diff_h_z_e(:,qq));
                    diff_h_bz_ji(qq) ...
                        = diff_h_bz_ji(qq) ...
                          - W_G(pp) ...
                            *psi_G(jj,pp) ...
                            *(T{pp}(ii,:)*diff_h_r_e(:,qq));
                end
            end
            %Jacobian contributions
            diff_p_far_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                              lp(ee,jj)-n_p_pre_start_far) ...
                = diff_p_far_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                                    lp(ee,jj)-n_p_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *br_ji ...
                    /3;
            diff_p_far_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                              lp(ee,jj)-n_p_pre_start_far) ...
                = diff_p_far_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                                    lp(ee,jj)-n_p_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *bz_ji ...
                    /3;
            diff_u_far_C_far(lp(ee,jj)-n_p_pre_start_far, ...
                             l(ee,ii)-n_v_pre_start_far) ...
                = diff_u_far_C_far(lp(ee,jj)-n_p_pre_start_far, ...
                                   l(ee,ii)-n_v_pre_start_far) ...
                  - br_ji;
            diff_w_far_C_far(lp(ee,jj)-n_p_pre_start_far, ...
                             l(ee,ii)-n_v_pre_start_far) ...
                = diff_w_far_C_far(lp(ee,jj)-n_p_pre_start_far, ...
                                   l(ee,ii)-n_v_pre_start_far) ...
                  - bz_ji;
            for qq = 1:n_s_e
                diff_h_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                              spines_e(qq)) ...
                 = diff_h_Mr_far(l(ee,ii)-n_v_pre_start_far, ...
                                 spines_e(qq)) ...
                   - 2 ...
                     *delta_t ...
                     *p(lp(ee,jj)) ...
                     *diff_h_br_ji(qq) ...
                     /3;
                diff_h_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                              spines_e(qq)) ...
                 = diff_h_Mz_far(l(ee,ii)-n_v_pre_start_far, ...
                                 spines_e(qq)) ...
                   - 2 ...
                     *delta_t ...
                     *p(lp(ee,jj)) ...
                     *diff_h_bz_ji(qq) ...
                     /3;
                diff_h_C_far(lp(ee,jj)-n_p_pre_start_far, ...
                             spines_e(qq)) ...
                 = diff_h_C_far(lp(ee,jj)-n_p_pre_start_far, ...
                                spines_e(qq)) ...
                   - u_far(l(ee,ii)-n_v_pre_start_far) ...
                     *diff_h_br_ji(qq) ...
                   - w_far(l(ee,ii)-n_v_pre_start_far) ...
                     *diff_h_bz_ji(qq);
            end
        end
    end
end

%Apex contributions
diff_sigma1_Mr_far(n_v_far,end) ...
    = diff_sigma1_Mr_far(n_v_far,end) ...
      + 2 ...
        *delta_t ...
        *(sin(theta_a)) ...
        /(3*Ca);
diff_sigma1_Mz_far(n_v_far,end) ...
    = diff_sigma1_Mz_far(n_v_far,end) ...
      + 2 ...
        *delta_t ...
        *(-cos(theta_a)) ...
        /(3*Ca);

%Far field free-surface Jacobian contributions
for ee = n1_el:-1:n1_el_near+1
    %Finding nodal positions for this line element
    r_le = Nodes_rz(l_1(ee,:),1);
    z_le = Nodes_rz(l_1(ee,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    r_e = Nodes_rz(l(LE_to_TE_1(ee),:),1);
    z_e = Nodes_rz(l(LE_to_TE_1(ee),:),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %Finding total number of spines whose size affects this line element
    n_s_e = 1+length(S_1(ee,:));
    %Finding the numbers of the spines whose lengths affect the shape
    %of the element
    spines_e = [n_spines_far+1,S_1(ee,:)-n_spines_pre_start_far];
    %Finding derivatives of the nodal positions with respect to the
    %spine legnths
    diff_h_r_le = zeros(3,n_s_e);
    diff_h_z_le = zeros(3,n_s_e);
    diff_h_r_le(:,1) = diff_h0_rz(l_1(ee,:),1);
    diff_h_z_le(:,1) = diff_h0_rz(l_1(ee,:),2);
    for qq = 2:n_s_e
        for rr = el1_s_loc_nodes(ee,qq-1)
            diff_h_r_le(rr,qq) = diff_h_rz(l_1(ee,rr),1);
            diff_h_z_le(rr,qq) = diff_h_rz(l_1(ee,rr),2);
        end
    end
    %Finding derivatives of the nodal position of the associated triangular
    %element
    diff_h_r_e = zeros(6,n_s_e);
    diff_h_z_e = zeros(6,n_s_e);
    diff_h_r_e(:,1) = diff_h0_rz(l(LE_to_TE_1(ee),:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(LE_to_TE_1(ee),:),2);
    for qq = 2:n_s_e
        for rr = el_s_loc_nodes{LE_to_TE_1(ee),qq-1}
            diff_h_r_e(rr,qq) = diff_h_rz(l(LE_to_TE_1(ee),rr),1);
            diff_h_z_e(rr,qq) = diff_h_rz(l(LE_to_TE_1(ee),rr),2);
        end
    end
    %Finding the derivatives of the determinant of the associated
    %triangular element
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *Tmat1{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *Tmat1{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    %Zeroing the derivatives of r' = \partial_\eta r and 
    %z' = \partial_\eta z with respect to the spine lengths at each
    %Gaussian quadrature point
    diff_h_r_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    %Zeroing the derivatives of the determinant of the Jacobian of 
    %the isoparametric map with respect to each spine length at 
    %each Gaussian quadrature point
    diff_h_det_Jle = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        %Finding the r' = \partial_\eta r and z' = \partial_\eta z 
        %at each Gaussian quadrature point
        r_prime_lGaussian(pp) = (phi1_xi_lG(:,pp)')*(r_le-min_r_le);
        z_prime_lGaussian(pp) = (phi1_xi_lG(:,pp)')*(z_le-min_z_le);
        normaliser = max(abs(r_prime_lGaussian(pp)), ...
                         abs(z_prime_lGaussian(pp)));
        r_prime_lGaussian_aux = r_prime_lGaussian(pp)/normaliser;
        z_prime_lGaussian_aux = z_prime_lGaussian(pp)/normaliser;
        %Finding the determinant of the Jacobian of the 
        %isoparametric map at each Gaussian quadrature point
        det_Jle(pp) = sqrt(  r_prime_lGaussian_aux^2 ...
                           + z_prime_lGaussian_aux^2 ...
                          ) ...
                      *normaliser;
        det_Je(pp) = (r_e'-min_r_e)*Tmat1{pp}*(z_e-min_z_e);
        for qq = 1:n_s_e
            %Finding the derivatives of r' = \partial_\eta r and 
            %z' = \partial_\eta z at each Gaussian 
            %quadrature point
            diff_h_r_prime_lGaussian(pp,qq) ...
                = (phi1_xi_lG(:,pp)')*diff_h_r_le(:,qq);
            diff_h_z_prime_lGaussian(pp,qq) ...
                = (phi1_xi_lG(:,pp)')*diff_h_z_le(:,qq);
            %Finding the derivatives of the determinant of the 
            %Jacobian of the isoparametric map at each Gaussian 
            %quadrature point
            diff_h_det_Jle(pp,qq) ...
                = (  r_prime_lGaussian(pp) ...
                     *diff_h_r_prime_lGaussian(pp,qq) ...
                   + z_prime_lGaussian(pp) ...
                     *diff_h_z_prime_lGaussian(pp,qq)) ...
                  /det_Jle(pp);
        end
    end
    for ii = 1:3 %looping over line-element nodes to find contribution 
        %to each equation
        %
        %Zeroing variables needed to calculate the derivatives of
        %E1_i with respect to h_q
        diff_h_c_i = zeros(1,n_s_e);
        for qq = 1:n_s_e
            for pp = 1:n_lGaussian_Q
                diff_h_c_i(qq) ...
                    = diff_h_c_i(qq) ...
                      + W_lG(pp) ...
                        *phi1_lG(ii,pp) ...
                        *diff_h_det_Jle(pp,qq);
            end
%             diff_h_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
%                           spines_e(qq)) ...
%                 = diff_h_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
%                                 spines_e(qq)) ...
%                   + Fg ...
%                     *Dg ...
%                     *diff_h_c_i(qq);
            diff_h_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                          spines_e(qq)) ...
                = diff_h_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                spines_e(qq)) ...
                  - 2 ...
                    *delta_t ...
                    *Dg ...
                    *diff_h_c_i(qq) ...
                    /3;
        end
        for jj = 1:3 %looping over line element nodes to find pair-wise
            %inner product of basis functions
            %Zeroing variables needed to calculate the derivatives
            %of Mr_i with respect to sigma_1
            cs_jitr = 0;
            %Zeroing variables needed to calculate the derivatives
            %of Mz_i with respect to sigma_1
            cs_jitz = 0;
            %Zeroing variables needed to calculate the derivatives
            %of S1_i with respect to u_far_q
            c_ijtr = 0;
            %Zeroing variables needed to calculate the derivatives
            %of S1_i with respect to w_far_q
            c_ijtz = 0;
            %Zeroing variables needed to calculate the derivatives
            %of S1_i with respect to sigma1_q
            cs_ji = 0;
            %Variables needed to calculate the derivatives of K_i
            %with respect to u_j
            c_ijnr = 0;
            %Variables needed to calculate the derivatives of K_i
            %with respect to u_j
            c_ijnz = 0;
            %Zeroing variables we needed to add to calculate the
            %derivatives of E1_i with respect to rhos1_q
            c_ij = 0;
            %
            %Zeroing variables needed to calculate the derivative 
            %of Mr_i with respect to h_q
            diff_h_cs_jitr = zeros(1,n_s_e);
            %Zeroing variables needed to calculate the derivative 
            %of Mz_i with respect to h_q
            diff_h_cs_jitz = zeros(1,n_s_e);
            %Variables need to calculate the derivatives of S1_i
            %with respect to h_q
            diff_h_c_ijtr = zeros(1,n_s_e);
            diff_h_c_ijtz = zeros(1,n_s_e);
            %Variables need to calculate the derivatives of K_i
            %with respect to h_q
            diff_h_c_ijnr = zeros(1,n_s_e);
            diff_h_c_ijnz = zeros(1,n_s_e);
            %Zeroing variables we needed to add to calculate the
            %derivatives of E1_i with respect to h_q
            diff_h_c_ij = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                %Variables needed to calculate the derivatives
                %of Mr_i with respect to sigma_1
                cs_jitr = cs_jitr ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                %Variables needed to calculate the derivatives
                %of Mz_i with respect to sigma_1
                cs_jitz = cs_jitz ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                %Variables needed to calculate the derivatives
                %of S1_i with respect to u_far_q
                c_ijtr = c_ijtr ...
                         + W_lG(pp) ...
                           *phi1_lG(ii,pp) ...
                           *phi1_lG(jj,pp) ...
                           *r_prime_lGaussian(pp);
                %Variables needed to calculate the derivatives
                %of S1_i with respect to w_far_q
                c_ijtz = c_ijtz ...
                         + W_lG(pp) ...
                           *phi1_lG(ii,pp) ...
                           *phi1_lG(jj,pp) ...
                           *z_prime_lGaussian(pp);
                %Variables needed to calculate the derivatives
                %of S1_i with respect to sigma1_q
                cs_ji = cs_ji ...
                        + W_lG(pp) ...
                          *phi1_lG(jj,pp) ...
                          *phi1_xi_lG(ii,pp);
                %Variables needed to calculate the derivatives of 
                %K_i with respect to u_j
                c_ijnr  = c_ijnr ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *z_prime_lGaussian(pp);
                %Variables needed to calculate the derivatives of 
                %K_i with respect to w_j
                c_ijnz  = c_ijnz ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *r_prime_lGaussian(pp);
                %Variables we needed to add to calculate the
                %derivatives of E1_i with respect to rhos1_q
                c_ij = c_ij ...
                       + W_lG(pp) ...
                         *phi1_lG(ii,pp) ...
                         *phi1_lG(jj,pp) ...
                         *det_Jle(pp);
                for qq = 1:n_s_e
                    %Variables needed to calculate the derivatives
                    %of Mr_i with respect to h
                    diff_h_cs_jitr(qq) ...
                        = diff_h_cs_jitr(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    %Variables needed to calculate the derivatives
                    %of Mz_i with respect to h
                    diff_h_cs_jitz(qq) ...
                        = diff_h_cs_jitz(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    %Variables need to calculate the derivatives of 
                    %S1_i with respect to h_q
                    diff_h_c_ijtr(qq) ...
                        = diff_h_c_ijtr(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq);
                    diff_h_c_ijtz(qq) ...
                        = diff_h_c_ijtz(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq);
                    %Variables need to calculate the derivatives of
                    %K_i with respect to h_q
                    diff_h_c_ijnr(qq) ...
                        = diff_h_c_ijnr(qq) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq);
                    diff_h_c_ijnz(qq) ...
                        = diff_h_c_ijnz(qq) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq);
                    %Variables need to calculate the derivatives of
                    %E1_i with respect to h_q
                    diff_h_c_ij(qq) ...
                        = diff_h_c_ij(qq) ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq);
                end
            end
            %Jacobian contributions
            %Mr
            diff_sigma1_Mr_far(l_1(ee,ii)-n_v_pre_start_far, ...
                               l1_1(ee,jj)-n_spines_pre_start_far) ...
                = diff_sigma1_Mr_far(l_1(ee,ii)-n_v_pre_start_far, ...
                                     l1_1(ee,jj)-n_spines_pre_start_far) ...
                  + 2 ...
                    *delta_t ...
                    *cs_jitr ...
                    /(3*Ca);
            %Mz
            diff_sigma1_Mz_far(l_1(ee,ii)-n_v_pre_start_far, ...
                               l1_1(ee,jj)-n_spines_pre_start_far) ...
                = diff_sigma1_Mz_far(l_1(ee,ii)-n_v_pre_start_far, ...
                                     l1_1(ee,jj)-n_spines_pre_start_far) ...
                  + 2 ...
                    *delta_t ...
                    *cs_jitz ...
                    /(3*Ca);
            %S1
            diff_u_far_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                              l_1(ee,jj)-n_v_pre_start_far) ...
                = diff_u_far_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                    l_1(ee,jj)-n_v_pre_start_far) ...
                  - c_ijtr;
            diff_w_far_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                              l_1(ee,jj)-n_v_pre_start_far) ...
                = diff_w_far_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                    l_1(ee,jj)-n_v_pre_start_far) ...
                  - c_ijtz;
            diff_us1_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                            l1_1(ee,jj)-n_spines_pre_start_far) ...
                = diff_us1_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                  l1_1(ee,jj)-n_spines_pre_start_far) ...
                  + c_ijtr;
            diff_ws1_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                            l1_1(ee,jj)-n_spines_pre_start_far) ...
                = diff_ws1_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                  l1_1(ee,jj)-n_spines_pre_start_far) ...
                  + c_ijtz;
            diff_sigma1_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                               l1_1(ee,jj)-n_spines_pre_start_far) ...
                = diff_sigma1_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                     l1_1(ee,jj)-n_spines_pre_start_far) ...
                  + (1+4*Eg*Bg) ...
                    *cs_ji ...
                    /(4*Bg);
            %K
            diff_us1_K_far(l1_1(ee,ii)-n_spines_near+1, ...
                           l1_1(ee,jj)-n_spines_near+1) ...
                = diff_us1_K_far(l1_1(ee,ii)-n_spines_near+1, ...
                                 l1_1(ee,jj)-n_spines_near+1) ...
                  + 2 ...
                    *delta_t ...
                    *c_ijnr ...
                    /3;
            diff_ws1_K_far(l1_1(ee,ii)-n_spines_near+1, ...
                           l1_1(ee,jj)-n_spines_near+1) ...
                = diff_ws1_K_far(l1_1(ee,ii)-n_spines_near+1, ...
                                 l1_1(ee,jj)-n_spines_near+1) ...
                  + 2 ...
                    *delta_t ...
                    *c_ijnz ...
                    /3;
            %E1
            diff_u_far_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                              l_1(ee,jj)-n_v_pre_start_far) ...
                = diff_u_far_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                    l_1(ee,jj)-n_v_pre_start_far) ...
                  + c_ijnr;
            diff_w_far_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                              l_1(ee,jj)-n_v_pre_start_far) ...
                = diff_w_far_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                    l_1(ee,jj)-n_v_pre_start_far) ...
                  + c_ijnz;
            diff_us1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                            l1_1(ee,jj)-n_spines_pre_start_far) ...
                = diff_us1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                  l1_1(ee,jj)-n_spines_pre_start_far) ...
                  - c_ijnr;
            diff_ws1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                            l1_1(ee,jj)-n_spines_pre_start_far) ...
                = diff_ws1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                  l1_1(ee,jj)-n_spines_pre_start_far) ...
                  - c_ijnz;
            diff_rhos1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                              l1_1(ee,jj)-n_spines_pre_start_far) ...
                = diff_rhos1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                    l1_1(ee,jj)-n_spines_pre_start_far) ...
                  + c_ij ...
                    *2 ...
                    *Lg ...
                    /3;
%                   -Fg*c_ij;
            %D1
            diff_rhos1_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                              l1_1(ee,jj)-n_spines_pre_start_far) ...
                = diff_rhos1_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                    l1_1(ee,jj)-n_spines_pre_start_far) ...
                  + c_ij ...
                    *(  2 ...
                        *delta_t ...
                        /3 ...
                      + 2 ...
                        *Tg ...
                        /3 ...
                     );
            for qq = 1:n_s_e
                %Mr
                diff_h_Mr_far(l_1(ee,ii)-n_v_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_Mr_far(l_1(ee,ii)-n_v_pre_start_far, ...
                                    spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(- pg(l1_1(ee,jj)) ...
                            *diff_h_c_ijnr(qq) ... % 
                          + sigma1(l1_1(ee,jj)) ...
                            *diff_h_cs_jitr(qq) ...
                            /Ca ...
                         ) ...  
                        /3;
                %Mz
                diff_h_Mz_far(l_1(ee,ii)-n_v_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_Mz_far(l_1(ee,ii)-n_v_pre_start_far, ...
                                    spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(- pg(l1_1(ee,jj)) ...
                            *diff_h_c_ijnz(qq) ... % 
                          + sigma1(l1_1(ee,jj)) ...
                            *diff_h_cs_jitz(qq) ...
                            /Ca ...
                         ) ...
                        /3;
                %S1
                diff_h_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_S1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                    spines_e(qq)) ...
                      + diff_h_c_ijtr(qq) ...
                        *(  us1(l1_1(ee,jj)) ...
                          - u_far(l_1(ee,jj)-n_v_pre_start_far) ...
                         ) ...
                      + diff_h_c_ijtz(qq) ...
                        *(  ws1(l1_1(ee,jj)) ...
                          - w_far(l_1(ee,jj)-n_v_pre_start_far) ...
                         );
                %K
                diff_h_K_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                             spines_e(qq)) ...
                    = diff_h_K_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                   spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *(  us1(l1_1(ee,jj)) ...
                            *diff_h_c_ijnr(qq) ...
                          + ws1(l1_1(ee,jj)) ...
                            *diff_h_c_ijnz(qq) ...
                         ) ...
                        /3 ...
                      - 2 ...
                        *c_ijnr ...
                        *diff_h_r_le(jj,qq) ...
                        /3 ...
                      - diff_h_c_ijnr(qq) ...
                        *(  2*Nodes_rz(l_1(ee,jj),1)/3 ...
                          - 2*Nodes_rz_minus1(l_1(ee,jj),1)/3 ...
                         ) ...
                      - 2 ...
                        *c_ijnz ...
                        *diff_h_z_le(jj,qq) ...
                        /3 ...
                      - diff_h_c_ijnz(qq) ...
                        *(  2*Nodes_rz(l_1(ee,jj),2)/3 ...
                          - 2*Nodes_rz_minus1(l_1(ee,jj),2)/3 ...
                         );
                %E1
                diff_h_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                    spines_e(qq)) ...
                      + diff_h_c_ijnr(qq) ...
                        *(  u_far(l_1(ee,jj)-n_v_pre_start_far) ...
                          - us1(l1_1(ee,jj)) ...
                         ) ...
                      + diff_h_c_ijnz(qq) ...
                        *(  w_far(l_1(ee,jj)-n_v_pre_start_far) ...
                          - ws1(l1_1(ee,jj)) ...
                         ) ...
                      + diff_h_c_ij(qq) ...
                        *Lg ...
                        *(  2*rhos1(l1_1(ee,jj))/3 ...
                          - 2*rhos1_minus1(l1_1(ee,jj))/3 ...
                         );
%                       - Fg ...
%                         *rhos1(l1_1(ee,jj)) ...
%                         *diff_h_c_ij(qq);
                %D1
                diff_h_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                    spines_e(qq)) ...
                      + diff_h_c_ij(qq) ...
                        *(  2 ...
                            *delta_t ...
                            *rhos1(l1_1(ee,jj)) ...
                            /3 ...
                          + Tg ...
                            *(  2*rhos1(l1_1(ee,jj))/3 ...
                              - 2*rhos1_minus1(l1_1(ee,jj))/3 ...
                             ) ...
                         );
            end
            for kk = 1:3
                %Zeroing variables needed to calculate the
                %derivatives of D1_i with respect to rhos1_q
                cs_jkitr = 0;
                cs_jkitz = 0;
                cs_ijktr = 0;
                cs_ijktz = 0;
                %Zeroing variables needed to calculate the
                %derivatives of D1_i with respect to h_q
                diff_h_cs_jkitr = zeros(1,n_s_e);
                diff_h_cs_jkitz = zeros(1,n_s_e);
                diff_h_cs_ijktr = zeros(1,n_s_e);
                diff_h_cs_ijktz = zeros(1,n_s_e);
                for pp = 1:n_lGaussian_Q
                    %Variables needed to calculate the
                    %derivatives of D1_i with respect to rhos1_q
                    cs_jkitr ...
                        = cs_jkitr ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_lG(kk,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    cs_jkitz ...
                        = cs_jkitz ...
                          + W_lG(pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_lG(kk,pp) ...
                            *phi1_xi_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    cs_ijktr ...
                        = cs_ijktr ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(kk,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    cs_ijktz ...
                        = cs_ijktz ...
                          + W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *phi1_lG(jj,pp) ...
                            *phi1_xi_lG(kk,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    for qq = 1:n_s_e
                        diff_h_cs_jkitr(qq) ...
                            = diff_h_cs_jkitr(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_cs_jkitz(qq) ...
                            = diff_h_cs_jkitz(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_lG(kk,pp) ...
                                *phi1_xi_lG(ii,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_cs_ijktr(qq) ...
                            = diff_h_cs_ijktr(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_cs_ijktz(qq) ...
                            = diff_h_cs_ijktz(qq) ...
                              + W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi1_lG(ii,pp) ...
                                *phi1_lG(jj,pp) ...
                                *phi1_xi_lG(kk,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                    end
                end
                diff_rhos1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                  l1_1(ee,jj)-n_spines_pre_start_far) ...
                    = diff_rhos1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                        l1_1(ee,jj)-n_spines_pre_start_far) ...
                      + Lg ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us1(l1_1(ee,kk)) ...
                                *cs_jkitr ...
                              + ws1(l1_1(ee,kk)) ...
                                *cs_jkitz ...
                             ) ...
                            /3 ...
                          + (  cs_jkitr + cs_ijktr)...
                            *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                             ) ...
                          + (  cs_jkitz + cs_ijktz)...
                            *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_rhos1_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                  l1_1(ee,jj)-n_spines_pre_start_far) ...
                    = diff_rhos1_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                        l1_1(ee,jj)-n_spines_pre_start_far) ...
                      + Tg ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us1(l1_1(ee,kk)) ...
                                *cs_jkitr ...
                              + ws1(l1_1(ee,kk)) ...
                                *cs_jkitz ...
                             ) ...
                            /3 ...
                          + (  cs_jkitr + cs_ijktr)...
                            *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                             ) ...
                          + (  cs_jkitz + cs_ijktz)...
                            *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_us1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                l1_1(ee,kk)-n_spines_pre_start_far) ...
                    = diff_us1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                      l1_1(ee,kk)-n_spines_pre_start_far) ...
                      - 2 ...
                        *delta_t ...
                        *Lg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitr ...
                        /3;
                diff_us1_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                l1_1(ee,kk)-n_spines_pre_start_far) ...
                    = diff_us1_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                      l1_1(ee,kk)-n_spines_pre_start_far) ...
                      - 2 ...
                        *delta_t ...
                        *Tg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitr ...
                        /3;
                diff_ws1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                l1_1(ee,kk)-n_spines_pre_start_far) ...
                    = diff_ws1_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                      l1_1(ee,kk)-n_spines_pre_start_far) ...
                      - 2 ...
                        *delta_t ...
                        *Lg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitz ...
                        /3;   
                diff_ws1_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                l1_1(ee,kk)-n_spines_pre_start_far) ...
                    = diff_ws1_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                      l1_1(ee,kk)-n_spines_pre_start_far) ...
                      - 2 ...
                        *delta_t ...
                        *Tg ...
                        *rhos1(l1_1(ee,jj)) ...
                        *cs_jkitz ...
                        /3;        
                for qq = 1:n_s_e
                    diff_h_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                  spines_e(qq)) ...
                        = diff_h_E1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                        spines_e(qq)) ...
                          + Lg ...
                            *rhos1(l1_1(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitr(qq) ...
                                  + ws1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *cs_jkitr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                             );
                    diff_h_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                  spines_e(qq)) ...
                        = diff_h_D1_far(l1_1(ee,ii)-n_spines_pre_start_far, ...
                                        spines_e(qq)) ...
                          + Tg ...
                            *rhos1(l1_1(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitr(qq) ...
                                  + ws1(l1_1(ee,kk)) ...
                                    *diff_h_cs_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *cs_jkitr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_jkitz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktr(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *cs_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_cs_ijktz(qq) ...
                                *(  2*Nodes_rz(l_1(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_1(ee,kk),2)/3 ...
                                 ) ...
                             );
                end                           
            end
        end
        for jj = 1:6
            cr_ijnr = 0;
            cr_ijnz = 0;
            cz_ijnr = 0;
            cz_ijnz = 0;
            diff_h_cr_ijnr = zeros(1,n_s_e);
            diff_h_cr_ijnz = zeros(1,n_s_e);
            diff_h_cz_ijnr = zeros(1,n_s_e);
            diff_h_cz_ijnz = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                cr_ijnr = cr_ijnr ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                cr_ijnz = cr_ijnz ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                cz_ijnr = cz_ijnr ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                cz_ijnz = cz_ijnz ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                for qq = 1:n_s_e
                    diff_h_cr_ijnr(qq) ...
                        = diff_h_cr_ijnr(qq) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_cr_ijnz(qq) ...
                        = diff_h_cr_ijnz(qq) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_cz_ijnr(qq) ...
                        = diff_h_cz_ijnr(qq) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_cz_ijnz(qq) ...
                        = diff_h_cz_ijnz(qq) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_1 ...
                            *W_lG(pp) ...
                            *phi1_lG(ii,pp) ...
                            *Tmat1{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                end
            end
            diff_u_far_Mr_far(l_1(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                = diff_u_far_Mr_far(l_1(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *cr_ijnr ...
                    /3;
            diff_w_far_Mr_far(l_1(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                = diff_w_far_Mr_far(l_1(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *cr_ijnz ...
                    /3;
            diff_u_far_Mz_far(l_1(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                = diff_u_far_Mz_far(l_1(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *cz_ijnr ...
                    /3;
            diff_w_far_Mz_far(l_1(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                = diff_w_far_Mz_far(l_1(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *cz_ijnz ...
                    /3;
            for qq = 1:n_s_e
                diff_h_Mr_far(l_1(ee,ii)-n_v_pre_start_far,spines_e(qq)) ...
                    = diff_h_Mr_far(l_1(ee,ii)-n_v_pre_start_far,spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_far(l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_cr_ijnr(qq) ...
                          + w_far(l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_cr_ijnz(qq) ...
                         ) ...
                        /3;
                diff_h_Mz_far(l_1(ee,ii)-n_v_pre_start_far,spines_e(qq)) ...
                    = diff_h_Mz_far(l_1(ee,ii)-n_v_pre_start_far,spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_far(l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_cz_ijnr(qq) ...
                          + w_far(l(LE_to_TE_1(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_cz_ijnz(qq) ...
                         ) ...
                        /3; 
            end
        end
    end
end

%Contact line contributions to the derivatives of S_1 with respect to
%sigma1 at the apex
diff_sigma1_S1_far(a1-n_spines_pre_start_far, ...
                   a1-n_spines_pre_start_far)  ...
    = diff_sigma1_S1_far(a1-n_spines_pre_start_far, ...
                         a1-n_spines_pre_start_far) ...
     - (1+4*Eg*Bg) ...
       /(4*Bg);

%adding the solid-surface boundary contributions to the Jacobian of
%the momentum and impermeability equations
for ee = n2_el_near+1:n2_el%looping over elements
    %Finding nodal positions for this line element
    r_le = Nodes_rz(l_2(ee,:),1);
    z_le = Nodes_rz(l_2(ee,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    r_e = Nodes_rz(l(LE_to_TE_2(ee),:),1);
    z_e = Nodes_rz(l(LE_to_TE_2(ee),:),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %Finding total number of spines whose size affects this line 
    %element
    n_s_e = 1+length(S_2(ee,:));
    %Finding the numbers of the spines whose lengths affect the 
    %shape of the element
    spines_e = [n_spines_far+1,S_2(ee,:)-n_spines_near+1];
    %Finding derivatives of the nodal positions with respect to the
    %spine legnths
    diff_h_r_le = zeros(3,n_s_e);
    diff_h_z_le = zeros(3,n_s_e);
    diff_h_r_le(:,1) = diff_h0_rz(l_2(ee,:),1);
    diff_h_z_le(:,1) = diff_h0_rz(l_2(ee,:),2);
    for qq = 1:n_s_e-1
        for rr = el2_s_loc_nodes(ee,qq)
            diff_h_r_le(rr,qq+1) = diff_h_rz(l_2(ee,rr),1);
            diff_h_z_le(rr,qq+1) = diff_h_rz(l_2(ee,rr),2);
        end
    end
    %Finding derivatives of the nodal position of the associated triangular
    %element
    diff_h_r_e = zeros(6,n_s_e);
    diff_h_z_e = zeros(6,n_s_e);
    diff_h_r_e(:,1) = diff_h0_rz(l(LE_to_TE_2(ee),:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(LE_to_TE_2(ee),:),2);
    for qq = 2:n_s_e
        for rr = el_s_loc_nodes{LE_to_TE_2(ee),qq-1}
            diff_h_r_e(rr,qq) = diff_h_rz(l(LE_to_TE_2(ee),rr),1);
            diff_h_z_e(rr,qq) = diff_h_rz(l(LE_to_TE_2(ee),rr),2);
        end
    end
    %Finding the derivatives of the determinant of the associated
    %triangular element
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_e
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *Tmat2{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *Tmat2{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    %Zeroing the derivatives of r' = \partial_\eta r and 
    %z' = \partial_\eta z with respect to the spine lengths at each 
    %Gaussian quadrature point
    diff_h_r_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    %Zeroing the derivatives of the determinant of the Jacobian of 
    %the isoparametric map with respect to each spine length at 
    % each Gaussian quadrature point
    diff_h_det_Jle = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        %Finding the r' = \partial_\eta r and z' = \partial_\eta z 
        %at each Gaussian quadrature point
        r_prime_lGaussian(pp) = (phi2_eta_lG(:,pp)')*(r_le-min_r_le);
        z_prime_lGaussian(pp) = (phi2_eta_lG(:,pp)')*(z_le-min_z_le);
        normaliser = max(abs(r_prime_lGaussian(pp)), ...
                         abs(z_prime_lGaussian(pp)));
        r_prime_lGaussian_aux = r_prime_lGaussian(pp)/normaliser;
        z_prime_lGaussian_aux = z_prime_lGaussian(pp)/normaliser;
        %Finding the determinant of the Jacobian of the 
        %isoparametric map with respect to each spine length at 
        %each Gaussian quadrature point
        det_Jle(pp) = sqrt(  r_prime_lGaussian_aux^2 ...
                           + z_prime_lGaussian_aux^2 ...
                          ) ...
                      *normaliser;
        det_Je(pp) = (r_e'-min_r_e)*Tmat2{pp}*(z_e-min_z_e);
        for qq = 1:n_s_e
            %Finding the derivatives of r' = \partial_\eta r and 
            %z' = \partial_\eta z with respect to the spine lengths
            %at each Gaussian quadrature point
            diff_h_r_prime_lGaussian(pp,qq) ...
                = (phi2_eta_lG(:,pp)')*diff_h_r_le(:,qq);
            diff_h_z_prime_lGaussian(pp,qq) ...
                = (phi2_eta_lG(:,pp)')*diff_h_z_le(:,qq);
            %Finding the derivatives of the determinant of the 
            %Jacobian of the isoparametric map with respect to each 
            %spine length at each Gaussian quadrature point
            diff_h_det_Jle(pp,qq) ...
                = (  r_prime_lGaussian(pp) ...
                     *diff_h_r_prime_lGaussian(pp,qq) ...
                   + z_prime_lGaussian(pp) ...
                     *diff_h_z_prime_lGaussian(pp,qq)) ...
                  /det_Jle(pp);
        end
    end
    %Finding integral quantities and their derivatives with respect 
    %to each of the spine lengths
    for ii = 1:3 %looping over local nodes to find the contribution 
        %to the respective eq
        %
        %Zeroing variables needed to calculate the derivatives of
        %D2_i with respect to h_q
        diff_h_d_i = zeros(1,n_s_e);
        %
        diff_h_d_u_trtri = zeros(1,n_s_e);
        diff_h_d_w_trtzi = zeros(1,n_s_e);
        diff_h_d_u_trtzi = zeros(1,n_s_e);
        diff_h_d_w_tztzi = zeros(1,n_s_e);
        for qq = 1:n_s_e
            for pp = 1:n_lGaussian_Q
                %Zeroing variables needed to calculate the 
                %derivatives ofD2_i with respect to h_q
                diff_h_d_i(qq) ...
                    = diff_h_d_i(qq) ...
                      + W_lG(pp) ...
                        *phi2_lG(ii,pp) ...
                        *diff_h_det_Jle(pp,qq);
            end
%             diff_h_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
%                           spines_e(qq)) ...
%                 = diff_h_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
%                                 spines_e(qq)) ...
%                   + Fs ...
%                     *Ds ...
%                     *diff_h_d_i(qq);
            diff_h_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                          spines_e(qq)) ...
                = diff_h_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                spines_e(qq)) ...
                  - 2 ...
                    *delta_t ...
                    *Ds ...
                    *diff_h_d_i(qq) ...
                    /3;
        end
        for jj = 1:3%looping over local nodes to calculate inner 
            %product of basis function by basis function ii
            %
            %Variables needed to calculate the derivatives of Mr_i
            %with respect to u_j
            d_ijtrtr = 0;
            %Variables needed to calculate the derivatives of Mr_i
            %with respect to w_j
            d_ijtrtz = 0;
            %Variables needed to calculate the derivative of Mr_i
            %with respect to lambda2_j
            d_ijnr = 0;
            %Variables needed to calculate the derivatives of Mr_i
            %with respect to sigma2_j
            ds_ijtr = 0;
            %Variables needed to calculate the derivatives of Mz_i
            %with respect to w_j
            d_ijtztz = 0;
            %Variables needed to calculate the derivative of Mz_i
            %with respect to lambda2_j
            d_ijnz = 0;
            %Variables needed to calculate the derivatives of Mr_i
            %with respect to sigma2_j
            ds_ijtz = 0;
            %Zeroing variables needed to calculate the derivatives 
            %of S2_i with repect to u_q
            d_ijtr = 0;
            %Zeroing variables needed to calculate the derivatives 
            %of S2_i with repect to w_q
            d_ijtz = 0;
            %Zeroing variables needed to calculate the derivatives 
            %of S2_i with repect to sigma2_q
            ds_ji = 0;
            %Zeroing variabes that we needed to add to calculate
            %the derivatives of E2_i with respect to rhos2_q
            d_ij = 0;
            %Variables needed to calculate the derivative of Mr_i
            %with respect to h_q
            diff_h_d_ijtrtr = zeros(1,n_s_e);
            diff_h_d_ijtrtz = zeros(1,n_s_e);
            diff_h_ds_ijtr = zeros(1,n_s_e);
            diff_h_ds_ijtz = zeros(1,n_s_e);
            %Variables needed to calculate the derivative of Mz_i
            %with respect to h_q
            diff_h_d_ijtztz = zeros(1,n_s_e);
            %zeroing variables needed to calculate the derivatives
            %of S2_i with respect to h
            diff_h_d_ijtr = zeros(1,n_s_e);
            diff_h_d_ijtz = zeros(1,n_s_e);
%             diff_h_ds_ij = zeros(1,n_s_e);
            %Variables needed to calculate the derivatives of I_i
            %with respect to h_q
            diff_h_d_ijnr = zeros(1,n_s_e);
            diff_h_d_ijnz = zeros(1,n_s_e);
            %Zeroing variables that we needed to add to calculate
            %the derivatives of E2_i with respect to h
            diff_h_d_ij = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                %Variables needed to calculate the derivatives of 
                %Mr_i with respect to u_j
                d_ijtrtr = d_ijtrtr ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *r_prime_lGaussian(pp) ...
                             *r_prime_lGaussian(pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the derivatives of 
                %Mr_i with respect to w_j
                d_ijtrtz = d_ijtrtz ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *r_prime_lGaussian(pp) ...
                             *z_prime_lGaussian(pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the derivatives of 
                %Mz_i with respect to w_j
                d_ijtztz = d_ijtztz ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *z_prime_lGaussian(pp) ...
                             *z_prime_lGaussian(pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the derivative of 
                %Mr_i with respect to lambda2_j
                d_ijnr   = d_ijnr ...
                           - alpha_2 ...
                             *W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *z_prime_lGaussian(pp);
                %Variables needed to calculate the derivative of 
                %Mz_i with respect to lambda2_j
                d_ijnz   = d_ijnz ...
                           + alpha_2 ...
                             *W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_lG(jj,pp) ...
                             *r_prime_lGaussian(pp);
                %Variables needed to calculate the derivative of 
                %Mr_i with respect to sigma2_j
                ds_ijtr  = ds_ijtr ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_eta_lG(jj,pp) ...
                             *r_prime_lGaussian(pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the derivative of 
                %Mr_i with respect to sigma2_j
                ds_ijtz  = ds_ijtz ...
                           + W_lG(pp) ...
                             *phi2_lG(ii,pp) ...
                             *phi2_eta_lG(jj,pp) ...
                             *z_prime_lGaussian(pp) ...
                             /det_Jle(pp);
                %Variables needed to calculate the derivatives of 
                %S2_i with repect to u_q
                d_ijtr = d_ijtr ...
                         + W_lG(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_lG(jj,pp) ...
                           *r_prime_lGaussian(pp);
                %Variables needed to calculate the derivatives of 
                %S2_i with repect to w_q
                d_ijtz = d_ijtz ...
                         + W_lG(pp) ...
                           *phi2_lG(ii,pp) ...
                           *phi2_lG(jj,pp) ...
                           *z_prime_lGaussian(pp);
                %Variables needed to calculate the derivatives of 
                %S2_i with repect to sigma2_q
                ds_ji = ds_ji ...
                        + W_lG(pp) ...
                          *phi2_lG(jj,pp) ...
                          *phi2_eta_lG(ii,pp); 
                %Variables needed to calculate the derivatives of 
                %E2_i with repect to rhos2_q
                d_ij = d_ij ...
                       + W_lG(pp) ...
                         *phi2_lG(ii,pp) ...
                         *phi2_lG(jj,pp) ...
                         *det_Jle(pp); 
                for qq = 1:n_s_e
                    %Variables needed to calculate the derivative 
                    %of Mr_i with respect to h_q
                    diff_h_d_ijtrtr(qq) ...
                        = diff_h_d_ijtrtr(qq) ...
                          + 2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *r_prime_lGaussian(pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    diff_h_d_ijtrtz(qq) ...
                        = diff_h_d_ijtrtz(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *r_prime_lGaussian(pp) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    diff_h_ds_ijtr(qq) ...
                        = diff_h_ds_ijtr(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_eta_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_eta_lG(jj,pp) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    %Variables needed to calculate the derivative 
                    %of Mz_i with respect to h_q
                    diff_h_d_ijtztz(qq) ...
                        = diff_h_d_ijtztz(qq) ...
                          + 2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *z_prime_lGaussian(pp) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    diff_h_ds_ijtz(qq) ...
                        = diff_h_ds_ijtz(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_eta_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Jle(pp) ...
                          - W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_eta_lG(jj,pp) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Jle(pp,qq) ...
                            /(det_Jle(pp)^2);
                    %Variables needed to calculate the derivatives 
                    %of S2_i with repect to h_q
                    diff_h_d_ijtr(qq) ...
                        = diff_h_d_ijtr(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq);
                    diff_h_d_ijtz(qq) ...
                        = diff_h_d_ijtz(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq);
                    %Variables needed to calculate the derivatives 
                    %of I_i with respect to h_q
                    diff_h_d_ijnr(qq) ...
                        = diff_h_d_ijnr(qq) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_z_prime_lGaussian(pp,qq);
                    diff_h_d_ijnz(qq) ...
                        = diff_h_d_ijnz(qq) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_r_prime_lGaussian(pp,qq);
                    %Variables needed to calculate the derivatives 
                    %of E2_i with respect to h_q
                    diff_h_d_ij(qq) ...
                        = diff_h_d_ij(qq) ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *diff_h_det_Jle(pp,qq);
                end
            end
            %Jacobian contributions
            %Mr
            diff_u_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                = diff_u_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    l_2(ee,jj)-n_v_pre_start_far)... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtrtr ...
                    /(6*Ca*Es);
            diff_w_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                = diff_w_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    l_2(ee,jj)-n_v_pre_start_far)... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtrtz ...
                    /(6*Ca*Es);
            diff_lambda2_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_lambda2_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                          l2_2(ee,jj)-n_spines_pre_start_far) ...
                  + 2 ...
                    *delta_t ...
                    *d_ijnr ...
                    /3;
            diff_us2_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                   l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_us2_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                         l2_2(ee,jj)-n_spines_pre_start_far) ...
                  - delta_t ...
                    *d_ijtrtr ...
                    /(3*Ca*Es);
            diff_ws2_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                   l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_ws2_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                         l2_2(ee,jj)-n_spines_pre_start_far) ...
                  - delta_t ...
                    *d_ijtrtz ...
                    /(3*Ca*Es);
            %Mz
            diff_u_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                = diff_u_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    l_2(ee,jj)-n_v_pre_start_far)... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtrtz ...
                    /(6*Ca*Es);
            diff_w_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                = diff_w_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    l_2(ee,jj)-n_v_pre_start_far)... 
                  + (1+4*Be*Ca*Es) ...
                    *delta_t ...
                    *d_ijtztz ...
                    /3;
            diff_lambda2_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    l2_2(ee,jj)-n_spines_near+1) ...
                = diff_lambda2_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                          l2_2(ee,jj)-n_spines_near+1) ...
                  + 2 ...
                    *delta_t ...
                    *d_ijnz ...
                    /3;
            diff_us2_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                   l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_us2_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                         l2_2(ee,jj)-n_spines_pre_start_far) ...
                  - delta_t ...
                    *d_ijtrtz ...
                    /(3*Ca*Es);
            diff_ws2_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                   l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_ws2_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                         l2_2(ee,jj)-n_spines_pre_start_far) ...
                  - delta_t ...
                    *d_ijtztz ...
                    /(3*Ca*Es);
            %S2
            diff_u_far_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                = diff_u_far_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                  - d_ijtr/2;
            diff_w_far_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                = diff_w_far_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                  - d_ijtz/2;
            diff_us2_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                            l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_us2_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                  l2_2(ee,jj)-n_spines_pre_start_far) ...
                  + d_ijtr;
            diff_ws2_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                            l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_ws2_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                  l2_2(ee,jj)-n_spines_pre_start_far) ...
                  + d_ijtz;
            diff_sigma2_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                               l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_sigma2_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                     l2_2(ee,jj)-n_spines_pre_start_far) ...
                  + Es ...
                    *ds_ji;
            %I
            diff_us2_I_far(l2_2(ee,ii)-n_spines_near+1, ...
                           l2_2(ee,jj)-n_spines_near+1) ...
                = diff_us2_I_far(l2_2(ee,ii)-n_spines_near+1, ...
                                   l2_2(ee,jj)-n_spines_near+1) ...
                  + d_ijnr;
            diff_ws2_I_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                           l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_ws2_I_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                 l2_2(ee,jj)-n_spines_pre_start_far) ...
                  + d_ijnz;
            %E2
            diff_u_far_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                = diff_u_far_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                  + d_ijnr;
            diff_w_far_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                = diff_w_far_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              l_2(ee,jj)-n_v_pre_start_far) ...
                  + d_ijnz;
            diff_us2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                            l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_us2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                  l2_2(ee,jj)-n_spines_pre_start_far) ...
                  - d_ijnr;
            diff_ws2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                            l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_ws2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                  l2_2(ee,jj)-n_spines_pre_start_far) ...
                  - d_ijnz;
            diff_rhos2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_rhos2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                    l2_2(ee,jj)-n_spines_pre_start_far) ...
                  + d_ij ...
                    *2 ...
                    *Ls ...
                    /3;
%                   - Fs ...
%                     *d_ij;
            %D2
            diff_rhos2_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              l2_2(ee,jj)-n_spines_pre_start_far) ...
                = diff_rhos2_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                    l2_2(ee,jj)-n_spines_pre_start_far) ...
                  + d_ij ...
                    *(  2 ...
                        *delta_t ...
                        /3 ...
                      + 2 ...
                        *Ts ...
                        /3 ...
                     );
            for qq = 1:n_s_e
                diff_h_d_u_trtri(qq) ...
                    = diff_h_d_u_trtri(qq) ...
                      + diff_h_d_ijtrtr(qq) ...
                        *(  u_far(l_2( ee,jj)-n_v_pre_start_far) ...
                          - u_s(  l2_2(ee,jj)) ...
                         );
                diff_h_d_w_trtzi(qq) ...
                    = diff_h_d_w_trtzi(qq) ...
                      + diff_h_d_ijtrtz(qq) ...
                        *(  w_far(l_2( ee,jj)-n_v_pre_start_far) ...
                          - w_s(  l2_2(ee,jj)) ...
                         );
                diff_h_d_u_trtzi(qq) ...
                    = diff_h_d_u_trtzi(qq) ...
                      + diff_h_d_ijtrtz(qq) ...
                        *(  u_far(l_2( ee,jj)-n_v_pre_start_far) ...
                          - u_s(  l2_2(ee,jj)) ...
                         );
                diff_h_d_w_tztzi(qq) ...
                    = diff_h_d_w_tztzi(qq) ...
                      + diff_h_d_ijtztz(qq) ...
                        *(  w_far(l_2( ee,jj)-n_v_pre_start_far) ...
                          - w_s(  l2_2(ee,jj)) ...
                         );
                %Mr
                diff_h_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *lambda2(l2_2(ee,jj)) ...
                        *diff_h_d_ijnr(qq) ...
                        /3 ...
                      + (1+4*Be*Ca*Es) ...
                        *delta_t ...
                        *(  u_far(l_2(ee,jj)-n_v_pre_start_far) ...
                            *diff_h_d_ijtrtr(qq) ...
                          + w_far(l_2(ee,jj)-n_v_pre_start_far) ...
                            *diff_h_d_ijtrtz(qq) ...
                         ) ...
                        /(6*Ca*Es) ...
                      + (1-4*Be*Ca*Es) ...
                        *delta_t ...
                        *(  u_s(l2_2(ee,jj)) ...
                            *diff_h_d_ijtrtr(qq) ...
                          + w_s(l2_2(ee,jj)) ...
                            *diff_h_d_ijtrtz(qq) ...
                         ) ...
                        /(6*Ca*Es) ...
                      - delta_t ...
                        *(  us2(l2_2(ee,jj)) ...
                            *diff_h_d_ijtrtr(qq) ...
                          + ws2(l2_2(ee,jj)) ...
                            *diff_h_d_ijtrtz(qq) ...
                         ) ...
                        /(3*Ca*Es);
                %Mz
                diff_h_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...  
                              spines_e(qq)) ...
                    = diff_h_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...  
                                    spines_e(qq)) ...
                      + 2 ...
                        *delta_t ...
                        *lambda2(l2_2(ee,jj)) ...
                        *diff_h_d_ijnz(qq) ...
                        /3 ...
                      + (1+4*Be*Ca*Es) ...
                        *delta_t ...
                        *(  u_far(l_2(ee,jj)-n_v_pre_start_far) ...
                            *diff_h_d_ijtrtz(qq) ...
                          + w_far(l_2(ee,jj)-n_v_pre_start_far) ...
                            *diff_h_d_ijtztz(qq) ...
                         ) ...
                        /(6*Ca*Es) ...
                      + (1-4*Be*Ca*Es) ...
                        *delta_t ...
                        *(  u_s(l2_2(ee,jj)) ...
                            *diff_h_d_ijtrtz(qq) ...
                          + w_s(l2_2(ee,jj)) ...
                            *diff_h_d_ijtztz(qq) ...
                         ) ...
                        /(6*Ca*Es) ...
                      - delta_t ...
                        *(  us2(l2_2(ee,jj)) ...
                            *diff_h_d_ijtrtz(qq) ...
                          + ws2(l2_2(ee,jj)) ...
                            *diff_h_d_ijtztz(qq) ...
                         ) ...
                        /(3*Ca*Es);
                %S2
                diff_h_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_S2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                    spines_e(qq)) ...
                      + diff_h_d_ijtr(qq) ...
                        *(  us2(l2_2(ee,jj)) ...
                          - u_far(l_2(ee,jj)-n_v_pre_start_far)/2 ...
                          - u_s(l2_2(ee,jj))/2 ...
                         ) ...
                      + diff_h_d_ijtz(qq) ...
                        *(  ws2(l2_2(ee,jj)) ...
                          - w_far(l_2(ee,jj)-n_v_pre_start_far)/2 ...
                          - w_s(l2_2(ee,jj))/2 ...
                         );
                %I
                diff_h_I_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                             spines_e(qq)) ...
                    = diff_h_I_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                   spines_e(qq)) ...
                      + diff_h_d_ijnr(qq) ...
                        *(  us2(l2_2(ee,jj)) ...
                          - u_s(l2_2(ee,jj)) ...
                         ) ...
                      + diff_h_d_ijnz(qq) ...
                        *(  ws2(l2_2(ee,jj)) ...
                          - w_s(l2_2(ee,jj)) ...
                         );
                %E2
                diff_h_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                    spines_e(qq)) ...
                      + diff_h_d_ijnr(qq) ...
                        *(  u_far(l_2(ee,jj)-n_v_pre_start_far) ...
                          - us2(l2_2(ee,jj)) ...
                         ) ...
                      + diff_h_d_ijnz(qq) ...
                        *(  w_far(l_2(ee,jj)-n_v_pre_start_far) ...
                          - ws2(l2_2(ee,jj)) ...
                         ) ...
                      + diff_h_d_ij(qq) ...
                        *Ls ...
                        *(  2*rhos2(l2_2(ee,jj))/3 ...
                          - 2*rhos2_minus1(l2_2(ee,jj))/3 ...
                         );
%                       - Fs ...
%                         *rhos2(l2_2(ee,jj)) ...
%                         *diff_h_d_ij(qq);
                %D2
                diff_h_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                              spines_e(qq)) ...
                    = diff_h_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                    spines_e(qq)) ...
                      + diff_h_d_ij(qq) ...
                        *(  2 ...
                            *delta_t ...
                            *rhos2(l2_2(ee,jj)) ...
                            /3 ...
                          + Ts ...
                            *(  2*rhos2(l2_2(ee,jj))/3 ...
                              - 2*rhos2_minus1(l2_2(ee,jj))/3 ...
                             ) ...
                         );
            end
            for kk = 1:3
                %Zeroing variables needed to calculate the
                %derivatives of D2_i with respect to rhos2_q
                ds_jkitr = 0;
                ds_jkitz = 0;
                ds_ijktr = 0;
                ds_ijktz = 0;
                %Zeroing variables needed to calculate the
                %derivatives of D2_i with respect to h_q
                diff_h_ds_jkitr = zeros(1,n_s_e);
                diff_h_ds_jkitz = zeros(1,n_s_e);
                diff_h_ds_ijktr = zeros(1,n_s_e);
                diff_h_ds_ijktz = zeros(1,n_s_e);
                for pp = 1:n_lGaussian_Q
                    %Variables needed to calculate the
                    %derivatives of D2_i with respect to rhos2_q
                    ds_jkitr ...
                        = ds_jkitr ...
                          + W_lG(pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_lG(kk,pp) ...
                            *phi2_eta_lG(ii,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    ds_jkitz ...
                        = ds_jkitz ...
                          + W_lG(pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_lG(kk,pp) ...
                            *phi2_eta_lG(ii,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    ds_ijktr ...
                        = ds_ijktr ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_eta_lG(kk,pp) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    ds_ijktz ...
                        = ds_ijktz ...
                          + W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *phi2_lG(jj,pp) ...
                            *phi2_eta_lG(kk,pp) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Jle(pp);
                    for qq = 1:n_s_e
                        diff_h_ds_jkitr(qq) ...
                            = diff_h_ds_jkitr(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_ds_jkitz(qq) ...
                            = diff_h_ds_jkitz(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_lG(kk,pp) ...
                                *phi2_eta_lG(ii,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_ds_ijktr(qq) ...
                            = diff_h_ds_ijktr(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *diff_h_r_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *r_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                        diff_h_ds_ijktz(qq) ...
                            = diff_h_ds_ijktz(qq) ...
                              + W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *diff_h_z_prime_lGaussian(pp,qq) ...
                                /det_Jle(pp) ...
                              - W_lG(pp) ...
                                *phi2_lG(ii,pp) ...
                                *phi2_lG(jj,pp) ...
                                *phi2_eta_lG(kk,pp) ...
                                *z_prime_lGaussian(pp) ...
                                *diff_h_det_Jle(pp,qq) ...
                                /(det_Jle(pp)^2);
                    end
                end
                diff_rhos2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                  l2_2(ee,jj)-n_spines_pre_start_far) ...
                    = diff_rhos2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                        l2_2(ee,jj)-n_spines_pre_start_far) ...
                      + Ls ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us2(l2_2(ee,kk)) ...
                                *ds_jkitr ...
                              + ws2(l2_2(ee,kk)) ...
                                *ds_jkitz ...
                             ) ...
                            /3 ...
                          + (  ds_jkitr + ds_ijktr)...
                            *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                             ) ...
                          + (  ds_jkitz + ds_ijktz)...
                            *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_rhos2_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                  l2_2(ee,jj)-n_spines_pre_start_far) ...
                    = diff_rhos2_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                        l2_2(ee,jj)-n_spines_pre_start_far) ...
                      + Ts ...
                        *(- 2 ...
                            *delta_t ...
                            *(  us2(l2_2(ee,kk)) ...
                                *ds_jkitr ...
                              + ws2(l2_2(ee,kk)) ...
                                *ds_jkitz ...
                             ) ...
                            /3 ...
                          + (  ds_jkitr + ds_ijktr)...
                            *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                             ) ...
                          + (  ds_jkitz + ds_ijktz)...
                            *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                              - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                             ) ...
                         );
                diff_us2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                l2_2(ee,kk)-n_spines_pre_start_far) ...
                    = diff_us2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                      l2_2(ee,kk)-n_spines_pre_start_far) ...
                      - 2 ...
                        *delta_t ...
                        *Ls ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitr ...
                        /3;
                diff_us2_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                l2_2(ee,kk)-n_spines_pre_start_far) ...
                    = diff_us2_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                      l2_2(ee,kk)-n_spines_pre_start_far) ...
                      - 2 ...
                        *delta_t ...
                        *Ts ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitr ...
                        /3;
                diff_ws2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                l2_2(ee,kk)-n_spines_pre_start_far) ...
                    = diff_ws2_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                      l2_2(ee,kk)-n_spines_pre_start_far) ...
                      - 2 ...
                        *delta_t ...
                        *Ls ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitz ...
                        /3;    
                diff_ws2_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                l2_2(ee,kk)-n_spines_pre_start_far) ...
                    = diff_ws2_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                      l2_2(ee,kk)-n_spines_pre_start_far) ...
                      - 2 ...
                        *delta_t ...
                        *Ts ...
                        *rhos2(l2_2(ee,jj)) ...
                        *ds_jkitz ...
                        /3;        
                for qq = 1:n_s_e
                    diff_h_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                  spines_e(qq)) ...
                        = diff_h_E2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                        spines_e(qq)) ...
                          + Ls ...
                            *rhos2(l2_2(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitr(qq) ...
                                  + ws2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *ds_jkitr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_jkitr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_jkitz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                             );
                    diff_h_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                  spines_e(qq)) ...
                        = diff_h_D2_far(l2_2(ee,ii)-n_spines_pre_start_far, ...
                                        spines_e(qq)) ...
                          + Ts ...
                            *rhos2(l2_2(ee,jj)) ...
                            *(- 2 ...
                                *delta_t ...
                                *(  us2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitr(qq) ...
                                  + ws2(l2_2(ee,kk)) ...
                                    *diff_h_ds_jkitz(qq) ...
                                 ) ...
                                /3 ...
                              + 2 ...
                                *ds_jkitr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_jkitr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_jkitz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_jkitz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktr ...
                                *diff_h_r_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktr(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),1)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),1)/3 ...
                                 ) ...
                              + 2 ...
                                *ds_ijktz ...
                                *diff_h_z_le(kk,qq) ...
                                /3 ...
                              + diff_h_ds_ijktz(qq) ...
                                *(  2*Nodes_rz(l_2(ee,kk),2)/3 ...
                                  - 2*Nodes_rz_minus1(l_2(ee,kk),2)/3 ...
                                 ) ...
                             );
                end                           
            end
        end
        for jj = 1:6
            dr_ijnr = 0;
            dr_ijnz = 0;
            dz_ijnr = 0;
            dz_ijnz = 0;
            diff_h_dr_ijnr = zeros(1,n_s_e);
            diff_h_dr_ijnz = zeros(1,n_s_e);
            diff_h_dz_ijnr = zeros(1,n_s_e);
            diff_h_dz_ijnz = zeros(1,n_s_e);
            for pp = 1:n_lGaussian_Q
                dr_ijnr = dr_ijnr ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                dr_ijnz = dr_ijnz ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                dz_ijnr = dz_ijnr ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                dz_ijnz = dz_ijnz ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                for qq = 1:n_s_e
                    diff_h_dr_ijnr(qq) ...
                        = diff_h_dr_ijnr(qq) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_dr_ijnz(qq) ...
                        = diff_h_dr_ijnz(qq) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_dz_ijnr(qq) ...
                        = diff_h_dz_ijnr(qq) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_z_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_dz_ijnz(qq) ...
                        = diff_h_dz_ijnz(qq) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *diff_h_r_prime_lGaussian(pp,qq) ...
                            /det_Je(pp) ...
                          + alpha_2 ...
                            *W_lG(pp) ...
                            *phi2_lG(ii,pp) ...
                            *Tmat2{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                end
            end
            diff_u_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                = diff_u_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *dr_ijnr ...
                    /3;
            diff_w_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                = diff_w_far_Mr_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *dr_ijnz ...
                    /3;
            diff_u_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                = diff_u_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *dz_ijnr ...
                    /3;
            diff_w_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                = diff_w_far_Mz_far(l_2(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *dz_ijnz ...
                    /3;
            for qq = 1:n_s_e
                diff_h_Mr_far(l_2(ee,ii)-n_v_pre_start_far,spines_e(qq)) ...
                    = diff_h_Mr_far(l_2(ee,ii)-n_v_pre_start_far,spines_e(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_far(l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_dr_ijnr(qq) ...
                          + w_far(l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_dr_ijnz(qq) ...
                         ) ...
                        /3;
                diff_h_Mz_far(l_2(ee,ii)-n_v_pre_start_far,spines_e(qq)) ...
                    = diff_h_Mz_far(l_2(ee,ii)-n_v_pre_start_far,spines_e(qq)) ...
                      - 2 ... 
                        *delta_t ...
                        *(  u_far(l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_dz_ijnr(qq) ...
                          + w_far(l(LE_to_TE_2(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_dz_ijnz(qq) ...
                         ) ...
                        /3; 
            end
        end
    end
end

%Origin contribution to S2
diff_sigma2_S2_far(o2-n_spines_pre_start_far,o2-n_spines_pre_start_far) ...
    = diff_sigma2_S2_far(o2-n_spines_pre_start_far,o2-n_spines_pre_start_far) ...
      - Es;

%Adding the inflow-surface boundary contributions to the Jacobian 
%of the momentum eqns
for ee = 1:n3_el%looping over elements
    %Finding line element node cooerdinates
    r_le = Nodes_rz(l_3(ee,:),1);
    z_le = Nodes_rz(l_3(ee,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    r_e = Nodes_rz(l(LE_to_TE_3(ee),:),1);
    z_e = Nodes_rz(l(LE_to_TE_3(ee),:),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %number of spines whose size affects this line element
    n_s_e = 1+length(S_3(ee,:));
    n_s_eT = 1+length(S(LE_to_TE_3(ee),:));
    %Finding the numbers of the spines whose lengths affect the shape
    %of the element
    spines_e = [n_spines_far+1,S_3(ee,:)-n_spines_pre_start_far];
    spines_eT = [n_spines_far+1,S(LE_to_TE_3(ee),:)-n_spines_pre_start_far];
    %Finding derivatives of the nodal positions with respect to the
    %spine lengths
    diff_h_r_le = zeros(3,n_s_e);
    diff_h_z_le = zeros(3,n_s_e);
    diff_h_r_le(:,1) = diff_h0_rz(l_3(ee,:),1);
    diff_h_z_le(:,1) = diff_h0_rz(l_3(ee,:),2);
    for qq = 2:n_s_e
        for rr = el3_s_loc_nodes{ee,qq-1}
            diff_h_r_le(rr,qq) = diff_h_rz(l_3(ee,rr),1);
            diff_h_z_le(rr,qq) = diff_h_rz(l_3(ee,rr),2);
        end
    end
    %Finding derivatives of the nodal position of the associated triangular
    %element
    diff_h_r_e = zeros(6,n_s_eT);
    diff_h_z_e = zeros(6,n_s_eT);
    diff_h_r_e(:,1) = diff_h0_rz(l(LE_to_TE_3(ee),:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(LE_to_TE_3(ee),:),2);
    for qq = 2:n_s_eT
        for rr = el_s_loc_nodes{LE_to_TE_3(ee),qq-1}
            diff_h_r_e(rr,qq) = diff_h_rz(l(LE_to_TE_3(ee),rr),1);
            diff_h_z_e(rr,qq) = diff_h_rz(l(LE_to_TE_3(ee),rr),2);
        end
    end
    %Finding the derivatives of the determinant of the associated
    %triangular element
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_eT
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *Tmat3{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *Tmat3{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    %Zeroing the derivatives of r' = \partial_\xi r and 
    %z' = \partial_\xi z with respect to the spine lengths at each 
    %Gaussian quadrature point
    diff_h_r_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    %Zeroing the derivatives of the determinant of the Jacobian of 
    %the isoparametric map with respect to each spine length at 
    %each Gaussian quadrature point
    diff_h_det_Jle = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        %Finding the r' = \partial_\xi r and z' = \partial_\xi z 
        %at each Gaussian quadrature point
        r_prime_lGaussian(pp) = (phi3_xi_lG(:,pp)')*(r_le-min_r_le);
        z_prime_lGaussian(pp) = (phi3_xi_lG(:,pp)')*(z_le-min_z_le);
        normaliser = max(abs(r_prime_lGaussian(pp)), ...
                         abs(z_prime_lGaussian(pp)));
        r_prime_lGaussian_aux = r_prime_lGaussian(pp)/normaliser;
        z_prime_lGaussian_aux = z_prime_lGaussian(pp)/normaliser;
        %Finding the determinant of the Jacobian of the 
        %isoparametric map at each Gaussian quadrature point
        det_Jle(pp) = sqrt(  r_prime_lGaussian_aux^2 ...
                           + z_prime_lGaussian_aux^2 ...
                          ) ...
                      *normaliser;
        det_Je(pp) = (r_e'-min_r_e)*Tmat3{pp}*(z_e-min_z_e);
        for qq = 1:n_s_e
            %Finding the derivatives of r' = \partial_\xi r and 
            %z' = \partial_\xi z with respect to the spine lengths 
            %at each Gaussian quadrature point
            diff_h_r_prime_lGaussian(pp,qq) ...
                = (phi3_xi_lG(:,pp)')*diff_h_r_le(:,qq);
            diff_h_z_prime_lGaussian(pp,qq) ...
                = (phi3_xi_lG(:,pp)')*diff_h_z_le(:,qq);
            %Finding the derivatives of the  determinant of the 
            %Jacobian of the isoparametric map with respect to 
            %each spine length at each Gaussian quadrature point
            diff_h_det_Jle(pp,qq) ...
                = (  r_prime_lGaussian(pp) ...
                     *diff_h_r_prime_lGaussian(pp,qq) ...
                   + z_prime_lGaussian(pp) ...
                     *diff_h_z_prime_lGaussian(pp,qq)) ...
                  /det_Jle(pp);
        end
    end
    %Looping over local nodes to find the contribution to the 
    %respective eq
    for ii = 1:3 
        %looping over local nodes to calculate inner product of 
        %basis function jj by basis function ii
%         for jj = 1:3
%             %Variables needed to calculate the derivatives of Mr_i
%             %with respect to gamma3
%             f_ijtr = 0;
%             %Variables needed to calculate the derivatives of Mr_i
%             %with respect to lambda3
%             f_ijnr = 0;
%             %Variables needed to calculate the derivatives of Mz_i
%             %with respect to gamma3
%             f_ijtz = 0;
%             %Variables needed to calculate the derivatives of Mr_i
%             %with respect to lambda3
%             f_ijnz = 0;
%             %Variables needed to calculate the derivatives of Mr_i
%             %with respect to h_q
%             diff_h_f_ijtr = zeros(1,n_s_e);
%             diff_h_f_ijnr = zeros(1,n_s_e);
%             %Variables needed to calculate the derivatives of Mr_i
%             %with respect to h_q
%             diff_h_f_ijtz = zeros(1,n_s_e);
%             diff_h_f_ijnz = zeros(1,n_s_e);
%             for pp = 1:n_lGaussian_Q
%                 %Variables needed to calculate the derivatives of 
%                 %Mr_i with respect to gamma3
%                 f_ijtr = f_ijtr ...
%                          + W_lG(pp) ...
%                            *phi3_lG(ii,pp) ...
%                            *phi3_lG(jj,pp) ...
%                            *r_prime_lGaussian(pp);
%                 %Variables needed to calculate the derivatives of 
%                 %Mr_i with respect to lambda3
%                 f_ijnr = f_ijnr ...
%                          - alpha_3 ...
%                            *W_lG(pp) ...
%                            *phi3_lG(ii,pp) ...
%                            *phi3_lG(jj,pp) ...
%                            *z_prime_lGaussian(pp);
%                 %Variables needed to calculate the derivatives of 
%                 %Mz_i with respect to gamma3
%                 f_ijtz = f_ijtz ...
%                          + W_lG(pp) ...
%                            *phi3_lG(ii,pp) ...
%                            *phi3_lG(jj,pp) ...
%                            *z_prime_lGaussian(pp);
%                 %Variables needed to calculate the derivatives of Mr_i
%                 %with respect to lambda3
%                 f_ijnz = f_ijnz ...
%                          + alpha_3 ...
%                            *W_lG(pp) ...
%                            *phi3_lG(ii,pp) ...
%                            *phi3_lG(jj,pp) ...
%                            *r_prime_lGaussian(pp);
%                 for qq = 1:n_s_e
%                     diff_h_f_ijtr(qq) ...
%                         = diff_h_f_ijtr(qq) ...
%                           + W_lG(pp) ...
%                             *phi3_lG(ii,pp) ...
%                             *phi3_lG(jj,pp) ...
%                             *diff_h_r_prime_lGaussian(pp,qq);
%                     diff_h_f_ijtz(qq) ...
%                         = diff_h_f_ijtz(qq) ...
%                           + W_lG(pp) ...
%                             *phi3_lG(ii,pp) ...
%                             *phi3_lG(jj,pp) ...
%                             *diff_h_z_prime_lGaussian(pp,qq);
%                     diff_h_f_ijnr(qq) ...
%                         = diff_h_f_ijnr(qq) ...
%                           - alpha_3 ...
%                             *W_lG(pp) ...
%                             *phi3_lG(ii,pp) ...
%                             *phi3_lG(jj,pp) ...
%                             *diff_h_z_prime_lGaussian(pp,qq);
%                     diff_h_f_ijnz(qq) ...
%                         = diff_h_f_ijnz(qq) ...
%                           + alpha_3 ...
%                             *W_lG(pp) ...
%                             *phi3_lG(ii,pp) ...
%                             *phi3_lG(jj,pp) ...
%                             *diff_h_r_prime_lGaussian(pp,qq);
%                 end
%             end
%             %Jacobian contributions
%                     diff_lambda3_Mr_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                                         l3_3(ee,jj)) ...
%                         = diff_lambda3_Mr_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                                            l3_3(ee,jj)) ...
%                           + 2 ...
%                             *delta_t ...
%                             *f_ijnr ...
%                             /3;
%                     diff_gamma3_Mr_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                                        l3_3(ee,jj)) ...
%                         = diff_gamma3_Mr_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                                              l3_3(ee,jj)) ...
%                           + 2 ...
%                             *delta_t ...
%                             *f_ijtr ...
%                             /3;
%                     diff_lambda3_Mz_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                                         l3_3(ee,jj)) ...
%                         = diff_lambda3_Mz_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                                               l3_3(ee,jj)) ...
%                           + 2 ...
%                             *delta_t ...
%                             *f_ijnz ...
%                             /3;
%                     diff_gamma3_Mz_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                                        l3_3(ee,jj)) ...
%                         = diff_gamma3_Mz_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                                          l3_3(ee,jj)) ...
%                           + 2 ...
%                             *delta_t ...
%                             *f_ijtz ...
%                             /3;
%             for qq = 1:n_s_e
%                 diff_h_Mr_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                               spines_e(qq)) ...
%                  = diff_h_Mr_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                                  spines_e(qq)) ...
%                    + 2 ...
%                      *delta_t ...
%                      *(  lambda3(l3_3(ee,jj)) ...
%                          *diff_h_f_ijnr(qq) ...
%                        + gamma3( l3_3(ee,jj)) ...
%                          *diff_h_f_ijtr(qq) ...
%                       ) ...
%                      /3;
%                 diff_h_Mz_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                               spines_e(qq)) ...
%                     = diff_h_Mz_far(l_3(ee,ii)-n_v_pre_start_far, ...
%                                     spines_e(qq)) ...
%                       + 2 ...
%                         *delta_t ...
%                         *(  lambda3(l3_3(ee,jj)) ...
%                             *diff_h_f_ijnz(qq) ...
%                           + gamma3( l3_3(ee,jj)) ...
%                             *diff_h_f_ijtz(qq) ...
%                          ) ...
%                         /3;
%             end
%         end
        for jj = 1:6
            fr_ijnr = 0;
            fr_ijnz = 0;
            fz_ijnr = 0;
            fz_ijnz = 0;
            diff_h_fr_ijnr = zeros(1,n_s_eT);
            diff_h_fr_ijnz = zeros(1,n_s_eT);
            diff_h_fz_ijnr = zeros(1,n_s_eT);
            diff_h_fz_ijnz = zeros(1,n_s_eT);
            for pp = 1:n_lGaussian_Q
                fr_ijnr = fr_ijnr ...
                          - alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                fr_ijnz = fr_ijnz ...
                          + alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                fz_ijnr = fz_ijnr ...
                          + alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                fz_ijnz = fz_ijnz ...
                          - alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                for qq = 1:n_s_eT
                    diff_h_fr_ijnr(qq) ...
                        = diff_h_fr_ijnr(qq) ...
                          - alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_fr_ijnz(qq) ...
                        = diff_h_fr_ijnz(qq) ...
                          + alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_fz_ijnr(qq) ...
                        = diff_h_fz_ijnr(qq) ...
                          + alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_fz_ijnz(qq) ...
                        = diff_h_fz_ijnz(qq) ...
                          - alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_3 ...
                            *W_lG(pp) ...
                            *phi3_lG(ii,pp) ...
                            *Tmat3{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    index = find(spines_e == spines_eT(qq));
                    if isempty(index) == 0
                        diff_h_fr_ijnr(qq) ...
                            = diff_h_fr_ijnr(qq) ...
                              - alpha_3 ...
                                *W_lG(pp) ...
                                *phi3_lG(ii,pp) ...
                                *Tmat3{pp}(jj,:)*(z_e-min_z_e) ...
                                *diff_h_z_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                        diff_h_fr_ijnz(qq) ...
                            = diff_h_fr_ijnz(qq) ...
                              + alpha_3 ...
                                *W_lG(pp) ...
                                *phi3_lG(ii,pp) ...
                                *Tmat3{pp}(jj,:)*(z_e-min_z_e) ...
                                *diff_h_r_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                        diff_h_fz_ijnr(qq) ...
                            = diff_h_fz_ijnr(qq) ...
                              + alpha_3 ...
                                *W_lG(pp) ...
                                *phi3_lG(ii,pp) ...
                                *Tmat3{pp}(jj,:)*(r_e-min_r_e) ...
                                *diff_h_z_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                        diff_h_fz_ijnz(qq) ...
                            = diff_h_fz_ijnz(qq) ...
                              - alpha_3 ...
                                *W_lG(pp) ...
                                *phi3_lG(ii,pp) ...
                                *Tmat3{pp}(jj,:)*(r_e-min_r_e) ...
                                *diff_h_r_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                    end
                end
            end
            diff_u_far_Mr_far(l_3(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                = diff_u_far_Mr_far(l_3(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *fr_ijnr ...
                    /3;
            diff_w_far_Mr_far(l_3(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                = diff_w_far_Mr_far(l_3(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *fr_ijnz ...
                    /3;
            diff_u_far_Mz_far(l_3(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                = diff_u_far_Mz_far(l_3(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *fz_ijnr ...
                    /3;
            diff_w_far_Mz_far(l_3(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                = diff_w_far_Mz_far(l_3(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *fz_ijnz ...
                    /3;
            for qq = 1:n_s_eT
                diff_h_Mr_far(l_3(ee,ii)-n_v_pre_start_far,spines_eT(qq)) ...
                    = diff_h_Mr_far(l_3(ee,ii)-n_v_pre_start_far,spines_eT(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_far(l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_fr_ijnr(qq) ...
                          + w_far(l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_fr_ijnz(qq) ...
                         ) ...
                        /3;
                diff_h_Mz_far(l_3(ee,ii)-n_v_pre_start_far,spines_eT(qq)) ...
                    = diff_h_Mz_far(l_3(ee,ii)-n_v_pre_start_far,spines_eT(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_far(l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_fz_ijnr(qq) ...
                          + w_far(l(LE_to_TE_3(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_fz_ijnz(qq) ...
                         ) ...
                        /3; 
            end
        end
    end
end

%Adding the separatrix boundary contributions to the Jacobian 
%of the momentum eqns
for ee = 1:n5_el%looping over elements
    %Finding line element node cooerdinates
    r_le = Nodes_rz(l_5(ee,:),1);
    z_le = Nodes_rz(l_5(ee,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    r_e = Nodes_rz(l(LE_to_TE_5(ee),:),1);
    z_e = Nodes_rz(l(LE_to_TE_5(ee),:),2);
    min_r_e = min(r_e);
    min_z_e = min(z_e);
    %number of spines whose size affects this line element
    n_s_e = 1+length(S_5(ee,:));
    n_s_eT = 1+length(S(LE_to_TE_5(ee),:));
    %Finding the numbers of the spines whose lengths affect the 
    %shape of the element
    spines_e = [n_spines_far+1,S_5(ee,:)-n_spines_pre_start_far];
    spines_eT = [n_spines_far+1,S(LE_to_TE_5(ee),:)-n_spines_pre_start_far];
    %Finding derivatives of the nodal positions with respect to the
    %spine lengths
    diff_h_r_le = zeros(3,n_s_e);
    diff_h_z_le = zeros(3,n_s_e);
    diff_h_r_le(:,1) = diff_h0_rz(l_5(ee,:),1);
    diff_h_z_le(:,1) = diff_h0_rz(l_5(ee,:),2);
    for qq = 2:n_s_e
        for rr = el5_s_loc_nodes{ee,qq-1}
            diff_h_r_le(rr,qq) = diff_h_rz(l_5(ee,rr),1);
            diff_h_z_le(rr,qq) = diff_h_rz(l_5(ee,rr),2);
        end
    end
    %Finding derivatives of the nodal position of the associated triangular
    %element
    diff_h_r_e = zeros(6,n_s_eT);
    diff_h_z_e = zeros(6,n_s_eT);
    diff_h_r_e(:,1) = diff_h0_rz(l(LE_to_TE_5(ee),:),1);
    diff_h_z_e(:,1) = diff_h0_rz(l(LE_to_TE_5(ee),:),2);
    for qq = 2:n_s_eT
        for rr = el_s_loc_nodes{LE_to_TE_5(ee),qq-1}
            diff_h_r_e(rr,qq) = diff_h_rz(l(LE_to_TE_5(ee),rr),1);
            diff_h_z_e(rr,qq) = diff_h_rz(l(LE_to_TE_5(ee),rr),2);
        end
    end
    %Finding the derivatives of the determinant of the associated
    %triangular element
    for pp = 1:n_lGaussian_Q
        for qq = 1:n_s_eT
            % Finding the derivative of the determinant of the 
            % Jacobian of the isoparametric map with respect to 
            % each spine length at each Gaussian quadrature point
            diff_h_det_Je(pp,qq) = (diff_h_r_e(:,qq)') ...
                                   *Tmat5{pp} ...
                                   *(z_e-min_z_e) ...
                                   + (r_e'-min_r_e) ...
                                     *Tmat5{pp} ...
                                     *diff_h_z_e(:,qq);
        end
    end
    %Zeroing the derivatives of r' = \partial_\xi r and 
    %z' = \partial_\xi z with respect to the spine lengths at each 
    %Gaussian quadrature point
    diff_h_r_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    diff_h_z_prime_lGaussian = zeros(n_lGaussian_Q,n_s_e);
    %Zeroing the derivatives of the determinant of the Jacobian of 
    %the isoparametric map with respect to each spine length at 
    %each Gaussian quadrature point
    diff_h_det_Jle = zeros(n_lGaussian_Q,n_s_e);
    for pp = 1:n_lGaussian_Q
        %Finding the r' = \partial_\xi r and z' = \partial_\xi z 
        %at each Gaussian quadrature point
        r_prime_lGaussian(pp) = (phi5_eta_lG(:,pp)')*(r_le-min_r_le);
        z_prime_lGaussian(pp) = (phi5_eta_lG(:,pp)')*(z_le-min_z_le);
        normaliser = max(abs(r_prime_lGaussian(pp)), ...
                         abs(z_prime_lGaussian(pp)));
        r_prime_lGaussian_aux = r_prime_lGaussian(pp)/normaliser;
        z_prime_lGaussian_aux = z_prime_lGaussian(pp)/normaliser;
        %Finding the determinant of the Jacobian of the 
        %isoparametric map at each Gaussian quadrature point
        det_Jle(pp) = sqrt(  r_prime_lGaussian_aux^2 ...
                           + z_prime_lGaussian_aux^2 ...
                          ) ...
                      *normaliser;
        det_Je(pp) = (r_e'-min_r_e)*Tmat5{pp}*(z_e-min_z_e);
        for qq = 1:n_s_e
            %Finding the derivatives of r' = \partial_\xi r and 
            %z' = \partial_\xi z with respect to the spine lengths 
            %at each Gaussian quadrature point
            diff_h_r_prime_lGaussian(pp,qq) ...
                = (phi5_eta_lG(:,pp)')*diff_h_r_le(:,qq);
            diff_h_z_prime_lGaussian(pp,qq) ...
                = (phi5_eta_lG(:,pp)')*diff_h_z_le(:,qq);
            %Finding the derivatives of the  determinant of the 
            %Jacobian of the isoparametric map with respect to 
            %each spine length at each Gaussian quadrature point
            diff_h_det_Jle(pp,qq) ...
                = (  r_prime_lGaussian(pp) ...
                     *diff_h_r_prime_lGaussian(pp,qq) ...
                   + z_prime_lGaussian(pp) ...
                     *diff_h_z_prime_lGaussian(pp,qq) ...
                  ) ...
                  /det_Jle(pp);
        end
    end
    %Looping over local nodes to find the contribution to the 
    %respective eq
    for ii = 1:3 
        %looping over local nodes to calculate inner product of 
        %basis function jj by basis function ii
        for jj = 1:6
            er_ijnr = 0;
            er_ijnz = 0;
            ez_ijnr = 0;
            ez_ijnz = 0;
            diff_h_er_ijnr = zeros(1,n_s_eT);
            diff_h_er_ijnz = zeros(1,n_s_eT);
            diff_h_ez_ijnr = zeros(1,n_s_eT);
            diff_h_ez_ijnz = zeros(1,n_s_eT);
            for pp = 1:n_lGaussian_Q
                er_ijnr = er_ijnr ...
                          - alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                er_ijnz = er_ijnz ...
                          + alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                ez_ijnr = ez_ijnr ...
                          + alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp);
                ez_ijnz = ez_ijnz ...
                          - alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp);
                for qq = 1:n_s_eT
                    diff_h_er_ijnr(qq) ...
                        = diff_h_er_ijnr(qq) ...
                          - alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*(z_e-min_z_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_er_ijnz(qq) ...
                        = diff_h_er_ijnz(qq) ...
                          + alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*diff_h_z_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*(z_e-min_z_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_ez_ijnr(qq) ...
                        = diff_h_ez_ijnr(qq) ...
                          + alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *z_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          - alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*(r_e-min_r_e) ...
                            *z_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    diff_h_ez_ijnz(qq) ...
                        = diff_h_ez_ijnz(qq) ...
                          - alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*diff_h_r_e(:,qq) ...
                            *r_prime_lGaussian(pp) ...
                            /det_Je(pp) ...
                          + alpha_5 ...
                            *W_lG(pp) ...
                            *phi5_lG(ii,pp) ...
                            *Tmat5{pp}(jj,:)*(r_e-min_r_e) ...
                            *r_prime_lGaussian(pp) ...
                            *diff_h_det_Je(pp,qq) ...
                            /(det_Je(pp)^2);
                    index = find(spines_e == spines_eT(qq));
                    if isempty(index) == 0
                        diff_h_er_ijnr(qq) ...
                            = diff_h_er_ijnr(qq) ...
                              - alpha_5 ...
                                *W_lG(pp) ...
                                *phi5_lG(ii,pp) ...
                                *Tmat5{pp}(jj,:)*(z_e-min_z_e) ...
                                *diff_h_z_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                        diff_h_er_ijnz(qq) ...
                            = diff_h_er_ijnz(qq) ...
                              + alpha_5 ...
                                *W_lG(pp) ...
                                *phi5_lG(ii,pp) ...
                                *Tmat5{pp}(jj,:)*(z_e-min_z_e) ...
                                *diff_h_r_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                        diff_h_ez_ijnr(qq) ...
                            = diff_h_ez_ijnr(qq) ...
                              + alpha_5 ...
                                *W_lG(pp) ...
                                *phi5_lG(ii,pp) ...
                                *Tmat5{pp}(jj,:)*(r_e-min_r_e) ...
                                *diff_h_z_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                        diff_h_ez_ijnz(qq) ...
                            = diff_h_ez_ijnz(qq) ...
                              - alpha_5 ...
                                *W_lG(pp) ...
                                *phi5_lG(ii,pp) ...
                                *Tmat5{pp}(jj,:)*(r_e-min_r_e) ...
                                *diff_h_r_prime_lGaussian(pp,index) ...
                                /det_Je(pp);
                    end
                end
            end
            diff_u_far_Mr_far(l_5(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                = diff_u_far_Mr_far(l_5(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *er_ijnr ...
                    /3;
            diff_w_far_Mr_far(l_5(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                = diff_w_far_Mr_far(l_5(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *er_ijnz ...
                    /3;
            diff_u_far_Mz_far(l_5(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                = diff_u_far_Mz_far(l_5(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *ez_ijnr ...
                    /3;
            diff_w_far_Mz_far(l_5(ee,ii)-n_v_pre_start_far, ...
                              l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                = diff_w_far_Mz_far(l_5(ee,ii)-n_v_pre_start_far, ...
                                    l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                  - 2 ...
                    *delta_t ...
                    *ez_ijnz ...
                    /3;
            for qq = 1:n_s_eT
                diff_h_Mr_far(l_5(ee,ii)-n_v_pre_start_far,spines_eT(qq)) ...
                    = diff_h_Mr_far(l_5(ee,ii)-n_v_pre_start_far,spines_eT(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_far(l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_er_ijnr(qq) ...
                          + w_far(l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_er_ijnz(qq) ...
                         ) ...
                        /3;
                diff_h_Mz_far(l_5(ee,ii)-n_v_pre_start_far,spines_eT(qq)) ...
                    = diff_h_Mz_far(l_5(ee,ii)-n_v_pre_start_far,spines_eT(qq)) ...
                      - 2 ...
                        *delta_t ...
                        *(  u_far(l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_ez_ijnr(qq) ...
                          + w_far(l(LE_to_TE_5(ee),jj)-n_v_pre_start_far) ...
                            *diff_h_ez_ijnz(qq) ...
                         ) ...
                        /3; 
            end
        end
    end
end

%Jacobian(pre condition attempt)
% if theta_m > change
%     JR = zeros((n_Mr_near+n_Mz_near+n_C_near ...
%                 +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
%                 +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
%                 +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
%                 +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+n_T1_far-1 ...
%                 +2), ...
%                (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
%                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
%                 +n_u_uk_far+n_w_uk_far+n_p_far-n_p_sep ...
%                 +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
%                 +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1 ...
%                 +2));
% else
    JR = zeros((n_Mr_near+n_Mz_near+n_C_near ...
                +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
                +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
                +2*n_v_sep ...
                +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
                +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
                +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+n_T1_far-1 ...
                +1), ...
               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                +n_u_uk_far+n_w_uk_far+n_p_far-n_p_sep ...
                +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1 ...
                +1));
% end

%Loading the Jacobian
%1st row of Jacobian blocks (Mr_near)
    %Derivatives of Mr_near with respect to u_bar
JR(1:n_Mr_near, ...
   1:n_u_uk_near) ...
    = diff_u_bar_Mr_near(Mr_nodes_near,unodes_nums_uk_near);  
    %Derivatives of Mr_near with respect to w_bar
JR(1:n_Mr_near, ...
   n_u_uk_near+1:n_u_uk_near+n_w_uk_near) ...
    = diff_w_bar_Mr_near(Mr_nodes_near,wnodes_nums_uk_near);
    %Derivatives of Mr_near with respect to p_near
JR(1:n_Mr_near, ...
   n_u_uk_near+n_w_uk_near+1 ...
    :n_u_uk_near+n_w_uk_near+n_p_uk_near) ...
    = diff_p_near_Mr_near(Mr_nodes_near,pnodes_nums_uk_near);
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   n_u_uk_near+n_w_uk_near+n_p_uk_near-n_p_sep+1 ...
    :n_u_uk_near+n_w_uk_near+n_p_uk_near) ...
    = JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
         n_u_uk_near+n_w_uk_near+n_p_uk_near-n_p_sep+1 ...
         :n_u_uk_near+n_w_uk_near+n_p_uk_near) ...
      + diff_p_far_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                          pnodes_nums_uk_far(1:n_p_sep)-n_p_pre_start_far);
    %Derivatives of Mr_near with respect to lambda2_near
JR(1:n_Mr_near, ...
   n_u_uk_near+n_w_uk_near+n_p_uk_near ...
   +1 ...
    :n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near) ...
    = diff_lambda2_near_Mr_near(Mr_nodes_near,lambda2nodes_nums_uk_near);
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near)) ...
    = JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near)) ...
      + diff_lambda2_far_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far,1); 
    %Derivatives of Mr_near  with respect to us2_near
JR(1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near)) ...
    = diff_us2_near_Mr_near(Mr_nodes_near,us2nodes_nums_uk_near);
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near)) ...
    = JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near)) ...
      + diff_us2_far_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far,1);
    %Derivatives of Mr_near  with respect to ws2_near
JR(1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = diff_ws2_near_Mr_near(Mr_nodes_near,ws2nodes_nums_uk_near);
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
      + diff_ws2_far_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far,1);
    %Derivatives of Mr_near with respect to h_near
JR(1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near)) ...
    = diff_h_Mr_near(Mr_nodes_near,:);
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix to the derivatives of the residuals centred on
        %the separatrix with respect to the length of the first spine
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far,end);
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix to the derivatives of the residuals centred on
        %the separatrix with respect to the length of the separatrix spine
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      + diff_h_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far,1);
    %Derivatives of Mr_near with respect to sigma1_near
JR(1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
    = diff_sigma1_Mr_near(Mr_nodes_near,sigma1nodes_nums_uk_near);  
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
    = JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
      + diff_sigma1_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far,1);
    %Derivatives of Mr_near with respect to the u_far
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far)) ...
    = diff_u_far_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                        unodes_nums_uk_far-n_v_pre_start_far);  
    %Derivatives of Mr_near with respect to w_far
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                        wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of Mr_near with respect to p_far
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep)) ...
    = diff_p_far_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                        pnodes_nums_uk_far(n_p_sep+1:end)-n_p_pre_start_far);
    %Derivatives of Mr_near with respect to lambda2_far
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1)) ...
    = diff_lambda2_far_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                              lambda2nodes_nums_uk_far-n_spines_pre_start_far);  
    %Derivatives of Mr_near with respect to us2_far
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_far_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                          us2nodes_nums_uk_far-n_spines_pre_start_far);  
    %Derivatives of Mr_near with respect to ws2_far
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_far_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                          ws2nodes_nums_uk_far-n_spines_pre_start_far); 
    %Derivatives of Mr_near with respect to h_far
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                    2:end-1);
    %Derivatives of Mr_near with respect to sigma1_far
JR(n_Mr_near-n_v_sep+1:n_Mr_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1)) ...
    = diff_sigma1_Mr_far(Mr_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                         sigma1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives with respect to theta_c
JR(1, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1 ...
    +1))...
    = diff_theta_c_Mr_near;
% if theta_m > change
%         %Derivatives of Mr_near with respect to A
%     JR(1:n_Mr_near, ...
%         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
%          +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
%          +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%          +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
%          +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1 ...
%          +2)) ...
%         = diff_A_Mr_near(Mr_nodes_near);
% end        
%2nd row of Jacobian blocks (Mz_near)
    %Derivatives of Mz_near with respect to u_bar
JR(n_Mr_near+1:n_Mr_near+n_Mz_near, ...
   1:n_u_uk_near) ...
    = diff_u_bar_Mz_near(Mz_nodes_near,unodes_nums_uk_near);
    %Derivatives of Mz_near with respect to w_bar
JR(n_Mr_near+1:n_Mr_near+n_Mz_near, ...
   n_u_uk_near+1:n_u_uk_near+n_w_uk_near) ...
    = diff_w_bar_Mz_near(Mz_nodes_near,wnodes_nums_uk_near);
    %Derivatives of Mz_near with respect to p_near
JR(n_Mr_near+1:n_Mr_near+n_Mz_near, ...
    n_u_uk_near+n_w_uk_near+1 ...
    :n_u_uk_near+n_w_uk_near+n_p_uk_near) ...
    = diff_p_near_Mz_near(Mz_nodes_near,pnodes_nums_uk_near);
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   n_u_uk_near+n_w_uk_near+n_p_uk_near-n_p_sep+1 ...
   :n_u_uk_near+n_w_uk_near+n_p_uk_near) ...
    = JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
         n_u_uk_near+n_w_uk_near+n_p_uk_near-n_p_sep+1 ...
         :n_u_uk_near+n_w_uk_near+n_p_uk_near) ...
      + diff_p_far_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                          pnodes_nums_uk_far(1:n_p_sep)-n_p_pre_start_far);
    %Derivatives of Mz_near with respect to lambda2_near
JR(n_Mr_near+1:n_Mr_near+n_Mz_near, ...
    n_u_uk_near+n_w_uk_near+n_p_uk_near+1 ...
    :n_u_uk_near+n_w_uk_near+n_p_uk_near+n_lambda2_uk_near) ...
    = diff_lambda2_near_Mz_near(Mz_nodes_near,lambda2nodes_nums_uk_near);
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near)) ...
    = JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near)) ...
      + diff_lambda2_far_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far,1);    
    %Derivatives of Mz_near with respect to us2_near
JR(n_Mr_near+1:n_Mr_near+n_Mz_near, ...
    n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+1 ...
    :n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near) ...
    = diff_us2_near_Mz_near(Mz_nodes_near,us2nodes_nums_uk_near);  
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near)) ...
    = JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near)) ...
      + diff_us2_far_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far,1);  
    %Derivatives of Mz_near with respect to ws2_near
JR(n_Mr_near+1:n_Mr_near+n_Mz_near, ...
    n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+1 ...
    :n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near) ...
    = diff_ws2_near_Mz_near(Mz_nodes_near,ws2nodes_nums_uk_near); 
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
      + diff_ws2_far_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far,1);
    %Derivatives of Mz_near with respect to h_near
JR(n_Mr_near+1:n_Mr_near+n_Mz_near, ...
   n_u_uk_near+n_w_uk_near+n_p_uk_near ...
   +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
   +1 ...
   :n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near) ...
    = diff_h_Mz_near(Mz_nodes_near,:);
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix to the derivatives of the residuals centred on
        %the separatrix with respect to the length of the first spine
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far,end);
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix to the derivatives of the residuals centred on
        %the separatrix with respect to the length of the separatrix spine
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      + diff_h_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far,1);
     %Derivatives of Mz_near with respect to sigma1_near
JR(n_Mr_near+1:n_Mr_near+n_Mz_near, ...
    n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+8*n_spines_near+1 ...
    :n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+9*n_spines_near) ...
    = diff_sigma1_Mz_near(Mz_nodes_near,sigma1nodes_nums_uk_near);    
        %Adding the contribution of the elements in the far field that lie
        %on the separatrix
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
    = JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
      + diff_sigma1_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far,1); 
    %Derivatives of Mr_near with respect to the u_far
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far)) ...
    = diff_u_far_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                        unodes_nums_uk_far-n_v_pre_start_far);  
    %Derivatives of Mr_near with respect to w_far
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                        wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of Mr_near with respect to p_far
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep)) ...
    = diff_p_far_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                        pnodes_nums_uk_far(n_p_sep+1:end)-n_p_pre_start_far);
    %Derivatives of Mr_near with respect to lambda2_far
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1)) ...
    = diff_lambda2_far_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                              lambda2nodes_nums_uk_far-n_spines_pre_start_far); 
    %Derivatives of Mr_near with respect to us2_far
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_far_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                          us2nodes_nums_uk_far-n_spines_pre_start_far);  
    %Derivatives of Mr_near with respect to ws2_far
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_far_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                          ws2nodes_nums_uk_far-n_spines_pre_start_far); 
    %Derivatives of Mr_near with respect to h_far
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                    2:end-1);
    %Derivatives of Mr_near with respect to sigma1_far
JR(n_Mr_near+n_Mz_near-n_v_sep+1:n_Mr_near+n_Mz_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1)) ...
    = diff_sigma1_Mz_far(Mz_nodes_far(1:n_v_sep)-n_v_pre_start_far, ...
                         sigma1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives with respect to theta_c
JR(n_Mr_near+1, ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+9*n_spines_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+9*(n_spines_far-1)-2+1))...
    = diff_theta_c_Mz_near;
% if theta_m > change
%         %Derivatives of Mr_near with respect to A
%     JR(n_Mr_near+1:n_Mr_near+n_Mz_near, ...
%         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%          +n_lambda2_uk_near+9*n_spines_near ...
%          +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%          +n_lambda2_uk_far-1+9*(n_spines_far-1)-2+2)) ...
%         = diff_A_Mz_near(Mz_nodes_near);
% end    
%3rd row of Jacobian blocks (C_near)
    %Derivatives of C_near with respect to u_bar
JR(n_Mr_near+n_Mz_near+1:n_Mr_near+n_Mz_near+n_C_near, ...
    1:n_u_uk_near) ...
    = diff_u_bar_C_near(C_nodes_near,unodes_nums_uk_near);
    %Derivatives of C_near with respect to w_bar
JR(n_Mr_near+n_Mz_near+1:n_Mr_near+n_Mz_near+n_C_near, ...
    n_u_uk_near+1:n_u_uk_near+n_w_uk_near) ...
    = diff_w_bar_C_near(C_nodes_near,wnodes_nums_uk_near);
    %Derivatives of C_near with respect to h_near
JR(n_Mr_near+n_Mz_near+1:n_Mr_near+n_Mz_near+n_C_near, ...
    n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +4*n_spines_near+n_lambda2_uk_near+1 ...
    :n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +5*n_spines_near+n_lambda2_uk_near) ...
    = diff_h_C_near(C_nodes_near,:);
        %Adding terms that correspond to the far-field continuity
        %equation but are on the separatrix
        %First: Derivatives of separatrix terms in the far field 
        %with respect to the first spine
JR(n_Mr_near+n_Mz_near+n_C_near-n_p_sep+1 ...
   :n_Mr_near+n_Mz_near+n_C_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR(n_Mr_near+n_Mz_near+n_C_near-n_p_sep+1 ...
         :n_Mr_near+n_Mz_near+n_C_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_C_far(C_nodes_far(1:n_p_sep)-n_p_pre_start_far,end);
        %Second: Derivatives of separatrix terms in the far field 
        %with respect to the separatrix spine
JR(n_Mr_near+n_Mz_near+n_C_near-n_p_sep+1 ...
   :n_Mr_near+n_Mz_near+n_C_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR(n_Mr_near+n_Mz_near+n_C_near-n_p_sep+1 ...
         :n_Mr_near+n_Mz_near+n_C_near, ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      + diff_h_C_far(C_nodes_far(1:n_p_sep)-n_p_pre_start_far,1); 
        %Derivaties of the continuity residuals in the far field
        %which correspond to the pressure nodes on the separatrix
        %with respect to u_far
JR(n_Mr_near+n_Mz_near+n_C_near-n_p_sep+1 ...
   :n_Mr_near+n_Mz_near+n_C_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far)) ...
    = diff_u_far_C_far(C_nodes_far(1:n_p_sep)-n_p_pre_start_far, ...
                       unodes_nums_uk_far-n_v_pre_start_far); 
        %Derivaties of the continuity residuals in the far field
        %which correspond to the pressure nodes on the separatrix
        %with respect to w_far
JR(n_Mr_near+n_Mz_near+n_C_near-n_p_sep+1 ...
   :n_Mr_near+n_Mz_near+n_C_near, ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_C_far(C_nodes_far(1:n_p_sep)-n_p_pre_start_far, ...
                       wnodes_nums_uk_far-n_v_pre_start_far);    
        %Derivaties of the continuity residuals in the far field
        %which correspond to the pressure nodes on the separatrix
        %with respect to h_far
JR(n_Mr_near+n_Mz_near+n_C_near-n_p_sep+1 ...
    :n_Mr_near+n_Mz_near+n_C_near, ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_C_far(C_nodes_far(1:n_p_sep)-n_p_pre_start_far,2:end-1);
%4th row of Jacobian blocks (S2_near)
    %Derivatives of S2_near with respect to u_bar  
JR((n_Mr_near+n_Mz_near+n_C_near ... 
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near), ...
   1:n_u_uk_near) ...
    = diff_u_bar_S2_near(S2_nodes_near,unodes_nums_uk_near); 
    %Derivatives of S2_near with respect to w_bar  
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near), ...
   n_u_uk_near+1:n_u_uk_near+n_w_uk_near) ...
    = diff_w_bar_S2_near(S2_nodes_near,wnodes_nums_uk_near);   
    %Derivatives of S2_near with respect to us2_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near)) ...
    = diff_us2_S2_near(S2_nodes_near,us2nodes_nums_uk_near);  
        %Adding the contribution of the far-field line element to
        %the derivative of S2 at the joint, with respect to us2_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near)) ...
      + diff_us2_S2_far(1,1);          
    %Derivatives of S2_near with respect to ws2_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = diff_ws2_S2_near(S2_nodes_near,ws2nodes_nums_uk_near);   
        %Adding the contribution of the far-field line element to
        %the derivative of S2 at the joint, with respect to ws2_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
      + diff_ws2_S2_far(1,1);          
    %Derivatives of S2_near with respect to sigma2_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near)) ...
    = diff_sigma2_S2_near(S2_nodes_near,sigma2nodes_nums_uk_near);    
        %Adding the contribution of the far-field line element to
        %the derivative of S2 at the joint, with respect to
        %sigma2_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near)) ...
      + diff_sigma2_S2_far(1,1); 
    %Derivatives of S2_near with respect to h_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_S2_near(S2_nodes_near,:);
        %Adding the contribution of the far-field line element to
        %the derivative of S2 at the joint, with respect to h_n
        %First: we add the derivative with respect to the first
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_S2_far(1,end);
        %Then: we add the derivative with respect to the separatrix
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      + diff_h_S2_far(1,1);
    %Derivatives of S2_near with respect to u_far  
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far)) ...
    = diff_u_far_S2_far(1,unodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of S2_near with respect to w_far  
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_S2_far(1,wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of S2_near with respect to us2_f  
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_S2_far(1,us2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of S2_near with respect to ws2_f  
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_S2_far(1,ws2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of S2_near with respect to sigma2_f  
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1)) ...
    = diff_sigma2_S2_far(1,sigma2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of S2_near with respect to h_f  
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1)) ...
    = diff_h_S2_far(1,2:end-1);
% if theta_m > change
%         %Derivatives of Mr_near with respect to A
%     JR((n_Mr_near+n_Mz_near+n_C_near ...
%         +1) ...
%        :(n_Mr_near+n_Mz_near+n_C_near ...
%          +n_S2_near), ...
%        (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%         +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
%         +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
%         +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%         +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
%         +n_spines_far-1+n_us1_uk_far-1+n_ws2_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1 ...
%         +2)) ...
%         = diff_A_S2_near(S2_nodes_near);
% end     
%5th row of Jacobian blocks (I_near)
    %Derivatives of I_near with respect to us2_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near)) ...
    = diff_us2_I_near(I_nodes_near,us2nodes_nums_uk_near);
        %Adding the contribution of the far-field line element to
        %the derivative of I at the joint, with respect to us2_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near)) ...
      +diff_us2_I_far(1,1);
    %Derivatives of I_near with respect to ws2_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = diff_ws2_I_near(I_nodes_near,ws2nodes_nums_uk_near);
        %Adding the contribution of the far-field line element to
        %the derivative of I at the joint, with respect to ws2_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...                   
          +n_S2_near+n_I_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
      + diff_ws2_I_far(1,1);
    %Derivatives of I_near with respect to h_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_I_near(I_nodes_near,:);
        %Adding the contribution of the far-side line-element at 
        %the junction to the residual of the impermeability
        %condition at the junction point
        %First: We add the derivative with respect to first spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_I_far(1,end);
        %Then we add the derivative with respect to 
        %separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      + diff_h_I_far(1,1);
        %Derivative with respect to us2_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_I_far(1,us2nodes_nums_uk_far-n_spines_pre_start_far);
        %Derivative with respect to ws2_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_I_far(1,ws2nodes_nums_uk_far-n_spines_pre_start_far);
        %Derivative with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1)) ...
    = diff_h_I_far(1,2:end-1); 
%6th row of the jacobian (E2_near)
    %Derivatives of E2_near with respect to u_bar
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near), ...
   1:n_u_uk_near) ...
    = diff_u_bar_E2_near(E2_nodes_near,unodes_nums_uk_near);
    %Derivatives of E2_near with respect to w_bar
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near), ...
   n_u_uk_near+1:n_u_uk_near+n_w_uk_near) ...
    = diff_w_bar_E2_near(E2_nodes_near,wnodes_nums_uk_near);
    %Derivatives of E2_near with respect to us2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near)) ...
    = diff_us2_E2_near(E2_nodes_near,us2nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near)) ...
      + diff_us2_E2_far(1,1);        
    %Derivatives of E2_near with respect to ws2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = diff_ws2_E2_near(E2_nodes_near,ws2nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
           +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
      + diff_ws2_E2_far(1,1);
    %Derivatives of E2_near with respect to rhos2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near)) ...
    = diff_rhos2_E2_near(E2_nodes_near,rhos2nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near)) ...
      + diff_rhos2_E2_far(1,1);
    %Derivatives of E2_near with respect to h_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_E2_near(E2_nodes_near,:);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
        %First: we add the contribution to the derivative with
        %respect to the first spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_E2_far(1,end);
        %The: we add the contribution to the derivative with
        %respect to the separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      +diff_h_E2_far(1,1);
    %Derivatives of E2_near with respect to us1_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+1) ...
  ) ...
    = diff_us1_E2_near;
    %Derivatives of E2_near with respect to ws1_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+1) ...
  ) ...
    = diff_ws1_E2_near;
    %Derivatives of E2_near with respect to rhos1_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+1) ...
  ) ...
    = diff_rhos1_E2_near;  
    %Derivatives of the E2 residual at the junction node with
    %respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far)) ...
    = diff_u_far_E2_far(1,unodes_nums_uk_far-n_v_pre_start_far); 
    %Derivatives of the E2 residual at the junction node with
    %respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_E2_far(1,wnodes_nums_uk_far-n_v_pre_start_far); 
    %Derivatives of the E2 residual at the junction node with
    %respect to us2_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_E2_far(1,us2nodes_nums_uk_far-n_spines_pre_start_far);  
    %Derivatives of the E2 residual at the junction node with
    %respect to ws2_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_E2_far(1,ws2nodes_nums_uk_far-n_spines_pre_start_far);  
    %Derivatives of the E2 residual at the junction node with
    %respect to rhos2_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1)) ...
    = diff_rhos2_E2_far(1,rhos2nodes_nums_uk_far-n_spines_pre_start_far); 
    %Derivatives of the E2 residual at the junction node with
    %respect to h_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1)) ...
    = diff_h_E2_far(1,2:end-1); 
    %Derivative of E2_near with respect to theta_c
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1 ...
    +1) ...
  ) ...
    = diff_theta_c_E2_near;
% if theta_m > change
%         %Derivatives of E2_near with respect to A
%     JR((n_Mr_near+n_Mz_near+n_C_near ...
%         +n_S2_near+n_I_near+1) ...
%        :(n_Mr_near+n_Mz_near+n_C_near ...
%          +n_S2_near+n_I_near+n_E2_near), ...
%        (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%         +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
%         +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
%         +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%         +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
%         +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1 ...
%         +2)) ...
%         = diff_A_E2_near; 
% end
%7th row of the Jacobian (D2_near)
    %Derivatives of D2_near with respect to us2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near)) ...
    = diff_us2_D2_near(D2_nodes_near,:);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
          (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
           +n_lambda2_uk_near+n_us2_uk_near)) ...
      + diff_us2_D2_far(1,1);
    %Derivatives of D2_near with respect to ws2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = diff_ws2_D2_near(D2_nodes_near,:);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
      + diff_ws2_D2_far(1,1);
    %Derivatives of D2_near with respect to rhos2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near)) ...
    = diff_rhos2_D2_near(D2_nodes_near,:);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near)) ...
      + diff_rhos2_D2_far(1,1);
    %Derivatives of D2_near with respect to h_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near)) ...
    = diff_h_D2_near(D2_nodes_near,:);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
        %First we add the effect on the derivative with respect to
        %the first spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_D2_far(1,end);
        %Then we add the effect on the derivative with respect to
        %the separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      + diff_h_D2_far(1,1);
    %Derivatives of D2_near with respect to us1_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+1) ...
  ) ...
    = diff_us1_D2_near;
    %Derivatives of D2_near with respect to ws1_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+1) ...
  ) ...
    = diff_ws1_D2_near;
    %Derivatives of D2_near with respect to rhos1_n
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+1) ...
  ) ...
    = diff_rhos1_D2_near;    
    %Derivatives of D2_near with respect to us2_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_D2_far(1,us2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of D2_near with respect to ws2_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_D2_far(1,ws2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of D2_near with respect to rhos2_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1)) ...
    = diff_rhos2_D2_far(1,rhos2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of D2_near with respect to h_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1)) ...
    = diff_h_D2_far(1,2:end-1);
    %Derivative of D2_near with respect to theta_c
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1 ...
    +1) ...
  ) ...
    = diff_theta_c_D2_near;
%8th row of the Jacobian
    %Derivatives of T2_near with respect to rhos2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near)) ...
    = Cs*eye(n_spines_near);
    %Derivatives of T2_near with respect to sigma2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near)) ...
    = eye(n_spines_near);
%9th row of Jacobian blocks (S1_near)
    %Derivatives of S1_near with respect to u_bar
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near), ...
   1:n_u_uk_near) ...
    = diff_u_bar_S1_near(S1_nodes_near,unodes_nums_uk_near);
    %Derivatives of S1_near with respect to w_bar
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near), ...
   n_u_uk_near+1:n_u_uk_near+n_w_uk_near) ...
    = diff_w_bar_S1_near(S1_nodes_near,wnodes_nums_uk_near);
    %Derivatives of S1_near with respect to h_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_S1_near(S1_nodes_near,:);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
        %First we add the effect on the derivative with respect to
        %the first spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_S1_far(1,end);
        %Then we add the effect on the derivative with respect to
        %the separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      + diff_h_S1_far(1,1);
    %Derivatives of S1_near with respect to us1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near)) ...
    = diff_us1_S1_near(S1_nodes_near,us1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near)) ...
      + diff_us1_S1_far(1,1);
    %Derivatives of S1_near with respect to ws1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = diff_ws1_S1_near(S1_nodes_near,ws1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
      + diff_ws1_S1_far(1,1);
    %Derivatives of S1_near with respect to sigma1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
    = diff_sigma1_S1_near(S1_nodes_near,sigma1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
      + diff_sigma1_S1_far(1,1);
    %Derivatives of the S1 residual at the junction node with
    %respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far)) ...
    = diff_u_far_S1_far(1,unodes_nums_uk_far-n_v_pre_start_far); 
    %Derivatives of the S1 residual at the junction node with
    %respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_S1_far(1,wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of S1_near with respect to h_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1)) ...
    = diff_h_S1_far(1,2:end-1); 
    %Derivatives of S1_near with respect to us1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1)) ...
    = diff_us1_S1_far(1,us1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of S1_near with respect to ws1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws1_S1_far(1,ws1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of S1_near with respect to sigma1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1)) ...
    = diff_sigma1_S1_far(1,sigma1nodes_nums_uk_far-n_spines_pre_start_far);
% if theta_m > change
%         %Derivatives of S1_near with respect to A
%     JR((n_Mr_near+n_Mz_near+n_C_near ...
%         +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
%         +1) ...
%        :(n_Mr_near+n_Mz_near+n_C_near ...
%          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
%          +n_S1_near), ...
%        (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%         +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
%         +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
%         +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%         +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
%         +n_spines_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1 ...
%         +2)) ...
%         = diff_A_S1_near(S1_nodes_near); 
% end 
%10th row of Jacobian blocks (K_near)
    %Derivatives of K_near with respect to h_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near), ...
     n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +1 ...
     :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
       +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
       +n_spines_near)) ...
    = diff_h_K_near(K_nodes_near,:);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
        %First we add the effect on the derivative with respect to
        %the first spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_K_far(1,end);
        %Then we add the effect on the derivative with respect to
        %the separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      + diff_h_K_far(1,1);
    %Derivatives of K_near with respect to us1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near)) ...
    = diff_us1_K_near(K_nodes_near,us1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near)) ...
      + diff_us1_K_far(1,1);
    %Derivatives of K_near with respect to ws1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = diff_ws1_K_near(K_nodes_near,ws1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near), ...
          (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
           +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
           +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
      + diff_ws1_K_far(1,1);  
    %Derivatives of K_near with respect to h_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1)) ...
    = diff_h_K_far(1,2:end-1); 
    %Derivatives of K_near with respect to us1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1)) ...
    = diff_us1_K_far(1,us1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of K_near with respect to ws1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1)) ...
    = diff_ws1_K_far(1,ws1nodes_nums_uk_far-n_spines_pre_start_far); 
%11th row of Jacobian blocks (E1_near)
    %Derivatives of E1_near with respect to u_bar
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near), ...
   1:n_u_uk_near) ...
    = diff_u_bar_E1_near(E1_nodes_near,unodes_nums_uk_near);
    %Derivatives of E1_near with respect to w_bar
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+1:n_u_uk_near+n_w_uk_near)) ...
    = diff_w_bar_E1_near(E1_nodes_near,wnodes_nums_uk_near);
    %Derivatives of E1_near with respect to us2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+1) ...
  ) ...
    = diff_us2_E1_near;
    %Derivatives of E1_near with respect to ws2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+1) ...
  ) ...
    = diff_ws2_E1_near;
    %Derivatives of E1_near with respect to rhos2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+1) ...
  ) ...
    = diff_rhos2_E1_near;
    %Derivatives of E1_near with respect to h_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_E1_near;
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
        %First we add the effect on the derivative with respect to
        %the first spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near+n_E1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_E1_far(1,end);
        %Then we add the effect on the derivative with respect to
        %the separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near+n_E1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      + diff_h_E1_far(1,1);
    %Derivatives of E1_near with respect to us1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near)) ...
    = diff_us1_E1_near(E1_nodes_near,us1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near+n_E1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near)) ...
      + diff_us1_E1_far(1,1);
    %Derivatives of E1_near with respect to ws1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = diff_ws1_E1_near(E1_nodes_near,ws1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near+n_E1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
      + diff_ws1_E1_far(1,1);    
    %Derivatives of E1_near with respect to rhos1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near)) ...
    = diff_rhos1_E1_near(E1_nodes_near,rhos1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near+n_E1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near)) ...
      + diff_rhos1_E1_far(1,1);   
    %Derivatives of the E1 residual at the junction node with
    %respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far)) ...
    = diff_u_far_E1_far(1,unodes_nums_uk_far-n_v_pre_start_far); 
    %Derivatives of the E1 residual at the junction node with
    %respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
    n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+1 ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_E1_far(1,wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of E1_near with respect to h_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1)) ...
    = diff_h_E1_far(1,2:end-1); 
    %Derivatives of E1_near with respect to us1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1)) ...
    = diff_us1_E1_far(1,us1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of E1_near with respect to ws1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1)) ...
    = diff_ws1_E1_far(1,ws1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of E1_near with respect to rhos1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1)) ...
    = diff_rhos1_E1_far(1,rhos1nodes_nums_uk_far-n_spines_pre_start_far);
% if theta_m > change
%         %Derivatives of E1_near with respect to A
%     JR((n_Mr_near+n_Mz_near+n_C_near ...
%         +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
%         +n_S1_near+n_K_near+1) ...
%        :(n_Mr_near+n_Mz_near+n_C_near ...
%          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
%          +n_S1_near+n_K_near+n_E1_near), ...
%        (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%         +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
%         +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
%         +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%         +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
%         +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1 ...
%         +2)) ...
%         = diff_A_E1_near; 
% end
%12th Jacobian line
    %Derivatives of D1_near with respect to us2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+1) ...
  ) ...
    = diff_us2_D1_near;
    %Derivatives of D1_near with respect to ws2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+1) ...
  ) ...
    = diff_ws2_D1_near;
    %Derivatives of D1_near with respect to rhos2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+1) ...
  ) ...
    = diff_rhos2_D1_near;
    %Derivatives of D1_near with respect to h_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_D1_near(D1_nodes_near,:);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
        %First we add the effect on the derivative with respect to
        %the first spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +1)) ...
      + diff_h_D1_far(1,end);
        %Then we add the effect on the derivative with respect to
        %the separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near)) ...
      + diff_h_D1_far(1,1);
    %Derivatives of E1_near with respect to us1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near)) ...
    = diff_us1_D1_near(D1_nodes_near,us1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near)) ...
      + diff_us1_D1_far(1,1);
    %Derivatives of E1_near with respect to ws1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = diff_ws1_D1_near(D1_nodes_near,ws1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
      + diff_ws1_D1_far(1,1);    
    %Derivatives of E1_near with respect to rhos1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near)) ...
    = diff_rhos1_D1_near(D1_nodes_near,rhos1nodes_nums_uk_near);
        %Adding the contribution of the far-field line-element to
        %the residual centred at the junction
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near)) ...
    = JR((n_Mr_near+n_Mz_near+n_C_near ...
          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
          +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
         (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
          +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
          +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near)) ...
      + diff_rhos1_D1_far(1,1);   
    %Derivatives of D1_near with respect to h_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1)) ...
    = diff_h_D1_far(1,2:end-1); 
    %Derivatives of D1_near with respect to us1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1)) ...
    = diff_us1_D1_far(1,us1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of D1_near with respect to ws1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1)) ...
    = diff_ws1_D1_far(1,ws1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of D1_near with respect to rhos1_f
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1)) ...
    = diff_rhos1_D1_far(1,rhos1nodes_nums_uk_far-n_spines_pre_start_far);
%13th row of the Jacobian
    %Derivatives of T2_near with respect to rhos2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near)) ...
    = Cg*eye(n_spines_near);
    %Derivatives of T2_near with respect to sigma2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
    = eye(n_spines_near); 
%14th row of Jacobian blocks (Cu)
    %Derivatives of Cu with respect to u_bar
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +n_v_sep), ...
   1:n_u_uk_near) ...
    = diff_u_bar_Cu(:,unodes_nums_uk_near);
    %Derivatives of Cu with respect to h_near
    %This one here will require another set of terms when the
    %wetted surface if curved
    %First, the derivative with respect to h
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ... ...
     +n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_Cu;
    %Derivatives of Cu with respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far)) ...
    = diff_u_far_Cu(:,unodes_nums_uk_far-n_v_pre_start_far);
% if theta_m > change
%         %Derivatives of Cu with respect to A
%     JR((n_Mr_near+n_Mz_near+n_C_near ...
%         +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
%         +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
%         +1) ...
%        :(n_Mr_near+n_Mz_near+n_C_near ...
%          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
%          +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
%          +n_v_sep), ...
%        (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%         +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
%         +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
%         +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%         +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
%         +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+n_sigma1_uk_far-1 ...
%         +2)) ...
%         = diff_A_Cu;
% end
%15th row of Jacobian blocks (Cw)
    %Derivatives of Cw with respect to w_bar
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +n_v_sep+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep), ...
   (n_u_uk_near+1:n_u_uk_near+n_w_uk_near)) ...
    = diff_w_bar_Cw(:,wnodes_nums_uk_near);
    %Derivatives of Cw with respect to h_near
    %This one here will require another set of terms when the
    %wetted surface if curved
    %First, the derivative with respect to h0
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +n_v_sep+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = diff_h_Cw;
    %Derivatives of Cw with respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +n_v_sep+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_Cw(:,wnodes_nums_uk_far-n_v_pre_start_far);
% if theta_m > change
%         %Derivatives of Cw with respect to A
%     JR((n_Mr_near+n_Mz_near+n_C_near ...
%         +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
%         +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
%         +n_v_sep+1) ...
%        :(n_Mr_near+n_Mz_near+n_C_near ...
%          +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
%          +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
%          +2*n_v_sep), ...
%        (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%         +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
%         +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
%         +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%         +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
%         +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+n_sigma1_uk_far-1 ...
%         +2)) ...
%         = diff_A_Cw;
% end
%16th row of Jacobian blocks (Mr_far)
        %First we include the columns that corresponds to the 
        %derivatives of Mr_far with respect to p at the 
        %separatrix
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   n_u_uk_near+n_w_uk_near+n_p_uk_near-n_p_sep+1 ...
   :n_u_uk_near+n_w_uk_near+n_p_uk_near) ...
    = diff_p_far_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                        pnodes_nums_uk_far(1:n_p_sep)-n_p_pre_start_far);
        %Then we include the column that corresponds to the 
        %derivative of Mr_far with respect to lambda_2 at the 
        %separatrix
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near)) ...
    = diff_lambda2_far_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,1);
        %Then we include the column that corresponds to the 
        %derivative of Mr_far with respect to us_2 at the 
        %separatrix
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near)) ...
    = diff_us2_far_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,1);
        %Then we include the column that corresponds to the 
        %derivative of Mr_far with respect to ws_2 at the 
        %separatrix
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = diff_ws2_far_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,1);
        %Then we include the column that corresponds to the 
        %derivative of Mr_far with respect to the length of the 
        %first spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = diff_h_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,end);
        %Then the column that corresponds to the derivatives of 
        %Mr_far with respect to the length of the separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = diff_h_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,1);
        %Then we include the column that corresponds to the 
        %derivative of Mr_far with respect to sigma_1 at the 
        %separatrix
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
    = diff_sigma1_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,1);
        %And then all the derivatives with respect to the far field
        %variables
    %Derivatives of Mr_far with respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far)) ...
    = diff_u_far_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                        unodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of Mr_far with respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                        wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of Mr_far with respect to p_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep)) ...
    = diff_p_far_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                        pnodes_nums_uk_far(n_p_sep+1:end)-n_p_pre_start_far);
    %Derivatives of Mr_far with respect to lambda2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1)) ...
    = diff_lambda2_far_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                              lambda2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of Mr_far with respect to us2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_far_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                          us2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of Mr_far with respect to ws2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_far_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                          ws2nodes_nums_uk_far-n_spines_pre_start_far);    
    %Derivatives of Mr_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1)) ...
    = diff_h_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,2:end-1);
    %Derivatives of Mr_far with respect to sigma1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...            
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+n_sigma1_uk_far-1)) ...
    = diff_sigma1_Mr_far(Mr_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                         sigma1nodes_nums_uk_far-n_spines_pre_start_far);                        
%17th row of Jacobian blocks (Mz_far)
        %First we include the columns that corresponds to the 
        %derivatives of Mz_far with respect to p at the 
        %separatrix
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    n_u_uk_near+n_w_uk_near+n_p_uk_near-n_p_sep+1 ...
    :n_u_uk_near+n_w_uk_near+n_p_uk_near) ...
    = diff_p_far_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                        pnodes_nums_uk_far(1:n_p_sep)-n_p_pre_start_far);
        %Then we include the column that corresponds to the 
        %derivative of Mz_far with respect to lambda_2 at the 
        %separatrix
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...            
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near) ...
    = diff_lambda2_far_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,1);
        %Then we include the column that corresponds to the 
        %derivative of Mz_far with respect to us_2 at the 
        %separatrix
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...            
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
      n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near) ...
    = diff_us2_far_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,1);
        %Then we include the column that corresponds to the 
        %derivative of Mz_far with respect to ws_2 at the 
        %separatrix
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...            
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
      n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near) ...
    = diff_ws2_far_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,1);
        %Then we include the column that corresponds to the 
        %derivative of Mz_far with respect to the length of the 
        %first spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +1)) ...
    = diff_h_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,end);
        %Then the column that corresponds to the derivatives of 
        %Mz_far with respect to the length of the separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near) ...
    = diff_h_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,1);
        %Then we include the column that corresponds to the 
        %derivative of Mz_far with respect to sigma_1 at the 
        %separatrix
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
    = diff_sigma1_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,1);
    %Derivatives of Mz_far with respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far)) ...
    = diff_u_far_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                          unodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of Mz_far with respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                        wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of Mz_far with respect to p_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep)) ...
    = diff_p_far_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                        pnodes_nums_uk_far(n_p_sep+1:end)-n_p_pre_start_far);
    %Derivatives of Mz_far with respect to lambda2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1)) ...
    = diff_lambda2_far_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                              lambda2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of Mz_far with respect to us2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_far_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                          us2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of Mz_far with respect to ws2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_far_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                          ws2nodes_nums_uk_far-n_spines_near+1);
    %Derivatives of Mz_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far,2:end-1);
    %Derivatives of Mz_far with respect to sigma1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+9*n_spines_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+9*n_spines_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+n_sigma1_uk_far-1)) ...
    = diff_sigma1_Mz_far(Mz_nodes_far(n_v_sep+1:end)-n_v_pre_start_far, ...
                         sigma1nodes_nums_uk_far-n_spines_pre_start_far);  
%18th row of Jacobian blocks (C_far)
        %First we include the column that corresponds to the 
        %derivative of C with respect to the length of the first 
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = diff_h_C_far(C_nodes_far(n_p_sep+1:end)-n_p_pre_start_far,end);
        %Then we include the column that corresponds to the 
        %derivative of C with respect to the length of the shared 
        %separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = diff_h_C_far(C_nodes_far(n_p_sep+1:end)-n_p_pre_start_far,1);
        %And then all the derivatives with respect to the far field
        %variables
    %Derivatives of C_far with respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far)) ...
    = diff_u_far_C_far(C_nodes_far(n_p_sep+1:end)-n_p_pre_start_far, ...
                       unodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of C_far with respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_C_far(C_nodes_far(n_p_sep+1:end)-n_p_pre_start_far, ...
                       wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of C_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_C_far(C_nodes_far(n_p_sep+1:end)-n_p_pre_start_far,2:end-1);
%19th row of the Jacobian (S2_far)
    %Derivatives of S2_f with respect to us2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near)) ...
    = diff_us2_S2_far(S2_nodes_far-n_spines_pre_start_far,1);
    %Derivatives of S2_f with respect to ws2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = diff_ws2_S2_far(S2_nodes_far-n_spines_pre_start_far,1);
    %Derivatives of S2_f with respect to sigma2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near)) ...
    = diff_sigma2_S2_far(S2_nodes_far-n_spines_pre_start_far,1);
    %Derivatives of S2_f with respect to h_near
        %First, we add the derivatives with respect to the first
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +1)) ...
    = diff_h_S2_far(S2_nodes_far-n_spines_pre_start_far,end);
        %Then, the derivative with respect to the separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_S2_far(S2_nodes_far-n_spines_pre_start_far,1);
    %Derivatives of S2_far with respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far)) ...
    = diff_u_far_S2_far(S2_nodes_far-n_spines_pre_start_far, ...
                        unodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of S2_far with respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_S2_far(S2_nodes_far-n_spines_pre_start_far, ...
                        wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of S2_far with respect to us2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_S2_far(S2_nodes_far-n_spines_pre_start_far, ...
                      us2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of S2_far with respect to ws2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_S2_far(S2_nodes_far-n_spines_pre_start_far, ...
                      ws2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of S2_far with respect to sigma2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1)) ...
    = diff_sigma2_S2_far(S2_nodes_far-n_spines_pre_start_far, ...
                         sigma2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of S2_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ... 
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ... 
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_S2_far(S2_nodes_far-n_spines_pre_start_far,2:end-1);
%20th row of Jacobian blocks (I_far)
        %First we include the column that corresponds to the 
        %derivative of I with respect to the length of the first 
        %spine
    %Derivatives of I_f with respect to us2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near)) ...
    = diff_us2_I_far(I_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of I_f with respect to ws2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = diff_ws2_I_far(I_nodes_far-n_spines_pre_start_far,1);
    %Derivatives of I_f with respect to h_near
        %First, we add the derivatives with respect to the first
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +1)) ...
    = diff_h_I_far(2:end,end);
        %Then, the derivative with respect to the last spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_I_far(I_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of I_far with respect to us2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_I_far(I_nodes_far-n_spines_pre_start_far, ...
                     us2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of I_far with respect to ws2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_I_far(I_nodes_far-n_spines_pre_start_far, ...
                     ws2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of I_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_I_far(I_nodes_far-n_spines_pre_start_far,2:end-1);
%21st row of blocks (E2_far)
    %Derivatives of E2_f with respect to us2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near)) ...
    = diff_us2_E2_far(E2_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of E2_f with respect to ws2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = diff_ws2_E2_far(E2_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of E2_f with respect to rhos2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near)) ...
    = diff_rhos2_E2_far(E2_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of E2_f with respect to h_near
        %First, we add the derivatives with respect to the first
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +1)) ...
    = diff_h_E2_far(E2_nodes_far-n_spines_pre_start_far,end);
        %Then, the derivative with respect to the last spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_E2_far(2:end,1); 
    %Derivatives of E2_far with respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far)) ...
    = diff_u_far_E2_far(E2_nodes_far-n_spines_pre_start_far, ...
                        unodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of E2_far with respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_E2_far(E2_nodes_far-n_spines_pre_start_far, ...
                        wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of E2_far with respect to us2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_E2_far(E2_nodes_far-n_spines_pre_start_far, ...
                      us2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of E2_far with respect to ws2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_E2_far(E2_nodes_far-n_spines_pre_start_far, ...
                      ws2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of E2_far with respect to rhos2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1)) ...
    = diff_rhos2_E2_far(E2_nodes_far-n_spines_pre_start_far, ...
                        rhos2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of E2_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_E2_far(E2_nodes_far-n_spines_pre_start_far,2:end-1);
%22nd row of the Jacobian
    %Derivatives of D2_f with respect to us2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +n_S2_far-1+n_I_far-1+n_E2_far-1+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near)) ...
    = diff_us2_D2_far(D2_nodes_far-n_spines_pre_start_far,1);
    %Derivatives of D2_f with respect to ws2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near)) ...
    = diff_ws2_D2_far(D2_nodes_far-n_spines_pre_start_far,1);
    %Derivatives of D2_f with respect to rhos2_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +n_S2_far-1+n_I_far-1+n_E2_far-1+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near)) ...
    = diff_rhos2_D2_far(D2_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of D2_f with respect to h_near
        %First, we add the derivatives with respect to the first
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +n_S2_far-1+n_I_far-1+n_E2_far-1+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = diff_h_D2_far(D2_nodes_far-n_spines_pre_start_far,end); 
        %Then, the derivative with respect to the last spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +n_S2_far-1+n_I_far-1+n_E2_far-1+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near)) ...
    = diff_h_D2_far(D2_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of D2_far with respect to us2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1)) ...
    = diff_us2_D2_far(D2_nodes_far-n_spines_pre_start_far, ...
                      us2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of D2_far with respect to ws2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1)) ...
    = diff_ws2_D2_far(D2_nodes_far-n_spines_pre_start_far, ...
                      ws2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of D2_far with respect to rhos2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1)) ...
    = diff_rhos2_D2_far(D2_nodes_far-n_spines_pre_start_far, ...
                        rhos2nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of D2_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_D2_far(D2_nodes_far-n_spines_pre_start_far,2:end-1);
%23rd row of Jacobian blocks
    %Derivatives of T2_far with respect to rhos2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1)) ...
    = Cs*eye(n_spines_far-1);
    %Derivatives of T2_far with respect to sigma2_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1)) ...
    = eye(n_spines_far-1);
%24th line of Jacobian blocks
    %Derivatives of S1_f with respect to h_near
        %First, we add the derivatives with respect to the first
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +1)) ...
    = diff_h_S1_far(S1_nodes_far-n_spines_pre_start_far,end); 
        %Then, the derivative with respect to the last spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_S1_far(S1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of S1_f with respect to us1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near)) ...
    = diff_us1_S1_far(S1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of S1_f with respect to ws1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = diff_ws1_S1_far(S1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of S1_f with respect to sigma1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near)) ...
    = diff_sigma1_S1_far(S1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of S1_far with respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far)) ...
    = diff_u_far_S1_far(S1_nodes_far-n_spines_pre_start_far, ...
                        unodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of S1_far with respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_S1_far(S1_nodes_far-n_spines_pre_start_far, ...
                        wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of S1_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_S1_far(S1_nodes_far-n_spines_pre_start_far,2:end-1);
    %Derivatives of S1_far with respect to us1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1)) ...
    = diff_us1_S1_far(S1_nodes_far-n_spines_pre_start_far, ...
                      us1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of S1_far with respect to ws1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1)) ...
    = diff_ws1_S1_far(S1_nodes_far-n_spines_pre_start_far, ...
                      ws1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of S1_far with respect to sigma1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+n_sigma1_uk_far-1)) ...
    = diff_sigma1_S1_far(S1_nodes_far-n_spines_pre_start_far, ...
                         sigma1nodes_nums_uk_far-n_spines_pre_start_far);
%25th row of Jacobian blocks (K_far)
    %Derivatives of K_f with respect to h_near
        %First, we add the derivatives with respect to the first
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...            
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +1)) ...
    = diff_h_K_far(K_nodes_far-n_spines_pre_start_far,end); 
        %Then, the derivative with respect to the last spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_K_far(2:end,1); 
    %Derivatives of K_f with respect to us1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near)) ...
    = diff_us1_K_far(K_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of K_f with respect to ws1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = diff_ws1_K_far(K_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of K_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_K_far(K_nodes_far-n_spines_pre_start_far,2:end-1);
    %Derivatives of K_far with respect to us1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1)) ...
    = diff_us1_K_far(K_nodes_far-n_spines_pre_start_far, ...
                     us1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of K_far with respect to ws1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1)) ...
    = diff_ws1_K_far(K_nodes_far-n_spines_pre_start_far, ...
                     ws1nodes_nums_uk_far-n_spines_pre_start_far);
%26th row of Jacobian blocks (E1_far)
    %Derivatives of E1_f with respect to h_near
        %First, we add the derivatives with respect to the first
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +1)) ...
    = diff_h_E1_far(E1_nodes_far-n_spines_pre_start_far,end); 
        %Then, the derivative with respect to the separatrix spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_E1_far(E1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of E1_f with respect to us1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near)) ...
    = diff_us1_E1_far(E1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of E1_f with respect to ws1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = diff_ws1_E1_far(E1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of E1_f with respect to rhos1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near)) ...
    = diff_rhos1_E1_far(E1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of E1_far with respect to u_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far)) ...
    = diff_u_far_E1_far(E1_nodes_far-n_spines_pre_start_far, ...
                        unodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of E1_far with respect to w_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far)) ...
    = diff_w_far_E1_far(E1_nodes_far-n_spines_pre_start_far, ...
                        wnodes_nums_uk_far-n_v_pre_start_far);
    %Derivatives of E1_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_E1_far(E1_nodes_far-n_spines_pre_start_far,2:end-1);
    %Derivatives of E1_far with respect to us1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1)) ...
    = diff_us1_E1_far(E1_nodes_far-n_spines_pre_start_far, ...
                      us1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of E1_far with respect to ws1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1)) ...
    = diff_ws1_E1_far(E1_nodes_far-n_spines_pre_start_far, ...
                      ws1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of E1_far with respect to rhos1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1)) ...
    = diff_rhos1_E1_far(E1_nodes_far-n_spines_pre_start_far, ...
                        rhos1nodes_nums_uk_far-n_spines_pre_start_far);
%27th row of Jacobian blocks (D1_far)
    %Derivatives of D1_f with respect to h_near
        %First, we add the derivatives with respect to the first
        %spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
    +n_S1_far-1+n_K_far-1+n_E1_far-1+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +1)) ...
    = diff_h_D1_far(D1_nodes_far-n_spines_pre_start_far,end); 
        %Then, the derivative with respect to the last spine
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near)) ...
    = diff_h_D1_far(D1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of D1_f with respect to us1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near)) ...
    = diff_us1_D1_far(D1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of D1_f with respect to ws1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
    +n_S1_far-1+n_K_far-1+n_E1_far-1+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near)) ...
    = diff_ws1_D1_far(D1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of D1_f with respect to rhos1_near
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near)) ...
    = diff_rhos1_D1_far(D1_nodes_far-n_spines_pre_start_far,1); 
    %Derivatives of D1_far with respect to h_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1)) ...
    = diff_h_D1_far(D1_nodes_far-n_spines_pre_start_far,2:end-1);
    %Derivatives of D1_far with respect to us1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1)) ...
    = diff_us1_D1_far(D1_nodes_far-n_spines_pre_start_far, ...
                      us1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of D1_far with respect to ws1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1)) ...
    = diff_ws1_D1_far(D1_nodes_far-n_spines_pre_start_far, ...
                      ws1nodes_nums_uk_far-n_spines_pre_start_far);
    %Derivatives of D1_far with respect to rhos1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1)) ...
    = diff_rhos1_D1_far(D1_nodes_far-n_spines_pre_start_far, ...
                        rhos1nodes_nums_uk_far-n_spines_pre_start_far);
%28th row of Jacobian blocks
    %Derivatives of T1_far with respect to rhos1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
    +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+1) ...
   :(n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+n_T1_far-1), ...
   (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
    +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
    +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
    +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
    +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
    +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+1) ...
   :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1)) ...
    = Cg*eye(n_spines_far-1);
    %Derivatives of T1_far with respect to rhos1_far
JR((n_Mr_near+n_Mz_near+n_C_near ...
    +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
    +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
    +2*n_v_sep ...
    +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
    +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
    +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+1) ...
    :(n_Mr_near+n_Mz_near+n_C_near ...
      +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
      +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
      +2*n_v_sep ...
      +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
      +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
      +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+n_T1_far-1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
     +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
     +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
     +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+1) ...
    :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+n_sigma1_uk_far-1)) ...
    = eye(n_spines_far-1);
%29th row of the Jacobian (Young's equation)
    %Derivative with respect to sigma2
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+n_T1_far-1 ...
     +1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+1)) ...
    = 1; 
    %Derivative with respect to sigma1
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+n_T1_far-1 ...
     +1), ...
    (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
     +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
     +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+1)) ...
    = cos(theta_c);
    %Derivative with respect to theta_c
JR((n_Mr_near+n_Mz_near+n_C_near ...
     +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
     +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
     +2*n_v_sep ...
     +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
     +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
     +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+n_T1_far-1 ...
     +1), ...
     (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
      +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
      +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ... 
      +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
      +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
      +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos2_uk_far-1+n_sigma1_uk_far-1 ...
      +1)) ...
    = -sigma1(c1) ...
       *sin(theta_c);
% if theta_m > change
%     %30th and final line of the Jacobian (Cp)
%         %Derivative with respect to p_2
%     JR((n_Mr_near+n_Mz_near+n_C_near ...
%         +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
%         +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
%         +2*n_v_sep ...
%         +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
%         +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
%         +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+n_T1_far-1 ...
%         +2), ...
%        n_u_uk_near+n_w_uk_near+2) = 1;
%         %Derivative with respect to p_3
%     JR((n_Mr_near+n_Mz_near+n_C_near ...
%         +n_S2_near+n_I_near+n_E2_near+n_D2_near+n_T2_near ...             
%         +n_S1_near+n_K_near+n_E1_near+n_D1_near+n_T1_near ...
%         +2*n_v_sep ...
%         +n_Mr_far-n_v_sep+n_Mz_far-n_v_sep+n_C_far-n_p_sep ...
%         +n_S2_far-1+n_I_far-1+n_E2_far-1+n_D2_far-1+n_T2_far-1 ...
%         +n_S1_far-1+n_K_far-1+n_E1_far-1+n_D1_far-1+n_T1_far-1 ...
%         +2), ...
%        n_u_uk_near+n_w_uk_near+3) = -1;
% end

       
%         %Spying Jacobian
%         figure
%         spy(JR)
%         hold on
%         %Jacobian column deviders
%         %left end
%         plot([.5 ...
%               .5],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %u_bar_uk end
%         plot([(n_u_uk_near+.5) ...
%               (n_u_uk_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %w_bar_uk end
%         plot([(n_u_uk_near+n_w_uk_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %p_near_uk end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %lambda2_near_uk end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %us2_near end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+n_spines_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+n_spines_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %ws2_near end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+2*n_spines_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+2*n_spines_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %rhos2_near end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+3*n_spines_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+3*n_spines_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %sigma2_near end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+4*n_spines_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+4*n_spines_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %h_near end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+5*n_spines_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+5*n_spines_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %us1_near end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+6*n_spines_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+6*n_spines_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1 ...
%                   +2 ...
%                   +.5)],'-k')
%         %ws1_near end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+7*n_spines_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+7*n_spines_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %rhos1_near end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+8*n_spines_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+8*n_spines_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %sigma1_near end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %lambda4 end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +n_v_sep+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +n_v_sep+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %gamma4 end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %u_far_uk end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')
%         %w_far_uk end 
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k') 
%         %p_far_uk end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k') 
%         %lambda2_far_uk end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')  
%         %us2_far_uk end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+n_spines_far-1-1+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+n_spines_far-1-1+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')  
%         %ws2_far_uk end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+2*(n_spines_far-1)-1+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+2*(n_spines_far-1)-1+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')  
%         %rhos2_far_uk end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+3*(n_spines_far-1)-1+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+3*(n_spines_far-1)-1+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')   
%         %sigma2_far_uk end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+4*(n_spines_far-1)-1+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+4*(n_spines_far-1)-1+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k') 
%         %h_far end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+5*(n_spines_far-1)-1+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+5*(n_spines_far-1)-1+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')  
%         %us1_far end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+6*(n_spines_far-1)-2+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+6*(n_spines_far-1)-2+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')  
%         %ws1_far end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+7*(n_spines_far-1)-2+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+7*(n_spines_far-1)-2+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')  
%         %rhos1_far end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+8*(n_spines_far-1)-2+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+8*(n_spines_far-1)-2+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k')  
%         %sigma1_far end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k') 
%         %theta_c end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +1+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +1+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k') 
%         %A end
%         plot([(n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5) ...
%               (n_u_uk_near+n_w_uk_near+n_p_near ...
%                +n_lambda2_uk_near+9*n_spines_near ...
%                +2*n_v_sep ...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)],...
%              [.5 (n_Mr_near+n_Mz_near+n_C_near ...
%                   +8*n_spines_near+n_I_near+n_K_near ...
%                   +2*n_v_sep ...
%                   +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                   +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                   +2 ...
%                   +.5)],'-k') 
%         %Jacobian row dividers
%         %top line
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [.5 .5],'-k')
%         %Mr_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [n_Mr_near+.5 n_Mr_near+.5],'-k')
%         %Mz_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [n_Mr_near+n_Mz_near+.5 n_Mr_near+n_Mz_near+.5],'-k')
%         %C_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near+.5)],'-k')
%         %S2_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +n_spines_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +n_spines_near+.5)],'-k')
%         %I_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +n_spines_near+n_I_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +n_spines_near+n_I_near+.5)],'-k')
%         %E2_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +2*n_spines_near+n_I_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +2*n_spines_near+n_I_near+.5)],'-k')
%         %D2_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +3*n_spines_near+n_I_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +3*n_spines_near+n_I_near+.5)],'-k')
%         %T2_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +4*n_spines_near+n_I_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +4*n_spines_near+n_I_near+.5)],'-k')
%         %S1_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +5*n_spines_near+n_I_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +5*n_spines_near+n_I_near+.5)],'-k')
%         %K_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +5*n_spines_near+n_I_near+n_K_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +5*n_spines_near+n_I_near+n_K_near+.5)],'-k')
%         %E1_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +6*n_spines_near+n_I_near+n_K_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +6*n_spines_near+n_I_near+n_K_near+.5)],'-k')
%         %D1_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +7*n_spines_near+n_I_near+n_K_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +7*n_spines_near+n_I_near+n_K_near+.5)],'-k')
%         %T1_near end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near+.5)],'-k')
%         %Cu end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +n_v_sep+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +n_v_sep+.5)],'-k')
%         %Cw end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep+.5)],'-k')
%         %Mr_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+.5)],'-k')
%         %Mz_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+.5)],'-k')
%         %C_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep+.5)],'-k')
%         %S2_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +n_spines_far-1-1+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +n_spines_far-1-1+.5)],'-k')
%         %I_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +n_spines_far-1+n_I_far-1-1+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +n_spines_far-1+n_I_far-1-1+.5)],'-k')
%         %E2_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +2*(n_spines_far-1)+n_I_far-1-1+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +2*(n_spines_far-1)+n_I_far-1-1+.5)],'-k')
%         %D2_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +3*(n_spines_far-1)+n_I_far-1-1+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +3*(n_spines_far-1)+n_I_far-1+.5)],'-k')
%         %T2_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +4*(n_spines_far-1)+n_I_far-1-1+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +4*(n_spines_far-1)+n_I_far-1-1+.5)],'-k')
%         %S1_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +5*(n_spines_far-1)+n_I_far-1-2+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +5*(n_spines_far-1)+n_I_far-1-2+.5)],'-k')
%         %K_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +5*(n_spines_far-1)+n_I_far-1+n_K_far-1-2+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +5*(n_spines_far-1)+n_I_far-1+n_K_far-1-2+.5)],'-k')
%         %E1_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +6*(n_spines_far-1)+n_I_far-1+n_K_far-1-2+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +6*(n_spines_far-1)+n_I_far-1+n_K_far-1-2+.5)],'-k')
%         %D1_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +7*(n_spines_far-1)+n_I_far-1+n_K_far-1-2+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +7*(n_spines_far-1)+n_I_far-1+n_K_far-1-2+.5)],'-k')
%         %T1_far end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2+.5)],'-k')
%         %Y end
%         plot([.5 ...
%               (n_u_uk_near+n_w_uk_near+n_p_uk_near ...
%                +n_lambda2_uk_near+9*n_spines_near...
%                +2*n_v_sep...
%                +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
%                +n_lambda2_uk_far-1+9*(n_spines_far-1)-2 ...
%                +2+.5)], ...
%               [(n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                 +1+.5) ...
%                (n_Mr_near+n_Mz_near+n_C_near ...
%                 +8*n_spines_near+n_I_near+n_K_near ...
%                 +2*n_v_sep ...
%                 +n_Mr_far+n_Mz_far+n_C_far-n_p_sep ...
%                 +8*(n_spines_far-1)+n_I_far-1+n_K_far-1-2 ...
%                 +1+.5)],'-k')
%         grid on