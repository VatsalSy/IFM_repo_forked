%This version has the correct tensions at the junction point of the free
%surface and is implementing a acute-obtuse angle conmuter

close all
clear
clc

change = pi/2; %This should be slighly greater than pi/2

load('it.mat')
load('time_vec.mat','time_vec')
load('theta_c_vec.mat','theta_c_vec')

max_delta_theta = pi/180;

min_delta_theta = .1*pi/180;

%Number of time steps
n_steps = 499;

%convergence criteria
tol_R = 1E-9;
tol_err_base = 1E-4;

%Numerical derivative parameter
del_h = 0.0001; %Incremental factor to estimante derivatives 
%with respect to first spine length

%Dimensionless numbers for bulk
load('Re.mat');%Re = U_dim*L_dim/nu_dim; %Reynolds number
load('Ca.mat')%Ca = rho_dim*nu_dim*U_dim/sigma_1e_dim; %Capillary number
load('St.mat')%St = g_dim*L_dim^2/(nu_dim*U_dim); %Stokes number

%Dimensionless numbers for the liquid-gas IFM
load('Bg.mat','Bg')
load('Eg.mat','Eg')
load('Cg.mat','Cg')
load('Dg.mat','Dg')
load('Lg.mat','Lg')
load('Tg.mat','Tg')

%Dimensionless numbers for liquid-gas IFM
load('Be.mat','Be')
load('Es.mat','Es')
load('Cs.mat','Cs')
load('Ds.mat','Ds')
load('Ls.mat','Ls')
load('Ts.mat','Ts')

%Contact line dimensionless numbers
load('So.mat','So')

%Mesh properties
load('l.mat')
load('n_nodes_const_per_spine.mat')
load('n_el_sing.mat')
load('press_lim_node_solid.mat')
load('press_lim_node_gas.mat')
load('n_spines.mat')
load('n_spines_incr.mat')
load('n_spines_near.mat')
load('n_spines_far.mat')
spine_nums_near = 1:n_spines_near;
spine_nums_far = n_spines_near:n_spines;
load('spine_feet_locator.mat')
load('alpha_s.mat')
load('n_v.mat')
load('n_v_near.mat')
load('n_v_far.mat')
load('n_v_start_far.mat')
load('n_el.mat')
load('n_el_near.mat')
load('n_Mr_near.mat')
load('Mr_nodes_near.mat')
load('n_Mz_near.mat')
load('Mz_nodes_near.mat')
load('n_C_near.mat')
load('C_nodes_near.mat')
load('n_K_near.mat')
load('K_nodes_near.mat')
load('n_I_near.mat')
load('I_nodes_near.mat')
load('n_Mr_far.mat')
load('Mr_nodes_far.mat')
load('n_Mz_far.mat')
load('Mz_nodes_far.mat')
load('n_C_far.mat')
load('C_nodes_far.mat')
load('n_K_far.mat')
load('K_nodes_far.mat')
load('n_I_far.mat')
load('I_nodes_far.mat')
load('n_u_k_near.mat')
load('unodes_nums_k_near.mat')
load('n_u_uk_near.mat')
load('unodes_nums_uk_near.mat')
load('n_u_k_far.mat')
load('unodes_nums_k_far.mat')
load('n_u_uk_far.mat')
load('unodes_nums_uk_far.mat')
load('n_w_k_near.mat')
load('wnodes_nums_k_near.mat')
load('n_w_uk_near.mat')
load('wnodes_nums_uk_near.mat')
load('n_w_k_far.mat')
load('wnodes_nums_k_far.mat')
load('n_w_uk_far.mat')
load('wnodes_nums_uk_far.mat')
load('pNodes_rz.mat')
load('n_p.mat')
load('n_p_near.mat')
load('n_p_far.mat')
load('n_p_start_far.mat')
load('n_p_k_near.mat')
load('pnodes_nums_k_near.mat')
load('n_p_uk_near.mat')
load('pnodes_nums_uk_near.mat')
load('n_p_k_far.mat')
load('pnodes_nums_k_far.mat')
load('n_p_uk_far.mat')
load('pnodes_nums_uk_far.mat')
load('n_lambda2_uk.mat','n_lambda2_uk')
load('lp.mat')
load('spine_feet_nodes.mat')
load('spine_tip_nodes.mat')
load('contact_line.mat')
load('apex.mat')
load('n1_el.mat')
load('n1_el_near.mat')
load('l_1.mat')
load('l1_1.mat')
load('phi1_lG.mat')
load('phi1_xi_lG.mat')
load('n2_el.mat')
load('n2_el_near.mat')
load('l_2.mat')
load('l2_2.mat')
load('n3_el.mat')
load('l_3.mat')
load('l3_3.mat')
load('n4_el.mat')
load('l_4.mat')
load('l4_4.mat')
load('n5_el.mat')
load('l_5.mat')
load('l5_5.mat')
load('S.mat')
load('S_1.mat')
load('S_2.mat')
load('S_3.mat')
load('S_4.mat')
load('S_5.mat')
load('el_s_loc_nodes.mat')
load('el1_s_loc_nodes.mat')
load('el2_s_loc_nodes.mat')
load('el3_s_loc_nodes.mat')
load('el4_s_loc_nodes.mat')
load('el5_s_loc_nodes.mat')
load('alpha_1.mat')
load('alpha_2.mat')
load('alpha_3.mat')
load('alpha_4.mat')
load('alpha_5.mat')
load('n_v_pre_start_far.mat','n_v_pre_start_far')
load('n_p_pre_start_far.mat','n_p_pre_start_far')
load('n_v_sep.mat','n_v_sep')
load('n_p_sep.mat','n_p_sep')
load('n_lambda2_uk_near.mat','n_lambda2_uk_near')
load('n_lambda2_uk_far.mat','n_lambda2_uk_far')
load('sep_nodes.mat','sep_nodes')
load('n_us2_uk_near.mat','n_us2_uk_near')
load('n_ws2_uk_near.mat','n_ws2_uk_near')
load('n_rhos2_uk_near.mat','n_rhos2_uk_near')
load('n_sigma2_uk_near.mat','n_sigma2_uk_near')
load('n_us1_uk_near.mat','n_us1_uk_near')
load('n_ws1_uk_near.mat','n_ws1_uk_near')
load('n_rhos1_uk_near.mat','n_rhos1_uk_near')
load('n_sigma1_uk_near.mat','n_sigma1_uk_near')
load('n_us2_uk_far.mat','n_us2_uk_far')
load('n_ws2_uk_far.mat','n_ws2_uk_far')
load('n_rhos2_uk_far.mat','n_rhos2_uk_far')
load('n_sigma2_uk_far.mat','n_sigma2_uk_far')
load('n_us1_uk_far.mat','n_us1_uk_far')
load('n_ws1_uk_far.mat','n_ws1_uk_far')
load('n_rhos1_uk_far.mat','n_rhos1_uk_far')
load('n_sigma1_uk_far.mat','n_sigma1_uk_far')
load('n_S2_near.mat','n_S2_near')
load('n_E2_near.mat','n_E2_near')
load('n_D2_near.mat','n_D2_near')
load('n_T2_near.mat','n_T2_near')
load('n_S1_near.mat','n_S1_near')
load('n_E1_near.mat','n_E1_near')
load('n_D1_near.mat','n_D1_near')
load('n_T1_near.mat','n_T1_near')
load('n_S2_far.mat','n_S2_far')
load('n_E2_far.mat','n_E2_far')
load('n_D2_far.mat','n_D2_far')
load('n_T2_far.mat','n_T2_far')
load('n_S1_far.mat','n_S1_far')
load('n_E1_far.mat','n_E1_far')
load('n_D1_far.mat','n_D1_far')
load('n_T1_far.mat','n_T1_far')
load('lambda2nodes_nums_uk_near.mat','lambda2nodes_nums_uk_near')
load('us2nodes_nums_uk_near.mat','us2nodes_nums_uk_near')
load('ws2nodes_nums_uk_near.mat','ws2nodes_nums_uk_near')
load('rhos2nodes_nums_uk_near.mat','rhos2nodes_nums_uk_near')
load('sigma2nodes_nums_uk_near.mat','sigma2nodes_nums_uk_near')
load('spine_nums_uk_near.mat','spine_nums_uk_near')
load('us1nodes_nums_uk_near.mat','us1nodes_nums_uk_near')
load('ws1nodes_nums_uk_near.mat','ws1nodes_nums_uk_near')
load('rhos1nodes_nums_uk_near.mat','rhos1nodes_nums_uk_near')
load('sigma1nodes_nums_uk_near.mat','sigma1nodes_nums_uk_near')
load('lambda2nodes_nums_uk_far.mat','lambda2nodes_nums_uk_far')
load('us2nodes_nums_uk_far.mat','us2nodes_nums_uk_far')
load('ws2nodes_nums_uk_far.mat','ws2nodes_nums_uk_far')
load('rhos2nodes_nums_uk_far.mat','rhos2nodes_nums_uk_far')
load('sigma2nodes_nums_uk_far.mat','sigma2nodes_nums_uk_far')
load('spine_nums_uk_far.mat','spine_nums_uk_far')
load('us1nodes_nums_uk_far.mat','us1nodes_nums_uk_far')
load('ws1nodes_nums_uk_far.mat','ws1nodes_nums_uk_far')
load('rhos1nodes_nums_uk_far.mat','rhos1nodes_nums_uk_far')
load('sigma1nodes_nums_uk_far.mat','sigma1nodes_nums_uk_far')
load('c1.mat','c1')
load('c2.mat','c2')
load('a1.mat')
load('o2.mat')
load('n_spines_pre_start_far.mat','n_spines_pre_start_far')
load('S2_nodes_near.mat')
load('E2_nodes_near.mat')
load('D2_nodes_near.mat')
load('T2_nodes_near.mat')
load('S1_nodes_near.mat')
load('E1_nodes_near.mat')
load('D1_nodes_near.mat')
load('T1_nodes_near.mat')
load('S2_nodes_far.mat')
load('E2_nodes_far.mat')
load('D2_nodes_far.mat')
load('T2_nodes_far.mat')
load('S1_nodes_far.mat')
load('E1_nodes_far.mat')
load('D1_nodes_far.mat')
load('T1_nodes_far.mat')

%master elements properties
load('n_Gaussian_Q.mat')
load('T.mat')
load('W_G.mat')
load('xi_G.mat')
load('eta_G.mat')
load('psi_G.mat')
load('phi_G.mat')
load('n_lGaussian_Q.mat')
load('xi_lG.mat')
load('W_lG.mat')
load('phi1_lG.mat')
load('phi1_xi_lG.mat')
load('phi2_lG.mat')
load('phi2_eta_lG.mat')
load('phi3_lG.mat')
load('phi3_xi_lG.mat')
load('phi4_lG.mat')
load('phi4_xi_lG.mat')
load('phi5_lG.mat')
load('phi5_eta_lG.mat')
load('Tmat1.mat')
load('Tmat2.mat')
load('Tmat3.mat')
load('Tmat4.mat')
load('Tmat5.mat')
load('LE_to_TE_1.mat')
load('LE_to_TE_2.mat')
load('LE_to_TE_3.mat')
load('LE_to_TE_4.mat')
load('LE_to_TE_5.mat')

%Gravity components
gr = 0;
gz = -1;

%Angle with symmetry axis
load('theta_a.mat')

%Velocity of the solid
u_s = zeros(n_spines,1);
w_s = zeros(n_spines,1);

%gas presure of free surface
pg = zeros(n_spines,1);

%u_minus2
load(['u_',num2str(it-1),'.mat'],'u')
u_minus2 = u;
%w_minus2
load(['w_',num2str(it-1),'.mat'],'w')
w_minus2 = w;
%rhos2_minus2
load(['rhos2_',num2str(it-1),'.mat'],'rhos2')
rhos2_minus2 = rhos2;
%rhos1_minus2
load(['rhos1_',num2str(it-1),'.mat'],'rhos1')
rhos1_minus2 = rhos1;
%Nodes_minus2
load(['spine_lengths_',num2str(it-1),'.mat'])
spine_lengths_minus2 = spine_lengths;
[Nodes_rz_minus2,~] ...
            = nodes_relocator_split_v02(spine_lengths_minus2, ...
                                        spine_feet_locator,n_spines, ...
                                        n_spines_incr,n_v,alpha_s, ...
                                        n_nodes_const_per_spine, ...
                                        n_el_sing);

%u_minus1
load(['u_',num2str(it),'.mat'],'u')
u_minus1 = u;
%w_minus1
load(['w_',num2str(it),'.mat'],'w')
w_minus1 = w;
%rhos2_minus1
load(['rhos2_',num2str(it),'.mat'],'rhos2')
rhos2_minus1 = rhos2;
%rhos1_minus1
load(['rhos1_',num2str(it),'.mat'],'rhos1')
rhos1_minus1 = rhos1;
%Nodes_minus1
load(['spine_lengths_',num2str(it),'.mat'])
spine_lengths_minus1 = spine_lengths;
[Nodes_rz_minus1,~] ...
            = nodes_relocator_split_v02(spine_lengths_minus1, ...
                                        spine_feet_locator,n_spines, ...
                                        n_spines_incr,n_v,alpha_s, ...
                                        n_nodes_const_per_spine, ...
                                        n_el_sing);

%Nodes_rz
load(['spine_lengths_',num2str(it),'.mat'])
[Nodes_rz,R_spines] ...
            = nodes_relocator_split_v02(spine_lengths_minus1, ...
                                        spine_feet_locator,n_spines, ...
                                        n_spines_incr,n_v,alpha_s, ...
                                        n_nodes_const_per_spine, ...
                                        n_el_sing);

%initial guess for pressure
load(['p_',num2str(it),'.mat'],'p')

%initial guess for velocity in the far field
u_far = u_minus1(n_v_start_far:end);
w_far = w_minus1(n_v_start_far:end);

%initial guess for velocity in the near field
load(['A_',num2str(it),'.mat'],'A')
load(['theta_c_',num2str(it),'.mat'],'theta_c')
                        
%Derivatives with respect to xi, used to find the tangent at the joint
phi1_xi = zeros(3,2);
xi(1) = 1;
xi(2) = -1;
for pp = 1:2
    phi1_xi(1,pp) = xi(pp)-.5;
    phi1_xi(2,pp) = -2*xi(pp);
    phi1_xi(3,pp) = xi(pp)+.5;
end

%Measured contact angle
r_le = Nodes_rz(l_1(1,:),1);
z_le = Nodes_rz(l_1(1,:),2);
min_r_le = min(r_le);
min_z_le = min(z_le);
tan1_r = (phi1_xi(:,2)')*(r_le-min_r_le);
tan1_z = (phi1_xi(:,2)')*(z_le-min_z_le);
theta_m = atan2(tan1_z,-tan1_r);
%Finding the lambda constant of the eigen-solution
lambda_eig = pi/theta_m;
u_bar = zeros(n_v_near,1);
w_bar = zeros(n_v_near,1);
if theta_m > change
    u_bar(1) = u_minus1(1);
    w_bar(1) = w_minus1(1);
    for cc = 2:n_v_near
        r_pp = Nodes_rz(cc,1)-Nodes_rz(1,1);
        z_pp = Nodes_rz(cc,2)-Nodes_rz(1,2);
        theta_pol = atan2(z_pp,r_pp);
        phi_pp = pi - theta_m - theta_pol;
        theta_pp = lambda_eig*phi_pp;
        c_theta_pp = cos(theta_pp);
        s_theta_pp = sin(theta_pp);
        rho_l_minus2_pp = (r_pp^2+z_pp^2)^((lambda_eig-2)/2);
        u_check_pp = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
                                   rho_l_minus2_pp,c_theta_pp, ...
                                   s_theta_pp);
        w_check_pp = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
                                   rho_l_minus2_pp,c_theta_pp, ...
                                   s_theta_pp);
        u_bar(cc) = u_minus1(cc) - A*u_check_pp;
        w_bar(cc) = w_minus1(cc) - A*w_check_pp;
    end
else
    A = 0;
    u_bar(1:n_v_near) = u_minus1(1:n_v_near);
    w_bar(1:n_v_near) = w_minus1(1:n_v_near);
end

load(['lambda2_',num2str(it),'.mat'])
load(['us2_',num2str(it),'.mat'])
load(['ws2_',num2str(it),'.mat'])
load(['sigma2_',num2str(it),'.mat'])

load(['us1_',num2str(it),'.mat'])
load(['ws1_',num2str(it),'.mat'])
load(['sigma1_',num2str(it),'.mat'])

%for plotting
n_smooth = 128;
tvec = -1:2/n_smooth:1;
phi_l = (tvec-1).*tvec/2;
phi_c = (tvec+1).*(1-tvec);
phi_r = (tvec+1).*tvec/2;
 
Vels_near = figure;
quiver(Nodes_rz(1:n_v_near,1), ...
       Nodes_rz(1:n_v_near,2), ...
       u_minus1(1:n_v_near), ...
       w_minus1(1:n_v_near),'color',[0 0 0])
grid on
% vector used for the curved sides
hold on
%plotting boundaries
for ii = 1:n1_el_near
    xvec =   Nodes_rz(l_1(ii,1),1)*phi_l ...
           + Nodes_rz(l_1(ii,2),1)*phi_c ...
           + Nodes_rz(l_1(ii,3),1)*phi_r;
    yvec =   Nodes_rz(l_1(ii,1),2)*phi_l ...
           + Nodes_rz(l_1(ii,2),2)*phi_c ...
           + Nodes_rz(l_1(ii,3),2)*phi_r;
    plot(xvec,yvec,'b','LineWidth',2)
end
for ii = 1:n2_el_near
    xvec =  Nodes_rz(l_2(ii,1),1)*phi_l ...
          + Nodes_rz(l_2(ii,2),1)*phi_c ...
          + Nodes_rz(l_2(ii,3),1)*phi_r;
    yvec =  Nodes_rz(l_2(ii,1),2)*phi_l ...
          + Nodes_rz(l_2(ii,2),2)*phi_c ...
          + Nodes_rz(l_2(ii,3),2)*phi_r;
    plot(xvec,yvec,'g','LineWidth',2)
end
for ii = 1:n5_el
    xvec =  Nodes_rz(l_5(ii,1),1)*phi_l ...
          + Nodes_rz(l_5(ii,2),1)*phi_c ...
          + Nodes_rz(l_5(ii,3),1)*phi_r;
    yvec =  Nodes_rz(l_5(ii,1),2)*phi_l ...
          + Nodes_rz(l_5(ii,2),2)*phi_c ...
          + Nodes_rz(l_5(ii,3),2)*phi_r;
    plot(xvec,yvec,'r','LineWidth',2)
end
minx = min(Nodes_rz(1:n_v_near,1));
maxx = max(Nodes_rz(1:n_v_near,1));
wi = maxx-minx;
set(gca,'FontSize',16,'xlim',[minx-wi/10 maxx+wi/10])
axis equal
drawnow
hold off

Vels_far = figure;
quiver(Nodes_rz(n_v_start_far:end,1), ...
       Nodes_rz(n_v_start_far:end,2), ...
       u_far, ...
       w_far,'color',[0 0 0])
grid on
hold on
%plotting boundaries
for ii = n1_el_near+1:n1_el
    xvec = Nodes_rz(l_1(ii,1),1)*phi_l ...
           +Nodes_rz(l_1(ii,2),1)*phi_c ...
           +Nodes_rz(l_1(ii,3),1)*phi_r;
    yvec = Nodes_rz(l_1(ii,1),2)*phi_l ...
           +Nodes_rz(l_1(ii,2),2)*phi_c ...
           +Nodes_rz(l_1(ii,3),2)*phi_r;
    plot(xvec,yvec,'b','LineWidth',2)
end
for ii = n2_el_near+1:n2_el
    xvec =  Nodes_rz(l_2(ii,1),1)*phi_l ...
           +Nodes_rz(l_2(ii,2),1)*phi_c ...
           +Nodes_rz(l_2(ii,3),1)*phi_r;
    yvec =  Nodes_rz(l_2(ii,1),2)*phi_l ...
           +Nodes_rz(l_2(ii,2),2)*phi_c ...
           +Nodes_rz(l_2(ii,3),2)*phi_r;
    plot(xvec,yvec,'g','LineWidth',2)
end
for ii = 1:n3_el
    xvec =  Nodes_rz(l_3(ii,1),1)*phi_l ...
           +Nodes_rz(l_3(ii,2),1)*phi_c ...
           +Nodes_rz(l_3(ii,3),1)*phi_r;
    yvec =  Nodes_rz(l_3(ii,1),2)*phi_l ...
           +Nodes_rz(l_3(ii,2),2)*phi_c ...
           +Nodes_rz(l_3(ii,3),2)*phi_r;
    plot(xvec,yvec,'r','LineWidth',2)
end
for ii = 1:n4_el
    xvec =  Nodes_rz(l_4(ii,1),1)*phi_l ...
           +Nodes_rz(l_4(ii,2),1)*phi_c ...
           +Nodes_rz(l_4(ii,3),1)*phi_r;
    yvec =  Nodes_rz(l_4(ii,1),2)*phi_l ...
           +Nodes_rz(l_4(ii,2),2)*phi_c ...
           +Nodes_rz(l_4(ii,3),2)*phi_r;
    plot(xvec,yvec,'r','LineWidth',2)
end
set(gca,'FontSize',16,'xlim', ...
    [0 1.1*max(Nodes_rz(n_v_start_far:end,1))])
axis equal                   
drawnow
hold off


%Finding the non-singular hat functions in the singular element
psi_star_G = zeros(3,n_Gaussian_Q);
for pp = 1:n_Gaussian_Q
    psi_star_G(1,pp) = (1+eta_G(pp))/2;
end
for pp = 1:n_Gaussian_Q
    psi_star_G(3,pp) = (1+xi_G(pp))/2;
end


load('theta_m_vec.mat','theta_m_vec')
load('U_cl_vec.mat','U_cl_vec')

theta_of_U_cl = figure;
load('U_dim.mat')
plot(U_cl_vec(1:it+1)*U_dim,theta_c_vec(1:it+1)*180/pi,'-x','LineWidth',2)
set(gca,'FontSize',16)
ylabel('[$^o$]   ','interpreter','latex','rotation',0,'FontSize',24)
xlabel('m/s','interpreter','latex','FontSize',24)
grid on
drawnow

it_start_hs = it;
for it = it_start_hs+1:it_start_hs+n_steps
    disp(['time step number = ',num2str(it)])
    disp(['fraction of sim = ',num2str((it-it_start_hs)/n_steps)])
    
    delta_t_prev = time_vec(it)-time_vec(it-1);
    delta_theta_c_prev = theta_c_vec(it)-theta_c_vec(it-1);
    if abs(delta_theta_c_prev) > max_delta_theta
        delta_t = delta_t_prev/2;
    elseif abs(delta_theta_c_prev) < min_delta_theta
        delta_t = delta_t_prev*2;
    else
        delta_t = delta_t_prev;
    end
    
    ratio_n = delta_t/delta_t_prev;
    a_n = 2*(1+2*ratio_n)/(3*(1+ratio_n));
    a_n_minus1 = 2*(1+ratio_n)/3;
    a_n_minus2 = 2*ratio_n^2/(3*(1+ratio_n));
    
    
    [Nodes_rz,R_spines] ...
        = nodes_relocator_split_v02(spine_lengths, ...
                                    spine_feet_locator,n_spines, ...
                                    n_spines_incr,n_v,alpha_s, ...
                                    n_nodes_const_per_spine, ...
                                    n_el_sing);
    %Measured contact angle
    r_le = Nodes_rz(l_1(1,:),1);
    z_le = Nodes_rz(l_1(1,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    tan1_r = (phi1_xi(:,2)')*(r_le-min_r_le);
    tan1_z = (phi1_xi(:,2)')*(z_le-min_z_le);
    theta_m = atan2(tan1_z,-tan1_r);
    %Finding the lambda constant of the eigen-solution
    lambda_eig = pi/theta_m;
            
    %%%%%%%%%%%%%%%%%%%%%%%%
    if theta_m > change
        x = [u_bar(unodes_nums_uk_near); ...
             w_bar(wnodes_nums_uk_near); ...
             p(pnodes_nums_uk_near); ...
             lambda2(lambda2nodes_nums_uk_near); ...
             us2(us2nodes_nums_uk_near); ...
             ws2(ws2nodes_nums_uk_near); ...
             rhos2(rhos2nodes_nums_uk_near); ...
             sigma2(sigma2nodes_nums_uk_near); ...
             spine_lengths(spine_nums_uk_near);...
             us1(us1nodes_nums_uk_near); ...
             ws1(ws1nodes_nums_uk_near); ...
             rhos1(rhos1nodes_nums_uk_near); ...
             sigma1(sigma1nodes_nums_uk_near); ...
             u_far(unodes_nums_uk_far-n_v_pre_start_far); ...
             w_far(wnodes_nums_uk_far-n_v_pre_start_far); ...
             p(pnodes_nums_uk_far(n_p_sep+1:end)); ...
             lambda2(lambda2nodes_nums_uk_far);...
             us2(us2nodes_nums_uk_far); ...
             ws2(ws2nodes_nums_uk_far); ...
             rhos2(rhos2nodes_nums_uk_far); ...
             sigma2(sigma2nodes_nums_uk_far); ...
             spine_lengths(spine_nums_uk_far);
             us1(us1nodes_nums_uk_far); ...
             ws1(ws1nodes_nums_uk_far); ...
             rhos1(rhos1nodes_nums_uk_far); ...
             sigma1(sigma1nodes_nums_uk_far); ...
             theta_c; ...
             A]; 
        R = Res_finder_BDF2_A_v42(n_v_near,n_p_near,n_spines_near, ...
                         n_v_far,n_p_far,n_spines_far, ...
                         theta_c, ...
                         u_bar,w_bar,p, ...
                         lambda2,us2,ws2,rhos2,sigma2, ...
                         us1,ws1,rhos1,sigma1, ...
                         n_v_pre_start_far, ...
                         u_far,w_far, ...
                         n_p_sep, ...
                         A,l,Nodes_rz,n_Gaussian_Q,phi_G, ...
                         xi_G,eta_G,T,W_G,gr,gz,Re,delta_t,St, ...
                         Nodes_rz_minus1,Nodes_rz_minus2, ...
                         u_minus1,u_minus2,w_minus1,w_minus2, ...
                         lp,psi_G,psi_star_G, ...
                         n_el_near,n1_el_near,l_1,l1_1, ...
                         n_lGaussian_Q, W_lG,...
                         phi1_xi_lG,phi1_lG,alpha_1, ...
                         Lg,Dg,Ca,Eg,Bg,Tg,Cg, ...
                         pg,rhos1_minus1,rhos1_minus2, ...
                         contact_line,c1,c2, ...
                         phi1_xi,n_v_sep, ...
                         n2_el_near,l_2,l2_2, ...
                         phi2_eta_lG,phi2_lG,alpha_2, ...
                         Be,Ls,Ds,Es,Ts,Cs, ...
                         u_s,w_s, ...
                         rhos2_minus1,rhos2_minus2, ...
                         n4_el,l_4,l4_4, ...
                         phi4_xi_lG,phi4_lG,alpha_4, ...
                         n_el,n_p_pre_start_far,n1_el,n2_el,n3_el, ...
                         n_spines_pre_start_far,apex,n_spines, ...
                         theta_a, ...
                         l_3,phi3_xi_lG,phi3_lG,alpha_3, ...
                         alpha_5,So, ...
                         n_Mr_near,n_Mz_near,n_C_near, ...
                         n_S2_near,n_I_near,n_E2_near, ...
                         n_D2_near,n_T2_near, ...
                         n_S1_near,n_K_near,n_E1_near, ...
                         n_D1_near,n_T1_near, ...
                         n_Mr_far,n_Mz_far,n_C_far, ...
                         n_S2_far,n_I_far,n_E2_far, ...
                         n_D2_far,n_T2_far, ...
                         n_S1_far,n_K_far,n_E1_far, ...
                         n_D1_far,n_T1_far, ...
                         Mr_nodes_near,Mz_nodes_near, ...
                         C_nodes_near, ...
                         S2_nodes_near,I_nodes_near, ...
                         E2_nodes_near, ...
                         D2_nodes_near,T2_nodes_near, ...
                         S1_nodes_near,K_nodes_near, ...
                         E1_nodes_near, ...
                         D1_nodes_near,T1_nodes_near, ...
                         Mr_nodes_far,Mz_nodes_far, ...
                         C_nodes_far, ...
                         S2_nodes_far,I_nodes_far, ...
                         E2_nodes_far, ...
                         D2_nodes_far,T2_nodes_far, ...
                         S1_nodes_far,K_nodes_far, ...
                         E1_nodes_far, ...
                         D1_nodes_far,T1_nodes_far, ...
                         Tmat1,Tmat2,Tmat3,Tmat4,Tmat5, ...
                         LE_to_TE_1,LE_to_TE_2,LE_to_TE_3, ...
                         LE_to_TE_4,LE_to_TE_5, ...
                         n5_el,l_5,phi5_lG,phi5_eta_lG, ...
                         a1,o2,a_n,a_n_minus1,a_n_minus2, ...
                         n_el_sing,press_lim_node_solid, ...
                         press_lim_node_gas);
    else
        if A ~= 0
            for cc = 2:n_v_near
                r_pp = Nodes_rz(cc,1)-Nodes_rz(1,1);
                z_pp = Nodes_rz(cc,2)-Nodes_rz(1,2);
                theta_pol = atan2(z_pp,r_pp);
                phi_pp = pi - theta_m - theta_pol;
                theta_pp = lambda_eig*phi_pp;
                c_theta_pp = cos(theta_pp);
                s_theta_pp = sin(theta_pp);
                rho_l_minus2_pp = (r_pp^2+z_pp^2)^((lambda_eig-2)/2);
                u_check_pp = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
                                           rho_l_minus2_pp,c_theta_pp, ...
                                           s_theta_pp);
                w_check_pp = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
                                           rho_l_minus2_pp,c_theta_pp, ...
                                           s_theta_pp);
                u_bar(cc) = u_bar(cc) + A*u_check_pp;
                w_bar(cc) = w_bar(cc) + A*w_check_pp;
            end
        end
        A = 0;
        x = [u_bar(unodes_nums_uk_near); ...
             w_bar(wnodes_nums_uk_near); ...
             p(pnodes_nums_uk_near); ...
             lambda2(lambda2nodes_nums_uk_near); ...
             us2(us2nodes_nums_uk_near); ...
             ws2(ws2nodes_nums_uk_near); ...
             rhos2(rhos2nodes_nums_uk_near); ...
             sigma2(sigma2nodes_nums_uk_near); ...
             spine_lengths(spine_nums_uk_near);...
             us1(us1nodes_nums_uk_near); ...
             ws1(ws1nodes_nums_uk_near); ...
             rhos1(rhos1nodes_nums_uk_near); ...
             sigma1(sigma1nodes_nums_uk_near); ...
             u_far(unodes_nums_uk_far-n_v_pre_start_far); ...
             w_far(wnodes_nums_uk_far-n_v_pre_start_far); ...
             p(pnodes_nums_uk_far(n_p_sep+1:end)); ...
             lambda2(lambda2nodes_nums_uk_far);...
             us2(us2nodes_nums_uk_far); ...
             ws2(ws2nodes_nums_uk_far); ...
             rhos2(rhos2nodes_nums_uk_far); ...
             sigma2(sigma2nodes_nums_uk_far); ...
             spine_lengths(spine_nums_uk_far);
             us1(us1nodes_nums_uk_far); ...
             ws1(ws1nodes_nums_uk_far); ...
             rhos1(rhos1nodes_nums_uk_far); ...
             sigma1(sigma1nodes_nums_uk_far); ...
             theta_c]; 
        R = Res_finder_BDF2_noA_v42(n_v_near,n_p_near,n_spines_near, ...
                         n_v_far,n_p_far,n_spines_far, ...
                         theta_c, ...
                         u_bar,w_bar,p, ...
                         lambda2,us2,ws2,rhos2,sigma2, ...
                         us1,ws1,rhos1,sigma1, ...
                         n_v_pre_start_far, ...
                         u_far,w_far, ...
                         n_p_sep, ...
                         l,Nodes_rz,n_Gaussian_Q,phi_G, ...
                         xi_G,eta_G,T,W_G,gr,gz,Re,delta_t,St, ...
                         Nodes_rz_minus1,Nodes_rz_minus2, ...
                         u_minus1,u_minus2,w_minus1,w_minus2, ...
                         lp,psi_G,psi_star_G, ...
                         n_el_near,n1_el_near,l_1,l1_1, ...
                         n_lGaussian_Q, W_lG,...
                         phi1_xi_lG,phi1_lG,alpha_1, ...
                         Lg,Dg,Ca,Eg,Bg,Tg,Cg, ...
                         pg,rhos1_minus1,rhos1_minus2, ...
                         contact_line,c1,c2, ...
                         n_v_sep, ...
                         n2_el_near,l_2,l2_2, ...
                         phi2_eta_lG,phi2_lG,alpha_2, ...
                         Be,Ls,Ds,Es,Ts,Cs, ...
                         u_s,w_s, ...
                         rhos2_minus1,rhos2_minus2, ...
                         n4_el,l_4,l4_4, ...
                         phi4_xi_lG,phi4_lG,alpha_4, ...
                         n_el,n_p_pre_start_far,n1_el,n2_el,n3_el, ...
                         n_spines_pre_start_far,apex,n_spines, ...
                         theta_a, ...
                         l_3,phi3_xi_lG,phi3_lG,alpha_3, ...
                         alpha_5,So, ...
                         n_Mr_near,n_Mz_near,n_C_near, ...
                         n_S2_near,n_I_near,n_E2_near, ...
                         n_D2_near,n_T2_near, ...
                         n_S1_near,n_K_near,n_E1_near, ...
                         n_D1_near,n_T1_near, ...
                         n_Mr_far,n_Mz_far,n_C_far, ...
                         n_S2_far,n_I_far,n_E2_far, ...
                         n_D2_far,n_T2_far, ...
                         n_S1_far,n_K_far,n_E1_far, ...
                         n_D1_far,n_T1_far, ...
                         Mr_nodes_near,Mz_nodes_near, ...
                         C_nodes_near, ...
                         S2_nodes_near,I_nodes_near, ...
                         E2_nodes_near, ...
                         D2_nodes_near,T2_nodes_near, ...
                         S1_nodes_near,K_nodes_near, ...
                         E1_nodes_near, ...
                         D1_nodes_near,T1_nodes_near, ...
                         Mr_nodes_far,Mz_nodes_far, ...
                         C_nodes_far, ...
                         S2_nodes_far,I_nodes_far, ...
                         E2_nodes_far, ...
                         D2_nodes_far,T2_nodes_far, ...
                         S1_nodes_far,K_nodes_far, ...
                         E1_nodes_far, ...
                         D1_nodes_far,T1_nodes_far, ...
                         Tmat1,Tmat2,Tmat3,Tmat4,Tmat5, ...
                         LE_to_TE_1,LE_to_TE_2,LE_to_TE_3, ...
                         LE_to_TE_4,LE_to_TE_5, ...
                         n5_el,l_5,phi5_lG,phi5_eta_lG, ...
                         a1,o2,a_n,a_n_minus1,a_n_minus2, ...
                         n_el_sing);
    end
    
    
   
    norm_R = norm(R,Inf)%#ok
    
    %%%%%%
    %Newton method iterations to find value at current time
    norm_err = Inf;
    attempt = 0;
    tol_err = tol_err_base;
    while norm_R > tol_R || norm_err > tol_err
        if tol_err < 100 && attempt > 10 
            tol_err = 10*tol_err %#ok
        end
        attempt = attempt+1;
        disp(['attempt = ',num2str(attempt)])
        
        if theta_m > change
            %Finding Jacobian
            JR = Jacobian_finder_BDF2_A_v42(n_v_near,n_p_near, ...
                       n_spines_near, ...
                       n_spines_far, ...
                       n_lambda2_uk_near,n_sigma2_uk_near, ...
                       n_v_sep,n_v_far,n_p_far, ...
                       theta_c,del_h, ...
                       spine_lengths,n_spines, ...
                       spine_feet_locator,spine_feet_nodes, ...
                       n_spines_incr,n_v, ...
                       spine_tip_nodes,alpha_s,R_spines, ...
                       l,Nodes_rz,S,el_s_loc_nodes, ...
                       n_Gaussian_Q,T,xi_G,eta_G, ...
                       phi_G,psi_G,W_G, ...
                       gr,gz, ...
                       Re,St,Ca, ...
                       A,delta_t, ...
                       w_bar,u_bar, ...
                       Nodes_rz_minus1,Nodes_rz_minus2, ...
                       u_minus1,u_minus2,w_minus1,w_minus2, ...
                       lp,p,psi_star_G, ...
                       n_el_near,c1,contact_line, ...
                       sigma1,us1,ws1,rhos1, ...
                       l_1,l1_1,S_1,el1_s_loc_nodes,alpha_1, ...
                       Tg,Lg,Dg,Eg,Bg, ...
                       n_lGaussian_Q,phi1_lG,phi1_xi_lG,W_lG, ...
                       pg,rhos1_minus1,rhos1_minus2, ...
                       n1_el_near,c2, ...
                       phi1_xi, ...
                       Ts,Be,Ls,Ds,Es, ...
                       us2,ws2,rhos2, ...
                       l_2,l2_2,S_2,el2_s_loc_nodes, ...
                       phi2_lG,phi2_eta_lG,alpha_2, ...
                       u_s,w_s,lambda2, ...
                       rhos2_minus1,rhos2_minus2, ...
                       n2_el_near, ...
                       n4_el,l_4,l4_4,S_4,el4_s_loc_nodes, ...
                       phi4_lG,phi4_xi_lG,alpha_4, ...
                       n_v_pre_start_far,n_el, ...
                       u_far,w_far,n_p_pre_start_far, ...
                       theta_a,n1_el, ...
                       n_spines_pre_start_far, ...
                       n2_el,n3_el,l_3, ...
                       S_3,el3_s_loc_nodes, ...
                       phi3_xi_lG,phi3_lG,alpha_3, ...
                       alpha_5, ...
                       n_Mr_near,n_Mz_near,n_C_near, ...
                       n_S2_near,n_I_near,n_E2_near, ...
                       n_D2_near,n_T2_near, ...
                       n_S1_near,n_K_near,n_E1_near, ...
                       n_D1_near,n_T1_near, ...
                       n_Mr_far,n_Mz_far,n_C_far, ...
                       n_S2_far,n_I_far,n_E2_far, ...
                       n_D2_far,n_T2_far, ...
                       n_S1_far,n_K_far,n_E1_far, ...
                       n_D1_far,n_T1_far, ...
                       Mr_nodes_near,Mz_nodes_near,C_nodes_near, ...
                       S2_nodes_near, ...
                       I_nodes_near, ...
                       S1_nodes_near, ...
                       Mr_nodes_far,Mz_nodes_far,C_nodes_far, ...
                       S2_nodes_far, ...
                       S1_nodes_far, ...
                       n_p_sep, ...
                       n_u_uk_near,n_w_uk_near,n_p_uk_near, ...
                       n_us2_uk_near,n_ws2_uk_near,n_rhos2_uk_near, ...
                       n_us1_uk_near,n_ws1_uk_near,n_rhos1_uk_near, ...
                       n_u_uk_far,n_w_uk_far,n_p_uk_far, ...
                       n_us2_uk_far,n_ws2_uk_far,n_rhos2_uk_far, ...
                       n_us1_uk_far,n_ws1_uk_far,n_rhos1_uk_far, ...
                       n_sigma1_uk_far, ...
                       unodes_nums_uk_near,wnodes_nums_uk_near, ...
                       pnodes_nums_uk_near, ...
                       lambda2nodes_nums_uk_near, ...
                       us2nodes_nums_uk_near, ...
                       ws2nodes_nums_uk_near, ...    
                       sigma2nodes_nums_uk_near, ...
                       sigma2nodes_nums_uk_far, ...
                       n_sigma1_uk_near, ...
                       n_lambda2_uk_far,n_sigma2_uk_far, ...
                       unodes_nums_uk_far,wnodes_nums_uk_far, ...
                       Cs,Cg, ...
                       pnodes_nums_uk_far, ...
                       lambda2nodes_nums_uk_far, ...
                       us2nodes_nums_uk_far, ...
                       ws2nodes_nums_uk_far, ...
                       us1nodes_nums_uk_far, ...
                       ws1nodes_nums_uk_far, ...
                       sigma1nodes_nums_uk_far, ...
                       sigma1nodes_nums_uk_near, ...
                       rhos1nodes_nums_uk_near, ...
                       rhos1nodes_nums_uk_far, ...
                       rhos2nodes_nums_uk_near, ...
                       rhos2nodes_nums_uk_far, ...
                       Tmat1,Tmat2,Tmat3,Tmat4,Tmat5, ...
                       LE_to_TE_1,LE_to_TE_2,LE_to_TE_3, ...
                       LE_to_TE_4,LE_to_TE_5, ...
                       n5_el,l_5,phi5_lG,phi5_eta_lG,S_5, ...
                       el5_s_loc_nodes, ...
                       us1nodes_nums_uk_near, ...
                       ws1nodes_nums_uk_near, ...
                       K_nodes_near, ...
                       K_nodes_far, ...
                       E1_nodes_near, ...
                       E1_nodes_far, ...
                       I_nodes_far, ...
                       E2_nodes_far, ...
                       E2_nodes_near, ...
                       D2_nodes_near, ...
                       D1_nodes_near,D2_nodes_far,D1_nodes_far, ...
                       a1,o2,a_n,a_n_minus1,a_n_minus2, ...
                       n_nodes_const_per_spine,n_el_sing,...
                       press_lim_node_solid, ...
                       press_lim_node_gas);
        else
            %Finding Jacobian
            JR = Jacobian_finder_BDF2_noA_v42(n_v_near,n_p_near, ...
                           n_spines_near, ...
                           n_spines_far, ...
                           n_lambda2_uk_near,n_sigma2_uk_near, ...
                           n_v_sep,n_v_far,n_p_far, ...
                           theta_c,del_h, ...
                           spine_lengths,n_spines, ...
                           spine_feet_locator,spine_feet_nodes, ...
                           n_spines_incr,n_v, ...
                           spine_tip_nodes,alpha_s,R_spines, ...
                           l,Nodes_rz,S,el_s_loc_nodes, ...
                           n_Gaussian_Q,T,xi_G,eta_G, ...
                           phi_G,psi_G,W_G, ...
                           gr,gz, ...
                           Re,St,Ca, ...
                           delta_t, ...
                           w_bar,u_bar, ...
                           Nodes_rz_minus1,Nodes_rz_minus2, ...
                           u_minus1,u_minus2,w_minus1,w_minus2, ...
                           lp,p,psi_star_G, ...
                           n_el_near,c1,contact_line, ...
                           sigma1,us1,ws1,rhos1, ...
                           l_1,l1_1,S_1,el1_s_loc_nodes,alpha_1, ...
                           Tg,Lg,Dg,Eg,Bg, ...
                           n_lGaussian_Q,phi1_lG,phi1_xi_lG,W_lG, ...
                           pg,rhos1_minus1,rhos1_minus2, ...
                           n1_el_near,c2, ...
                           Ts,Be,Ls,Ds,Es, ...
                           us2,ws2,rhos2, ...
                           l_2,l2_2,S_2,el2_s_loc_nodes, ...
                           phi2_lG,phi2_eta_lG,alpha_2, ...
                           u_s,w_s,lambda2, ...
                           rhos2_minus1,rhos2_minus2, ...
                           n2_el_near, ...
                           n4_el,l_4,l4_4,S_4,el4_s_loc_nodes, ...
                           phi4_lG,phi4_xi_lG,alpha_4, ...
                           n_v_pre_start_far,n_el, ...
                           u_far,w_far,n_p_pre_start_far, ...
                           theta_a,n1_el, ...
                           n_spines_pre_start_far, ...
                           n2_el,n3_el,l_3, ...
                           S_3,el3_s_loc_nodes, ...
                           phi3_xi_lG,phi3_lG,alpha_3, ...
                           alpha_5, ...
                           n_Mr_near,n_Mz_near,n_C_near, ...
                           n_S2_near,n_I_near,n_E2_near, ...
                           n_D2_near,n_T2_near, ...
                           n_S1_near,n_K_near,n_E1_near, ...
                           n_D1_near,n_T1_near, ...
                           n_Mr_far,n_Mz_far,n_C_far, ...
                           n_S2_far,n_I_far,n_E2_far, ...
                           n_D2_far,n_T2_far, ...
                           n_S1_far,n_K_far,n_E1_far, ...
                           n_D1_far,n_T1_far, ...
                           Mr_nodes_near,Mz_nodes_near, ...
                           C_nodes_near, ...
                           S2_nodes_near, ...
                           I_nodes_near, ...
                           S1_nodes_near, ...
                           Mr_nodes_far,Mz_nodes_far, ...
                           C_nodes_far, ...
                           S2_nodes_far, ...
                           S1_nodes_far, ...
                           n_p_sep, ...
                           n_u_uk_near,n_w_uk_near, ...
                           n_p_uk_near, ...
                           n_us2_uk_near,n_ws2_uk_near, ...
                           n_rhos2_uk_near, ...
                           n_us1_uk_near,n_ws1_uk_near, ...
                           n_rhos1_uk_near, ...
                           n_u_uk_far,n_w_uk_far,n_p_uk_far, ...
                           n_us2_uk_far,n_ws2_uk_far, ...
                           n_rhos2_uk_far, ...
                           n_us1_uk_far,n_ws1_uk_far, ...
                           n_rhos1_uk_far, ...
                           n_sigma1_uk_far, ...
                           unodes_nums_uk_near,wnodes_nums_uk_near, ...
                           pnodes_nums_uk_near, ...
                           lambda2nodes_nums_uk_near, ...
                           us2nodes_nums_uk_near, ...
                           ws2nodes_nums_uk_near, ...    
                           sigma2nodes_nums_uk_near, ...
                           sigma2nodes_nums_uk_far, ...
                           n_sigma1_uk_near, ...
                           n_lambda2_uk_far,n_sigma2_uk_far, ...
                           unodes_nums_uk_far,wnodes_nums_uk_far, ...
                           Cs,Cg, ...
                           pnodes_nums_uk_far, ...
                           lambda2nodes_nums_uk_far, ...
                           us2nodes_nums_uk_far, ...
                           ws2nodes_nums_uk_far, ...
                           us1nodes_nums_uk_far, ...
                           ws1nodes_nums_uk_far, ...
                           sigma1nodes_nums_uk_far, ...
                           sigma1nodes_nums_uk_near, ...
                           rhos1nodes_nums_uk_near, ...
                           rhos1nodes_nums_uk_far, ...
                           rhos2nodes_nums_uk_near, ...
                           rhos2nodes_nums_uk_far, ...
                           Tmat1,Tmat2,Tmat3,Tmat4,Tmat5, ...
                           LE_to_TE_1,LE_to_TE_2,LE_to_TE_3, ...
                           LE_to_TE_4,LE_to_TE_5, ...
                           n5_el,l_5,phi5_lG,phi5_eta_lG,S_5, ...
                           el5_s_loc_nodes, ...
                           us1nodes_nums_uk_near, ...
                           ws1nodes_nums_uk_near, ...
                           K_nodes_near, ...
                           K_nodes_far, ...
                           E1_nodes_near, ...
                           E1_nodes_far, ...
                           I_nodes_far, ...
                           E2_nodes_far, ...
                           E2_nodes_near, ...
                           D2_nodes_near, ...
                           D1_nodes_near,D2_nodes_far,D1_nodes_far, ...
                           a1,o2,a_n,a_n_minus1,a_n_minus2, ...
                           n_nodes_const_per_spine,n_el_sing);
        end
        %Correction
        JR = sparse(JR);
        correction = -(JR\R);

        %Updated guess of solution
        x = x + correction;

        u_bar(unodes_nums_uk_near) ...
            = x(1:n_u_uk_near);
        w_bar(wnodes_nums_uk_near) ...
            = x(n_u_uk_near+1 ...
                :n_u_uk_near+n_w_uk_near);
        p(pnodes_nums_uk_near) ...
            = x(n_u_uk_near+n_w_uk_near+1 ...
                :n_u_uk_near+n_w_uk_near+n_p_uk_near);
        lambda2(lambda2nodes_nums_uk_near) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near));%#ok
        us2(us2nodes_nums_uk_near) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near));%#ok
        ws2(ws2nodes_nums_uk_near) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near));%#ok
        rhos2(rhos2nodes_nums_uk_near) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near));
        sigma2(sigma2nodes_nums_uk_near) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near));%#ok
        spine_lengths(1:n_spines_near) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near));
        us1(us1nodes_nums_uk_near) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near));%#ok
        ws1(ws1nodes_nums_uk_near) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near));%#ok
        rhos1(rhos1nodes_nums_uk_near) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near));
        sigma1(sigma1nodes_nums_uk_near) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near));%#ok
        u_far(unodes_nums_uk_far-n_v_pre_start_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far)); 
        w_far(wnodes_nums_uk_far-n_v_pre_start_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far));
        p(pnodes_nums_uk_far(n_p_sep+1:end)) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep));
        lambda2(lambda2nodes_nums_uk_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                  +n_lambda2_uk_far-1));%#ok
        us2(us2nodes_nums_uk_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +n_lambda2_uk_far-1+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                  +n_lambda2_uk_far-1+n_us2_uk_far-1));%#ok
        ws2(ws2nodes_nums_uk_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +n_lambda2_uk_far-1+n_us2_uk_far-1+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                  +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1));%#ok
        rhos2(rhos2nodes_nums_uk_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                  +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1));
        sigma2(sigma2nodes_nums_uk_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                  +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1));%#ok
        spine_lengths(n_spines_near+1:end) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                 +1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                  +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                  +n_spines_far-1));
        us1(us1nodes_nums_uk_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                 +n_spines_far-1+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                  +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                  +n_spines_far-1+n_us1_uk_far-1));%#ok
        ws1(ws1nodes_nums_uk_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                 +n_spines_far-1+n_us1_uk_far-1+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                  +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                  +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1));%#ok
        rhos1(rhos1nodes_nums_uk_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                 +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                  +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                  +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1));
        sigma1(sigma1nodes_nums_uk_far) ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                 +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+1) ...
                :(n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                  +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                  +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                  +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                  +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                  +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1));%#ok
              
        if theta_m > change
            A = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                   +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                   +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                   +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                   +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                   +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1+2));
        else
            A = 0;
        end
        
        
        [Nodes_rz,~] ...
            = nodes_relocator_split_v02(spine_lengths, ...
                                        spine_feet_locator,n_spines, ...
                                        n_spines_incr,n_v,alpha_s, ...
                                        n_nodes_const_per_spine, ...
                                        n_el_sing);
        %Measured contact angle
        r_le = Nodes_rz(l_1(1,:),1);
        z_le = Nodes_rz(l_1(1,:),2);
        min_r_le = min(r_le);
        min_z_le = min(z_le);
        tan1_r = (phi1_xi(:,2)')*(r_le-min_r_le);
        tan1_z = (phi1_xi(:,2)')*(z_le-min_z_le);
        theta_m = atan2(tan1_z,-tan1_r);
        %Finding the lambda constant of the eigen-solution
        lambda_eig = pi/theta_m;      
        
        theta_c ...
            = x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
                 +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
                 +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
                 +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
                 +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
                 +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1+1));
        theta_c = mod(theta_c,2*pi);
        if theta_c > pi
            theta_c = 2*pi-theta_c;
        elseif theta_c < 0
            theta_c = 0;
        end  
        
        x((n_u_uk_near+n_w_uk_near+n_p_uk_near ...
           +n_lambda2_uk_near+n_us2_uk_near+n_ws2_uk_near+n_rhos2_uk_near+n_sigma2_uk_near ...
           +n_spines_near+n_us1_uk_near+n_ws1_uk_near+n_rhos1_uk_near+n_sigma1_uk_near ...
           +n_u_uk_far+n_w_uk_far+n_p_uk_far-n_p_sep ...
           +n_lambda2_uk_far-1+n_us2_uk_far-1+n_ws2_uk_far-1+n_rhos2_uk_far-1+n_sigma2_uk_far-1 ...
           +n_spines_far-1+n_us1_uk_far-1+n_ws1_uk_far-1+n_rhos1_uk_far-1+n_sigma1_uk_far-1+1)) ...
            = theta_c;  

        %Current error
        norm_err1 = norm(correction(x==0),Inf);
        norm_err2 = norm((correction(x~=0)./x(x~=0)),Inf);
        norm_err = max(norm_err1,norm_err2)%#ok
        
        disp(['theta_c = ',num2str(180*theta_c/pi)])
        disp(['U_cl = ',num2str(3 ...
                                *( a_n       *Nodes_rz(1,1) ...
                                  -a_n_minus1*Nodes_rz_minus1(1,1) ...
                                  +a_n_minus2*Nodes_rz_minus2(1,1) ...
                                 ) ...
                                *U_dim ...
                                /(2*delta_t) ...
                               ),' m/s'])
        %%%%%%%%
        if theta_m > change
            x = [u_bar(unodes_nums_uk_near); ...
                 w_bar(wnodes_nums_uk_near); ...
                 p(pnodes_nums_uk_near); ...
                 lambda2(lambda2nodes_nums_uk_near); ...
                 us2(us2nodes_nums_uk_near); ...
                 ws2(ws2nodes_nums_uk_near); ...
                 rhos2(rhos2nodes_nums_uk_near); ...
                 sigma2(sigma2nodes_nums_uk_near); ...
                 spine_lengths(spine_nums_uk_near);...
                 us1(us1nodes_nums_uk_near); ...
                 ws1(ws1nodes_nums_uk_near); ...
                 rhos1(rhos1nodes_nums_uk_near); ...
                 sigma1(sigma1nodes_nums_uk_near); ...
                 u_far(unodes_nums_uk_far-n_v_pre_start_far); ...
                 w_far(wnodes_nums_uk_far-n_v_pre_start_far); ...
                 p(pnodes_nums_uk_far(n_p_sep+1:end)); ...
                 lambda2(lambda2nodes_nums_uk_far);...
                 us2(us2nodes_nums_uk_far); ...
                 ws2(ws2nodes_nums_uk_far); ...
                 rhos2(rhos2nodes_nums_uk_far); ...
                 sigma2(sigma2nodes_nums_uk_far); ...
                 spine_lengths(spine_nums_uk_far);
                 us1(us1nodes_nums_uk_far); ...
                 ws1(ws1nodes_nums_uk_far); ...
                 rhos1(rhos1nodes_nums_uk_far); ...
                 sigma1(sigma1nodes_nums_uk_far); ...
                 theta_c; ...
                 A]; 
             %Finding the residual associated to new point found using the
        %Jacobian
        R = Res_finder_BDF2_A_v42(n_v_near,n_p_near,n_spines_near, ...
                         n_v_far,n_p_far,n_spines_far, ...
                         theta_c, ...
                         u_bar,w_bar,p, ...
                         lambda2,us2,ws2,rhos2,sigma2, ...
                         us1,ws1,rhos1,sigma1, ...
                         n_v_pre_start_far, ...
                         u_far,w_far, ...
                         n_p_sep, ...
                         A,l,Nodes_rz,n_Gaussian_Q,phi_G, ...
                         xi_G,eta_G,T,W_G,gr,gz,Re,delta_t,St, ...
                         Nodes_rz_minus1,Nodes_rz_minus2, ...
                         u_minus1,u_minus2,w_minus1,w_minus2, ...
                         lp,psi_G,psi_star_G, ...
                         n_el_near,n1_el_near,l_1,l1_1, ...
                         n_lGaussian_Q, W_lG,...
                         phi1_xi_lG,phi1_lG,alpha_1, ...
                         Lg,Dg,Ca,Eg,Bg,Tg,Cg, ...
                         pg,rhos1_minus1,rhos1_minus2, ...
                         contact_line,c1,c2, ...
                         phi1_xi,n_v_sep, ...
                         n2_el_near,l_2,l2_2, ...
                         phi2_eta_lG,phi2_lG,alpha_2, ...
                         Be,Ls,Ds,Es,Ts,Cs, ...
                         u_s,w_s, ...
                         rhos2_minus1,rhos2_minus2, ...
                         n4_el,l_4,l4_4, ...
                         phi4_xi_lG,phi4_lG,alpha_4, ...
                         n_el,n_p_pre_start_far,n1_el,n2_el,n3_el, ...
                         n_spines_pre_start_far,apex,n_spines, ...
                         theta_a, ...
                         l_3,phi3_xi_lG,phi3_lG,alpha_3, ...
                         alpha_5,So, ...
                         n_Mr_near,n_Mz_near,n_C_near, ...
                         n_S2_near,n_I_near,n_E2_near, ...
                         n_D2_near,n_T2_near, ...
                         n_S1_near,n_K_near,n_E1_near, ...
                         n_D1_near,n_T1_near, ...
                         n_Mr_far,n_Mz_far,n_C_far, ...
                         n_S2_far,n_I_far,n_E2_far, ...
                         n_D2_far,n_T2_far, ...
                         n_S1_far,n_K_far,n_E1_far, ...
                         n_D1_far,n_T1_far, ...
                         Mr_nodes_near,Mz_nodes_near, ...
                         C_nodes_near, ...
                         S2_nodes_near,I_nodes_near, ...
                         E2_nodes_near, ...
                         D2_nodes_near,T2_nodes_near, ...
                         S1_nodes_near,K_nodes_near, ...
                         E1_nodes_near, ...
                         D1_nodes_near,T1_nodes_near, ...
                         Mr_nodes_far,Mz_nodes_far, ...
                         C_nodes_far, ...
                         S2_nodes_far,I_nodes_far, ...
                         E2_nodes_far, ...
                         D2_nodes_far,T2_nodes_far, ...
                         S1_nodes_far,K_nodes_far, ...
                         E1_nodes_far, ...
                         D1_nodes_far,T1_nodes_far, ...
                         Tmat1,Tmat2,Tmat3,Tmat4,Tmat5, ...
                         LE_to_TE_1,LE_to_TE_2,LE_to_TE_3, ...
                         LE_to_TE_4,LE_to_TE_5, ...
                         n5_el,l_5,phi5_lG,phi5_eta_lG, ...
                         a1,o2,a_n,a_n_minus1,a_n_minus2, ...
                         n_el_sing,press_lim_node_solid, ...
                         press_lim_node_gas);
        else
            if A ~= 0
                for cc = 2:n_v_near
                    r_pp = Nodes_rz(cc,1)-Nodes_rz(1,1);
                    z_pp = Nodes_rz(cc,2)-Nodes_rz(1,2);
                    theta_pol = atan2(z_pp,r_pp);
                    phi_pp = pi - theta_m - theta_pol;
                    theta_pp = lambda_eig*phi_pp;
                    c_theta_pp = cos(theta_pp);
                    s_theta_pp = sin(theta_pp);
                    rho_l_minus2_pp = (r_pp^2+z_pp^2)^((lambda_eig-2)/2);
                    u_check_pp = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
                                               rho_l_minus2_pp,c_theta_pp, ...
                                               s_theta_pp);
                    w_check_pp = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
                                               rho_l_minus2_pp,c_theta_pp, ...
                                               s_theta_pp);
                    u_bar(cc) = u_bar(cc) + A*u_check_pp;
                    w_bar(cc) = w_bar(cc) + A*w_check_pp;
                end
            end
            A = 0;
            x = [u_bar(unodes_nums_uk_near); ...
                 w_bar(wnodes_nums_uk_near); ...
                 p(pnodes_nums_uk_near); ...
                 lambda2(lambda2nodes_nums_uk_near); ...
                 us2(us2nodes_nums_uk_near); ...
                 ws2(ws2nodes_nums_uk_near); ...
                 rhos2(rhos2nodes_nums_uk_near); ...
                 sigma2(sigma2nodes_nums_uk_near); ...
                 spine_lengths(spine_nums_uk_near);...
                 us1(us1nodes_nums_uk_near); ...
                 ws1(ws1nodes_nums_uk_near); ...
                 rhos1(rhos1nodes_nums_uk_near); ...
                 sigma1(sigma1nodes_nums_uk_near); ...
                 u_far(unodes_nums_uk_far-n_v_pre_start_far); ...
                 w_far(wnodes_nums_uk_far-n_v_pre_start_far); ...
                 p(pnodes_nums_uk_far(n_p_sep+1:end)); ...
                 lambda2(lambda2nodes_nums_uk_far);...
                 us2(us2nodes_nums_uk_far); ...
                 ws2(ws2nodes_nums_uk_far); ...
                 rhos2(rhos2nodes_nums_uk_far); ...
                 sigma2(sigma2nodes_nums_uk_far); ...
                 spine_lengths(spine_nums_uk_far);
                 us1(us1nodes_nums_uk_far); ...
                 ws1(ws1nodes_nums_uk_far); ...
                 rhos1(rhos1nodes_nums_uk_far); ...
                 sigma1(sigma1nodes_nums_uk_far); ...
                 theta_c]; 
            R = Res_finder_BDF2_noA_v42(n_v_near,n_p_near,n_spines_near, ...
                         n_v_far,n_p_far,n_spines_far, ...
                         theta_c, ...
                         u_bar,w_bar,p, ...
                         lambda2,us2,ws2,rhos2,sigma2, ...
                         us1,ws1,rhos1,sigma1, ...
                         n_v_pre_start_far, ...
                         u_far,w_far, ...
                         n_p_sep, ...
                         l,Nodes_rz,n_Gaussian_Q,phi_G, ...
                         xi_G,eta_G,T,W_G,gr,gz,Re,delta_t,St, ...
                         Nodes_rz_minus1,Nodes_rz_minus2, ...
                         u_minus1,u_minus2,w_minus1,w_minus2, ...
                         lp,psi_G,psi_star_G, ...
                         n_el_near,n1_el_near,l_1,l1_1, ...
                         n_lGaussian_Q, W_lG,...
                         phi1_xi_lG,phi1_lG,alpha_1, ...
                         Lg,Dg,Ca,Eg,Bg,Tg,Cg, ...
                         pg,rhos1_minus1,rhos1_minus2, ...
                         contact_line,c1,c2, ...
                         n_v_sep, ...
                         n2_el_near,l_2,l2_2, ...
                         phi2_eta_lG,phi2_lG,alpha_2, ...
                         Be,Ls,Ds,Es,Ts,Cs, ...
                         u_s,w_s, ...
                         rhos2_minus1,rhos2_minus2, ...
                         n4_el,l_4,l4_4, ...
                         phi4_xi_lG,phi4_lG,alpha_4, ...
                         n_el,n_p_pre_start_far,n1_el,n2_el,n3_el, ...
                         n_spines_pre_start_far,apex,n_spines, ...
                         theta_a, ...
                         l_3,phi3_xi_lG,phi3_lG,alpha_3, ...
                         alpha_5,So, ...
                         n_Mr_near,n_Mz_near,n_C_near, ...
                         n_S2_near,n_I_near,n_E2_near, ...
                         n_D2_near,n_T2_near, ...
                         n_S1_near,n_K_near,n_E1_near, ...
                         n_D1_near,n_T1_near, ...
                         n_Mr_far,n_Mz_far,n_C_far, ...
                         n_S2_far,n_I_far,n_E2_far, ...
                         n_D2_far,n_T2_far, ...
                         n_S1_far,n_K_far,n_E1_far, ...
                         n_D1_far,n_T1_far, ...
                         Mr_nodes_near,Mz_nodes_near, ...
                         C_nodes_near, ...
                         S2_nodes_near,I_nodes_near, ...
                         E2_nodes_near, ...
                         D2_nodes_near,T2_nodes_near, ...
                         S1_nodes_near,K_nodes_near, ...
                         E1_nodes_near, ...
                         D1_nodes_near,T1_nodes_near, ...
                         Mr_nodes_far,Mz_nodes_far, ...
                         C_nodes_far, ...
                         S2_nodes_far,I_nodes_far, ...
                         E2_nodes_far, ...
                         D2_nodes_far,T2_nodes_far, ...
                         S1_nodes_far,K_nodes_far, ...
                         E1_nodes_far, ...
                         D1_nodes_far,T1_nodes_far, ...
                         Tmat1,Tmat2,Tmat3,Tmat4,Tmat5, ...
                         LE_to_TE_1,LE_to_TE_2,LE_to_TE_3, ...
                         LE_to_TE_4,LE_to_TE_5, ...
                         n5_el,l_5,phi5_lG,phi5_eta_lG, ...
                         a1,o2,a_n,a_n_minus1,a_n_minus2, ...
                         n_el_sing);
        end
        norm_R = norm(R,Inf)%#ok
    end
    time_vec(it+1) = time_vec(it) + delta_t;
    
    [Nodes_rz,R_spines] ...
                = nodes_relocator_split_v02(spine_lengths, ...
                                            spine_feet_locator,n_spines, ...
                                            n_spines_incr,n_v,alpha_s, ...
                                            n_nodes_const_per_spine, ...
                                            n_el_sing);
    %Measured contact angle
    r_le = Nodes_rz(l_1(1,:),1);
    z_le = Nodes_rz(l_1(1,:),2);
    min_r_le = min(r_le);
    min_z_le = min(z_le);
    tan1_r = (phi1_xi(:,2)')*(r_le-min_r_le);
    tan1_z = (phi1_xi(:,2)')*(z_le-min_z_le);
    theta_m = atan2(tan1_z,-tan1_r);
    %Finding the lambda constant of the eigen-solution
    lambda_eig = pi/theta_m;
    if theta_c > change
        u(1) = u_bar(1);
        w(1) = w_bar(1);
        for cc = 2:n_v_pre_start_far
            r_pp = Nodes_rz(cc,1)-Nodes_rz(1,1);
            z_pp = Nodes_rz(cc,2)-Nodes_rz(1,2);
            theta_pol = atan2(z_pp,r_pp);
            phi_pp = pi - theta_m - theta_pol;
            theta_pp = lambda_eig*phi_pp;
            c_theta_pp = cos(theta_pp);
            s_theta_pp = sin(theta_pp);
            rho_l_minus2_pp = (r_pp^2+z_pp^2)^((lambda_eig-2)/2);
            u_check_pp = check_u_of_rz(r_pp,z_pp,lambda_eig, ...
                                       rho_l_minus2_pp,c_theta_pp, ...
                                       s_theta_pp);
            w_check_pp = check_w_of_rz(r_pp,z_pp,lambda_eig, ...
                                       rho_l_minus2_pp,c_theta_pp, ...
                                       s_theta_pp);
            u(cc) = u_bar(cc) + A*u_check_pp;
            w(cc) = w_bar(cc) + A*w_check_pp;
        end
    else
        u(1:n_v_pre_start_far) = u_bar(1:n_v_pre_start_far);
        w(1:n_v_pre_start_far) = w_bar(1:n_v_pre_start_far);
    end
    u(n_v_start_far:end) = u_far;
    w(n_v_start_far:end) = w_far;
       
    %saving converged result
    save('time_vec.mat','time_vec')
    save(['u_',num2str(it),'.mat'],'u')
    save(['w_',num2str(it),'.mat'],'w')
    save(['p_',num2str(it),'.mat'],'p')
    save(['lambda2_',num2str(it),'.mat'],'lambda2')
    save(['us2_',num2str(it),'.mat'],'us2')
    save(['ws2_',num2str(it),'.mat'],'ws2')
    save(['rhos2_',num2str(it),'.mat'],'rhos2')
    save(['sigma2_',num2str(it),'.mat'],'sigma2')
    save(['spine_lengths_',num2str(it),'.mat'],'spine_lengths')
    save(['us1_',num2str(it),'.mat'],'us1')
    save(['ws1_',num2str(it),'.mat'],'ws1')
    save(['rhos1_',num2str(it),'.mat'],'rhos1')
    save(['sigma1_',num2str(it),'.mat'],'sigma1')
    save(['theta_c_',num2str(it),'.mat'],'theta_c')
    save(['theta_m_',num2str(it),'.mat'],'theta_m')
    save(['A_',num2str(it),'.mat'],'A')
    save('it.mat','it')
    
    %Storing theta_c and U_cl
    theta_c_vec(it+1) = theta_c;
    theta_m_vec(it+1) = theta_m;
    U_cl_vec(it+1) = 3 ...
                     *( a_n       *Nodes_rz(1,1) ...
                       -a_n_minus1*Nodes_rz_minus1(1,1) ...
                       +a_n_minus2*Nodes_rz_minus2(1,1) ...
                      )/(2*delta_t);
    save('theta_c_vec.mat','theta_c_vec')
    save('theta_m_vec.mat','theta_m_vec')
    save('U_cl_vec.mat','U_cl_vec')
    
    disp(['U_cl = ',num2str(3 ...
                            *( a_n*Nodes_rz(1,1) ...
                              -a_n_minus1*Nodes_rz_minus1(1,1) ...
                              +a_n_minus2*Nodes_rz_minus2(1,1) ...
                             ) ...
                            *U_dim/(2*delta_t)), 'm/s'])
    
    %Updating prior times
    u_minus2 = u_minus1;
    w_minus2 = w_minus1;
    rhos2_minus2 = rhos2_minus1;
    rhos1_minus2 = rhos1_minus1;
    Nodes_rz_minus2 = Nodes_rz_minus1;
    u_minus1 = u;
    w_minus1 = w;
    rhos2_minus1 = rhos2;
    rhos1_minus1 = rhos1;
    Nodes_rz_minus1 = Nodes_rz;
    
    %Plotting current velocity field
    figure(Vels_near)
    quiver(Nodes_rz(1:n_v_near,1), ...
           Nodes_rz(1:n_v_near,2), ...
           u(1:n_v_near), ...
           w(1:n_v_near),'color',[0 0 0])
    % vector used for the curved sides
    hold on
    %plotting boundaries
    for ii = 1:n1_el_near
        xvec =   Nodes_rz(l_1(ii,1),1)*phi_l ...
               + Nodes_rz(l_1(ii,2),1)*phi_c ...
               + Nodes_rz(l_1(ii,3),1)*phi_r;
        yvec =   Nodes_rz(l_1(ii,1),2)*phi_l ...
               + Nodes_rz(l_1(ii,2),2)*phi_c ...
               + Nodes_rz(l_1(ii,3),2)*phi_r;
        plot(xvec,yvec,'b','LineWidth',2)
    end
    for ii = 1:n2_el_near
        xvec =  Nodes_rz(l_2(ii,1),1)*phi_l ...
              + Nodes_rz(l_2(ii,2),1)*phi_c ...
              + Nodes_rz(l_2(ii,3),1)*phi_r;
        yvec =  Nodes_rz(l_2(ii,1),2)*phi_l ...
              + Nodes_rz(l_2(ii,2),2)*phi_c ...
              + Nodes_rz(l_2(ii,3),2)*phi_r;
        plot(xvec,yvec,'g','LineWidth',2)
    end
    for ii = 1:n5_el
        xvec =  Nodes_rz(l_5(ii,1),1)*phi_l ...
              + Nodes_rz(l_5(ii,2),1)*phi_c ...
              + Nodes_rz(l_5(ii,3),1)*phi_r;
        yvec =  Nodes_rz(l_5(ii,1),2)*phi_l ...
              + Nodes_rz(l_5(ii,2),2)*phi_c ...
              + Nodes_rz(l_5(ii,3),2)*phi_r;
        plot(xvec,yvec,'r','LineWidth',2)
    end
    minx = min(Nodes_rz(1:n_v_near,1));
    maxx = max(Nodes_rz(1:n_v_near,1));
    wi = maxx-minx;
    title(['timestep = ',num2str(it)])
    set(gca,'FontSize',16,'xlim',[minx-wi/10 maxx+wi/10])
    axis equal
    drawnow
    hold off

    figure(Vels_far)
    quiver(Nodes_rz(n_v_start_far:end,1), ...
           Nodes_rz(n_v_start_far:end,2), ...
           u_far, ...
           w_far,'color',[0 0 0])
    hold on
    %plotting boundaries
    for ii = n1_el_near+1:n1_el
        xvec = Nodes_rz(l_1(ii,1),1)*phi_l ...
               +Nodes_rz(l_1(ii,2),1)*phi_c ...
               +Nodes_rz(l_1(ii,3),1)*phi_r;
        yvec = Nodes_rz(l_1(ii,1),2)*phi_l ...
               +Nodes_rz(l_1(ii,2),2)*phi_c ...
               +Nodes_rz(l_1(ii,3),2)*phi_r;
        plot(xvec,yvec,'b','LineWidth',2)
    end
    for ii = n2_el_near+1:n2_el
        xvec =  Nodes_rz(l_2(ii,1),1)*phi_l ...
               +Nodes_rz(l_2(ii,2),1)*phi_c ...
               +Nodes_rz(l_2(ii,3),1)*phi_r;
        yvec =  Nodes_rz(l_2(ii,1),2)*phi_l ...
               +Nodes_rz(l_2(ii,2),2)*phi_c ...
               +Nodes_rz(l_2(ii,3),2)*phi_r;
        plot(xvec,yvec,'g','LineWidth',2)
    end
    for ii = 1:n3_el
        xvec =  Nodes_rz(l_3(ii,1),1)*phi_l ...
               +Nodes_rz(l_3(ii,2),1)*phi_c ...
               +Nodes_rz(l_3(ii,3),1)*phi_r;
        yvec =  Nodes_rz(l_3(ii,1),2)*phi_l ...
               +Nodes_rz(l_3(ii,2),2)*phi_c ...
               +Nodes_rz(l_3(ii,3),2)*phi_r;
        plot(xvec,yvec,'r','LineWidth',2)
    end
    for ii = 1:n4_el
        xvec =  Nodes_rz(l_4(ii,1),1)*phi_l ...
               +Nodes_rz(l_4(ii,2),1)*phi_c ...
               +Nodes_rz(l_4(ii,3),1)*phi_r;
        yvec =  Nodes_rz(l_4(ii,1),2)*phi_l ...
               +Nodes_rz(l_4(ii,2),2)*phi_c ...
               +Nodes_rz(l_4(ii,3),2)*phi_r;
        plot(xvec,yvec,'r','LineWidth',2)
    end
    title(['timestep = ',num2str(it)])
    set(gca,'FontSize',16,'xlim', ...
        [0 1.1*max(Nodes_rz(n_v_start_far:end,1))])
    axis equal                   
    drawnow
    hold off
    
    %plotting theta_c of U_cl
    figure(theta_of_U_cl)
    plot(U_cl_vec(1:it+1)*U_dim,theta_c_vec(1:it+1)*180/pi,'-x','LineWidth',2)
    grid on
    set(gca,'FontSize',16)
    ylabel('[$^o$]   ','interpreter','latex','rotation',0,'FontSize',24)
    xlabel('m/s','interpreter','latex','FontSize',24)
    drawnow
end
